var window= floaty.window(
  
   <vertical>
   <linear>
   <button id="action" text="助" w="40" h="40" color="#ffffff"  margin="0" bg="#99000000"/>
   </linear>
   </vertical>
 
);
var window2 = floaty.window(
  
 
   <grid id="an" spanCount="4" h="*">
            <text text="{{this}}" color="#ffffff" gravity="center" h="40" w="40" margin="0 1 1 0" bg="#99000000"/>
   </grid> 
 
 
);
xs=0;
var execution = null;

//记录按键被按下时的触摸坐标
var x = 0,
    y = 0;
//记录按键被按下时的悬浮窗位置
var windowX, windowY;
//记录按键被按下的时间以便判断长按等动作
var downTime;
window.action.setOnTouchListener(function(view, event) {
    switch (event.getAction()) {
        case event.ACTION_DOWN:
            x = event.getRawX();
            y = event.getRawY();
            windowX = window.getX();
            windowY = window.getY();
            downTime = new Date().getTime();
            return true;
        case event.ACTION_MOVE:
            //移动手指时调整悬浮窗位置
            if(xs==0){
            window.setPosition(windowX + (event.getRawX() - x),
                windowY + (event.getRawY() - y));}
            // if(xs==1){ 
             //   window2.setPosition(windowX + (event.getRawX() - x),
            //    windowY + (event.getRawY() - y)+82);
          // }
            //如果按下的时间超过1.5秒判断为长按，退出脚本
            return true;
        case event.ACTION_UP:
            //手指弹起时如果偏移很小则判断为点击
            if (Math.abs(event.getRawY() - y) < 5 && Math.abs(event.getRawX() - x) < 5) {
                threads.start(function() {
                    onClick();
                });
            }
            return true;
    }
    return true;
});
window2.setPosition(10000,10000);
      
function onClick() {
    if (xs==1) {
      xs=0;
      window2.setPosition(10000,10000);
ui.run(()=>{window.action.text("助");});        
    } else {
        xs=1;
        window2.setPosition(window.getX(),window.getY()+82);
        ui.run(()=>{window.action.text("_");});       
    }
}

function ssdjs() {
 var sjpy=3500;//时间偏移
    function ssdsysj() {
        var apple0 = new Date((new Date().getTime()) + sjpy);
        var appleh = apple0.getHours();
        var applem = apple0.getMinutes();
        var apples = apple0.getSeconds();
        var applezs = appleh * 60 * 60 + applem * 60 + apples;
        var applesy = applezs % 2400;
        return applesy;
    }

    function sjgsh(fyxsj) {
        var tmp0 = parseInt(fyxsj / 60);
        var tmp1 = fyxsj % 60;
        return tmp0 + ":" + tmp1;
    }

    return sjgsh(2400 - ssdsysj());
}

var jb=["0615不完美版快手小游戏","百度云盘模块","报错显示","倍镜","查看","打包后脚本","带验证imei时间注册码脚本","调用相机并保存至指定路径","读取特定行","短信验证码","发送通知","给脚本加密码,支持所有脚本。密码是 拜见宫主大人","机器人凤落","加了toast的快手小游戏代码0616","截图控制台","聚看点","空","控件属性收集","美团","全局半透明背景","视频播放器","刷房3","缩略图成功了(1)","坦克大战","跳转到qq名片","图片放大旋转观察器(1)","玩吧连连看挂机刷经验，密码 我爱你","伪三维立体","五子棋","线球3","线球多点触控版","线球简单版","心动魔方（快手小游戏）","悬浮窗截图","悬浮滑动按钮","压缩zip","压缩zip多个","一键生成修改工具","意图","用qq账号发邮件(1)","远程控制手机被控端","远程控制手机控制端","支付宝蚂蚁庄园登山赛","直接打开某人QQ","众包","bmob-min","J群主，调用","J群主","md5","QQ分享","QQ离线TTS语音","QQ文字转语音消息","shell开关飞行"];
var nr=[
b64(""),
b64(""),
b64("Y29uc29sZS5lcnJvcigi5omT5YyF5Ye66ZSZ5ZWmfiDkvb/nlKjmlofku7blpLnmiZPljIXor7fmiorkuLvohJrmnKzmlLnlkI3kuLptYWluLmpzIik7DQo="),
b64("cmVxdWVzdFNjcmVlbkNhcHR1cmUoKTsKdmFyIGNyZWF0ZSA9IGZ1bmN0aW9uKCkgewogICAgdmFyIGZsb2F0ZSA9IGZsb2F0eS5yYXdXaW5kb3coCiAgICAgICAgPGltZyBpZD0iaW1nInNjYWxlVHlwZT0iZml0WFkidz0iNjAwcHgiaD0iNDAwcHgiLz4KICAgICk7CiAgICBmbG9hdGUuc2V0UG9zaXRpb24oZGV2aWNlLmhlaWdodC8yLTMyMCwgZGV2aWNlLndpZHRoLTQ0MCk7CiAgICBmbG9hdGUuc2V0U2l6ZSg2NDAsIDQ0MCk7CiAgICBmbG9hdGUuc2V0VG91Y2hhYmxlKGZhbHNlKTsKICAgIHJldHVybiBmbG9hdGU7Cn0KdmFyIGsgPSBmbG9hdHkucmF3V2luZG93KAogICAgPGhvcml6b250YWw+CiAgICAgICAgPHZlcnRpY2FsIHc9IjE2MHB4Img9IjExMHB4Ij4KICAgICAgICAgICAgPGZyYW1lIHc9IjE2MHB4Img9IjVweCJiZz0iIzU1MDBmZmZmIi8+CiAgICAgICAgICAgIDxmcmFtZSB3PSIxNjBweCJoPSI1cHgiYmc9IiM1NTAwZmZmZiJtYXJnaW5Ub3A9IjEwMHB4Ii8+CiAgICAgICAgPC92ZXJ0aWNhbD4KICAgICAgICA8ZnJhbWUgaWQ9InhrImJnPSIjNTUwMGZmZmYidz0iNjBweCJoPSIxMTBweCI+CiAgICAgICAgICAgIDxidXR0b24gdz0iNjBweCJoPSIxMzBweCJpZD0ibW92ZSJtYXJnaW5Ub3A9Ii0xMHB4Im1hcmdpbkxlZnQ9Ii01cHgiLz4KICAgICAgICA8L2ZyYW1lPgogICAgPC9ob3Jpem9udGFsPgopOwprLnNldFBvc2l0aW9uKGRldmljZS5oZWlnaHQvMi03NSwgZGV2aWNlLndpZHRoLzItNjApOwprLnNldFNpemUoMjEwLCAxMjApOwprLnNldFRvdWNoYWJsZSh0cnVlKTsKCnRocmVhZHMuc3RhcnQoZnVuY3Rpb24oKSB7CiAgICB2YXIgZmxvYXRlID0gY3JlYXRlKCk7CiAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgIHJlZnJlc2goZmxvYXRlLGsuZ2V0WCgpLGsuZ2V0WSgpKTsKICAgIH0KfSk7CnZhciByZWZyZXNoID0gZnVuY3Rpb24oZmxvYXRlLGt4LGt5KSB7CiAgICB1aS5ydW4oKCkgPT4gewogICAgICAgIGZsb2F0ZS5pbWcuc2V0U291cmNlKAogICAgICAgICAgICBpbWFnZXMuY2xpcChjYXB0dXJlU2NyZWVuKCksIAogICAgICAgICAgICBreCxreSwxNTAsMTUwKQogICAgICAgICk7CiAgICB9KTsKfQprLm1vdmUuc2V0T25Ub3VjaExpc3RlbmVyKGZ1bmN0aW9uKHZpZXcsIGV2ZW50KSB7CiAgICBzd2l0Y2ggKGV2ZW50LmdldEFjdGlvbigpKSB7CiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fRE9XTjoKICAgICAgICAgICAgeCA9IGV2ZW50LmdldFJhd1goKTsKICAgICAgICAgICAgeSA9IGV2ZW50LmdldFJhd1koKTsKICAgICAgICAgICAgd2luZG93WCA9IGsuZ2V0WCgpOwogICAgICAgICAgICB3aW5kb3dZID0gay5nZXRZKCk7CgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9NT1ZFOgogICAgICAgICAgICAvL+enu+WKqOaJi+aMh+aXtuiwg+aVtOaCrOa1rueql+S9jee9rgogICAgICAgICAgICBrLnNldFBvc2l0aW9uKHdpbmRvd1ggKyAoZXZlbnQuZ2V0UmF3WCgpIC0geCksCiAgICAgICAgICAgICAgICB3aW5kb3dZICsgKGV2ZW50LmdldFJhd1koKSAtIHkpKTsKCiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgfQogICAgcmV0dXJuIHRydWU7Cn0pOw0K"),
b64("dmFyIGVuY29kZV92ZXJzaW9uID0gJ3NvanNvbi52NCc7CnZhciBfXzB4MTIxOWQgPSBbJ1lqNWgnLCAnWVQxaScsICdaVzVrJywgJ2JHOW4nLCAnWVQ1aSddOwooZnVuY3Rpb24oXzB4NTIxODQ1LCBfMHgzMThhNTApIHsKICAgIHZhciBfMHg0MjM0YmQgPSBmdW5jdGlvbihfMHgyMjg2MTcpIHsKICAgICAgICB3aGlsZSAoLS1fMHgyMjg2MTcpIHsKICAgICAgICAgICAgXzB4NTIxODQ1WydwdXNoJ10oXzB4NTIxODQ1WydzaGlmdCddKCkpOwogICAgICAgIH0KICAgIH07CiAgICBfMHg0MjM0YmQoKytfMHgzMThhNTApOwp9KF9fMHgxMjE5ZCwgMHgxODQpKTsKdmFyIF8weDdkNWUgPSBmdW5jdGlvbihfMHgyZDQ2ZjIsIF8weDNmZThmZikgewogICAgXzB4MmQ0NmYyID0gXzB4MmQ0NmYyIC0gMHgwOwogICAgdmFyIF8weDEyMzk2MyA9IF9fMHgxMjE5ZFtfMHgyZDQ2ZjJdOwogICAgaWYgKF8weDdkNWVbJ2luaXRpYWxpemVkJ10gPT09IHVuZGVmaW5lZCkgewogICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIF8weDIyOWMzOCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdHlwZW9mIHByb2Nlc3MgPT09ICdvYmplY3QnICYmIHR5cGVvZiByZXF1aXJlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBnbG9iYWwgPT09ICdvYmplY3QnID8gZ2xvYmFsIDogdGhpczsKICAgICAgICAgICAgdmFyIF8weDJkZTcxYSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvPSc7CiAgICAgICAgICAgIF8weDIyOWMzOFsnYXRvYiddIHx8IChfMHgyMjljMzhbJ2F0b2InXSA9IGZ1bmN0aW9uKF8weDQwNGViNCkgewogICAgICAgICAgICAgICAgdmFyIF8weDVhNjY2MSA9IFN0cmluZyhfMHg0MDRlYjQpWydyZXBsYWNlJ10oLz0rJC8sICcnKTsKICAgICAgICAgICAgICAgIGZvciAodmFyIF8weDIxZjAxNyA9IDB4MCwgXzB4MzhlYjAxLCBfMHgyZDE0NzcsIF8weDI1OWExZiA9IDB4MCwgXzB4NTIyOTg3ID0gJyc7IF8weDJkMTQ3NyA9IF8weDVhNjY2MVsnY2hhckF0J10oXzB4MjU5YTFmKyspOyB+XzB4MmQxNDc3ICYmIChfMHgzOGViMDEgPSBfMHgyMWYwMTcgJSAweDQgPyBfMHgzOGViMDEgKiAweDQwICsgXzB4MmQxNDc3IDogXzB4MmQxNDc3LCBfMHgyMWYwMTcrKyAlIDB4NCkgPyBfMHg1MjI5ODcgKz0gU3RyaW5nWydmcm9tQ2hhckNvZGUnXSgweGZmICYgXzB4MzhlYjAxID4+ICgtMHgyICogXzB4MjFmMDE3ICYgMHg2KSkgOiAweDApIHsKICAgICAgICAgICAgICAgICAgICBfMHgyZDE0NzcgPSBfMHgyZGU3MWFbJ2luZGV4T2YnXShfMHgyZDE0NzcpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIF8weDUyMjk4NzsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSgpKTsKICAgICAgICBfMHg3ZDVlWydiYXNlNjREZWNvZGVVbmljb2RlJ10gPSBmdW5jdGlvbihfMHg1ZDhlMDEpIHsKICAgICAgICAgICAgdmFyIF8weDFmYTNiYSA9IGF0b2IoXzB4NWQ4ZTAxKTsKICAgICAgICAgICAgdmFyIF8weDRkYzdkZSA9IFtdOwogICAgICAgICAgICBmb3IgKHZhciBfMHg0MDU2ZDMgPSAweDAsIF8weDFiYmUwZSA9IF8weDFmYTNiYVsnbGVuZ3RoJ107IF8weDQwNTZkMyA8IF8weDFiYmUwZTsgXzB4NDA1NmQzKyspIHsKICAgICAgICAgICAgICAgIF8weDRkYzdkZSArPSAnJScgKyAoJzAwJyArIF8weDFmYTNiYVsnY2hhckNvZGVBdCddKF8weDQwNTZkMylbJ3RvU3RyaW5nJ10oMHgxMCkpWydzbGljZSddKC0weDIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoXzB4NGRjN2RlKTsKICAgICAgICB9OwogICAgICAgIF8weDdkNWVbJ2RhdGEnXSA9IHt9OwogICAgICAgIF8weDdkNWVbJ2luaXRpYWxpemVkJ10gPSAhIVtdOwogICAgfQogICAgdmFyIF8weDM4NGU3MSA9IF8weDdkNWVbJ2RhdGEnXVtfMHgyZDQ2ZjJdOwogICAgaWYgKF8weDM4NGU3MSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgXzB4MTIzOTYzID0gXzB4N2Q1ZVsnYmFzZTY0RGVjb2RlVW5pY29kZSddKF8weDEyMzk2Myk7CiAgICAgICAgXzB4N2Q1ZVsnZGF0YSddW18weDJkNDZmMl0gPSBfMHgxMjM5NjM7CiAgICB9IGVsc2UgewogICAgICAgIF8weDEyMzk2MyA9IF8weDM4NGU3MTsKICAgIH0KICAgIHJldHVybiBfMHgxMjM5NjM7Cn07CnZhciBhID0gcmFuZG9tKDB4MCwgMHhhKTsKdmFyIGIgPSByYW5kb20oMHgwLCAweGEpOwppZiAoYSA+IGIpIHsKICAgIGNvbnNvbGVbXzB4N2Q1ZSgnMHgwJyldKF8weDdkNWUoJzB4MScpKTsKfSBlbHNlIGlmIChiID4gYSkgewogICAgY29uc29sZVtfMHg3ZDVlKCcweDAnKV0oXzB4N2Q1ZSgnMHgyJykpOwp9IGVsc2UgewogICAgY29uc29sZVtfMHg3ZDVlKCcweDAnKV0oXzB4N2Q1ZSgnMHgzJykpOwp9CmNvbnNvbGVbXzB4N2Q1ZSgnMHgwJyldKF8weDdkNWUoJzB4NCcpKTs7CmVuY29kZV92ZXJzaW9uID0gJ3NvanNvbi52NCc7"),
b64(""),
b64("5rOo5YaM56CBPSI2ZXpSTXM3ZWMxY1B4RnJXL2NGdGtPdFh4UDlHTTU3YmlZYklmczE5aXlOaTJuR1JmRTR1WWkzWmZia3ZMbzlNIjsKCgoKCgoKY29kZT0icVBpSmUwcWd0ZFk3RERwMEh3LzEvdXZVVW42dExFc3Z4Nnp0YmJNWllVb3BVeFpoYmY4NE1MZFlOK3g3UHhzQjlSakFXeGF6cFYzV1BOeWs5cEtLMHRIOHlhdTdtc1dSWVowVzVSeVVPODA5b1BIOGlkV2I2SXdncERJRi96a1hLSm82dGdValJ5emhwTzlCWmVjTE5nPT0iO2V2KCk7CmZ1bmN0aW9uIGV2KCkgewogICAgZXZhbChmdW5jdGlvbiAocCwgYSwgYywgaywgZSwgZCkgewogICAgICAgIGUgPSBmdW5jdGlvbiAoYykgewogICAgICAgICAgICByZXR1cm4gKGMgPCBhID8gIiIgOiBlKHBhcnNlSW50KGMgLyBhKSkpICsgKChjID0gYyAlIGEpID4gMzUgPyBTdHJpbmcuZnJvbUNoYXJDb2RlKGMgKyAyOSkgOiBjLnRvU3RyaW5nKDM2KSk7CiAgICAgICAgfTsKICAgICAgICBpZiAoISIiLnJlcGxhY2UoL14vLCBTdHJpbmcpKSB7CiAgICAgICAgICAgIHdoaWxlIChjLS0pIHsKICAgICAgICAgICAgICAgIGRbZShjKV0gPSBrW2NdIHx8IGUoYyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgayA9IFtmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGRbZV07CiAgICAgICAgICAgIH0sIGV2YWwoIidldlx1MDJjN2FsXHUwMmM3dWFcdTAyYzd0b3InLnNsaWNlKDAsNSkucmVwbGFjZSgnXHUwMmM3JywnJykiKV07CiAgICAgICAgICAgIGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIlxcdysiOwogICAgICAgICAgICB9OwogICAgICAgICAgICBjID0gMTsKICAgICAgICB9CiAgICAgICAga1tjXSA9IGV2YWwoa1tjXSk7CiAgICAgICAgd2hpbGUgKGMtLSkgewogICAgICAgICAgICBpZiAoa1tjXSkgewogICAgICAgICAgICAgICAgcCA9IHAucmVwbGFjZShuZXcgUmVnRXhwKCJcXGIiICsgZShjKSArICJcXGIiLCAiZyIpLCBrW2NdKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICByZXR1cm4gdm9pZCBrWysrYyArIDFdKHApOwogICAgfSgiIFxuMTd7MWc9MWkoMWgsXCIxblwiKS4xMShcInxcIik7fWoocyl7ZyhcIjFqXHVmZjBjMW1cIik7WChwLkIoKSk7fVxuMWdbMV09UCgxZ1sxXSk7XG5GKDFnWzBdPT1wLkIoKXx8MWdbMF09PVwiMW9cIil7MTUoXCIxYzpcIitPIGEoMWdbMV0pLjE0KCkpO0YoMWdbMV08KE8gYSgpKS5EKCkpe2coXCIxbDpcIitPIGEoKS4xNCgpK1wiMWM6XCIrTyBhKDFnWzFdKS4xNCgpK1wiMWVcIik7dygpOzFiKDE2KXt9fX10e2coXCIxa1wiKTt3KCk7MWIoMTYpe319XG56IDFpKG0sIFEpIHtcbiAgICBWIG8obSwgXCJSXCIgKyBRKTtcbn1cblxueiBvKG0sIFEpIHtcbiAgICAxYSBKID0gSS5uLjEwLmUoTShRLCBcIk1cIiksIFwiNVwiKTtcbiAgICAxYSBrID0gSS5uLjguQyhcIjUvNy9kXCIpO1xuICAgIDFhIGkgPSBoLjE5LjYubyhtLCAwKTtcbiAgICBrLkcoSS5uLjguOSwgSiwgSS5uLjEwLmIoTShRLCBcIllcIikpKTtcbiAgICAxYSBVID0gSC5LLmYoay5yKGkpKTtcbiAgICBWIFUuMTMoMywgVS5MKCkpO1xufVxuXG56IE0oMTIsIE4pIHtcbiAgICAxYSBNID0gSC5XLmMuQyhOKTtcbiAgICBNLjE4KEguSy5mKDEyKS5BKCkpO1xuICAgIFYgTS5xKCkuWigwLCAyKTtcbn1cblxueiBUKE4pIHtcbiAgICAxYSAxMiA9IFwiXCI7XG4gICAgeCAoMWEgRSA9IDA7IEUgPCBOOyBFKyspIHtcbiAgICAgICAgMTIgKz0gZi55KFMoMCwgNCkpO1xuICAgIH1cbiAgICBWIDEyO1xufVxudS52KFwiMW5cIixvKGwsXCIxZlx1ZmYwYzFkXCIpKTtcblxuIiwgNjIsIDg3LCAiMHwxfDE2fDR8NjU1MzV8QUVTfEJhc2U2NHxDQkN8Q2lwaGVyfERFQ1JZUFRfTU9ERXxEYXRlfEl2UGFyYW1ldGVyU3BlY3xNZXNzYWdlRGlnZXN0fFBLQ1M1UGFkZGluZ3xTZWNyZXRLZXlTcGVjfFN0cmluZ3xhbGVydHxhbmRyb2lkfGJ5dGVDb250ZW50fGNhdGNofGNpcGhlcnxjb2RlfGNvbnRlbnR8Y3J5cHRvfGRlY29kZXxkZXZpY2V8ZGlnZXN0fGRvRmluYWx8ZXxlbHNlfGVuZ2luZXN8ZXhlY1NjcmlwdHxleGl0fGZvcnxmcm9tQ2hhckNvZGV8ZnVuY3Rpb258Z2V0Qnl0ZXN8Z2V0SU1FSXxnZXRJbnN0YW5jZXxnZXRUaW1lfGl8aWZ8aW5pdHxqYXZhfGphdmF4fGtleXxsYW5nfGxlbmd0aHxtZDV8bnxuZXd8cGFyc2VJbnR8cGFzc3dvcmR8cXE3ODcwNjcwMzN8cmFuZG9tfHJhbmRvbXh8cmVzdWx0fHJldHVybnxzZWN1cml0eXxzZXRDbGlwfHNoYTF8c2xpY2V8c3BlY3xzcGxpdHxzdHJ8c3Vic3RyaW5nfHRvTG9jYWxlU3RyaW5nfHRvYXN0fHRydWV8dHJ5fHVwZGF0ZXx1dGlsfHZhcnx3aGlsZXxcdTUyMzBcdTY3MWZcdTY1ZjZcdTk1ZjR8XHU1NGM4XHU1NGM4XHU1NGM4XHU1NGM4XHU1NGM4XHU1NGM4XHU1NGM4XHU4MTFhXHU2NzJjfFx1NWRmMlx1OGZjN1x1NjcxZnxcdTYyMTFcdTc2ODRxcVx1NTNmN1x1NzgwMVx1NjYyZjc4NzA2NzAzM3xcdTZjZThcdTUxOGNcdTRmZTFcdTYwNmZ8XHU2Y2U4XHU1MThjXHU3ODAxfFx1NmNlOFx1NTE4Y1x1NzgwMWRlY29kZXxcdTZjZThcdTUxOGNcdTc4MDFcdTRlMGRcdTZiNjNcdTc4NmV8XHU2Y2U4XHU1MThjXHU3ODAxXHU5NzVlXHU2NzJjXHU2NzNhXHU2Y2U4XHU1MThjXHU3ODAxfFx1NzNiMFx1NTcyOFx1NjVmNlx1OTVmNHxcdTgwNTRcdTdjZmJxcTc4NzA2NzAzM1x1ODNiN1x1NTNkNlx1NmNlOFx1NTE4Y1x1NzgwMXxcdTgxMWFcdTY3MmN8XHU5MDFhXHU3NTI4Ii5zcGxpdCgifCIpLCAwLCB7fSkpOwp9Cg=="),
b64("Ly/kv53lrZjnmoTmlofku7bot6/lvoQKdmFyIGZpbGVwYXRoPWZpbGVzLmdldFNkY2FyZFBhdGgoKSsiLzAwMi5qcGciOwppbXBvcnRDbGFzcygiYW5kcm9pZC5uZXQuVXJpIik7CmltcG9ydENsYXNzKCJqYXZhLmlvLkZpbGUiKTsKdmFyIGZpbGU9bmV3IEZpbGUoZmlsZXBhdGgpOwp2YXIgVT1uZXcgVXJpLmZyb21GaWxlKGZpbGUpOwpsb2coVSk7CmxvZyhmaWxlcGF0aCk7CmFwcC5zdGFydEFjdGl2aXR5KHsNCiAgICBhY3Rpb246ICJhbmRyb2lkLm1lZGlhLmFjdGlvbi5JTUFHRV9DQVBUVVJFIiwNCiAgICAvL3R5cGU6ICJ0ZXh0LyoiLA0KICAgIGV4dHJhczogew0KICAgICAgIm91dHB1dCI6IFUNCiAgICB9DQp9KTs="),
b64("aW1wb3J0Q2xhc3MoJ2phdmEuaW8uRmlsZScpOwppbXBvcnRDbGFzcygnamF2YS5pby5JT0V4Y2VwdGlvbicpOwppbXBvcnRDbGFzcygnamF2YS5pby5SYW5kb21BY2Nlc3NGaWxlJyk7CmltcG9ydENsYXNzKCdqYXZhLnV0aWwuQXJyYXlMaXN0Jyk7CmltcG9ydENsYXNzKCdqYXZhLnV0aWwuTGlzdCcpOwoKbnVtUmVhZCA9IDEwCmZpbGVQYXRoID0gIi9zdG9yYWdlL2VtdWxhdGVkLzAvU29HYW1lL2xvZy8yMDE4LTA3LTA1LzEucGxheXN0YXRpb24ubG9nIgovLyBmaWxlUGF0aD0iL3NkY2FyZC8xMjMudHh0Igphc2N1ID0gYW5kcm9pZC5vcy5TeXN0ZW1DbG9jay51cHRpbWVNaWxsaXM7CgovL+iwg+eUqOivu+WPluaWueazle+8jOWumuS5ieaWh+S7tuS7peWPiuivu+WPluihjOaVsAoKLy8gLyoqCi8vICAqIOivu+WPluaWh+S7tuacgOWQjk7ooYwKLy8gICog5qC55o2u5o2i6KGM56ym5Yik5pat5b2T5YmN55qE6KGM5pWw77yMCi8vICAqIOS9v+eUqOe7n+iuoeadpeWIpOaWreW9k+WJjeivu+WPluesrE7ooYwKLy8gICogUFM66L6T5Ye655qETGlzdOaYr+WAkuWPme+8jOmcgOimgeWvuUxpc3Tlj43ovazovpPlh7oKLy8gICogQHBhcmFtIGZpbGUg5b6F5paH5Lu2Ci8vICAqIEBwYXJhbSBudW1SZWFkIOivu+WPlueahOihjOaVsAovLyAgKiBAcmV0dXJuIExpc3Q8U3RyaW5nPgovLyAgKi8KZnVuY3Rpb24gcmVhZExhc3ROTGluZShmaWxlLCBudW1SZWFkKSB7CiAgICAvLyDlrprkuYnnu5Pmnpzpm4YKICAgIHJlc3VsdCA9IG5ldyBBcnJheUxpc3QoKTsKICAgIC8v6KGM5pWw57uf6K6hCiAgICBjb3VudCA9IDA7CiAgICAvLyDmjpLpmaTkuI3lj6/or7vnirbmgIEKICAgIGlmICghZmlsZS5leGlzdHMoKSB8fCBmaWxlLmlzRGlyZWN0b3J5KCkgfHwgIWZpbGUuY2FuUmVhZCgpKSB7CiAgICAgICAgbG9nKCIhZmlsZS5leGlzdHMoKT0iLCAhZmlsZS5leGlzdHMoKSkKICAgICAgICBsb2coImZpbGUuaXNEaXJlY3RvcnkoKT0iLCBmaWxlLmlzRGlyZWN0b3J5KCkpCiAgICAgICAgbG9nKCIhZmlsZS5jYW5SZWFkKCkiLCAhZmlsZS5jYW5SZWFkKCkpCiAgICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgICAvLyDkvb/nlKjpmo/mnLror7vlj5YKICAgIGZpbGVSZWFkID0gbnVsbDsKICAgIHRyeSB7CiAgICAgICAgLy/kvb/nlKjor7vmqKHlvI8KICAgICAgICBmaWxlUmVhZCA9IG5ldyBSYW5kb21BY2Nlc3NGaWxlKGZpbGUsICJyIik7CiAgICAgICAgLy/or7vlj5bmlofku7bplb/luqYKICAgICAgICBsZW5ndGggPSBmaWxlUmVhZC5sZW5ndGgoKTsKICAgICAgICAvL+WmguaenOaYrzDvvIzku6PooajmmK/nqbrmlofku7bvvIznm7TmjqXov5Tlm57nqbrnu5PmnpwKICAgICAgICBpZiAobGVuZ3RoID09IDApIHsKICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvL+WIneWni+WMlua4uOaghwogICAgICAgICAgICBwb3MgPSBsZW5ndGggLSAxMDsKICAgICAgICAgICAgd2hpbGUgKHBvcyA+IDApIHsKICAgICAgICAgICAgICAgIHBvcy0tOwogICAgICAgICAgICAgICAgLy/lvIDlp4vor7vlj5YKICAgICAgICAgICAgICAgIGZpbGVSZWFkLnNlZWsocG9zKTsKICAgICAgICAgICAgICAgIC8v5aaC5p6c6K+75Y+W5YiwL27ku6PooajmmK/or7vlj5bliLDkuIDooYwKICAgICAgICAgICAgICAgIGlmIChmaWxlUmVhZC5yZWFkQnl0ZSgpID09ICcvbicpIHsKICAgICAgICAgICAgICAgICAgICAvL+S9v+eUqHJlYWRMaW5l6I635Y+W5b2T5YmN6KGMCiAgICAgICAgICAgICAgICAgICAgbGluZSA9IGZpbGVSZWFkLnJlYWRMaW5lKCk7CiAgICAgICAgICAgICAgICAgICAgLy/kv53lrZjnu5PmnpwKICAgICAgICAgICAgICAgICAgICByZXN1bHQuYWRkKGxpbmUpOwoKICAgICAgICAgICAgICAgICAgICAvL+aJk+WNsOW9k+WJjeihjAogICAgICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihsaW5lKTsKCiAgICAgICAgICAgICAgICAgICAgLy/ooYzmlbDnu5/orqHvvIzlpoLmnpzliLDovr7kuoZudW1SZWFk5oyH5a6a55qE6KGM5pWw77yM5bCx6Lez5Ye65b6q546vCiAgICAgICAgICAgICAgICAgICAgY291bnQrKzsKICAgICAgICAgICAgICAgICAgICBpZiAoY291bnQgPT0gbnVtUmVhZCkgewogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHBvcyA9PSAwKSB7CiAgICAgICAgICAgICAgICBmaWxlUmVhZC5zZWVrKDApOwogICAgICAgICAgICAgICAgcmVzdWx0LmFkZChmaWxlUmVhZC5yZWFkTGluZSgpKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coZSkKICAgIH0gZmluYWxseSB7CiAgICAgICAgaWYgKGZpbGVSZWFkICE9IG51bGwpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIC8v5YWz6Zet6LWE5rqQCiAgICAgICAgICAgICAgICBmaWxlUmVhZC5jbG9zZSgpOwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICBsb2coZS5zdGFjaykKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIHJldHVybiByZXN1bHQ7Cn0KCgpzdGFydFRpbWUgPSBhc2N1KCkKdGVuTGluZUNvbnRlbnQgPSByZWFkTGFzdE5MaW5lKG5ldyBGaWxlKGZpbGVQYXRoKSwgbnVtUmVhZCkKZW5kVGltZSA9IGFzY3UoKQpzcGVuZFRpbWUgPSBlbmRUaW1lIC0gc3RhcnRUaW1lCmxvZygi6K+75Y+WMTDooYzoirHotLnml7bpl7Q9Iiwgc3BlbmRUaW1lKQpsb2codGVuTGluZUNvbnRlbnQp"),
b64("dHJ5ewoKLyoKICAg5Yik5pat55+t5L+h5Lit5piv5ZCm5ZCr5pyJ6aqM6K+B56CB5bm25o+Q5Y+WCiAgIDIwMTUxMDE5LjE0NDQKICAgYnkgZmlyZWZseQogICAKICAgQOWfuuacrOaAnei3r++8mgogICAgICAgICAgICAgMS7mmK/lkKbnp4Hkurrlj7fnoIHvvJ8KICAgICAgICAgICAgIDIu5piv5ZCm5Lit5paHL+iLseaWh+mqjOivgeefreS/oe+8n++8iOS4jeWQjOeahOWFs+mUruivje+8iQogICAgICAgICAgICAgMy7pqozor4HnoIHljLnphY0KICAg5Y+C6ICD77yaIGh0dHBzOi8vZ2l0aHViLmNvbS9kcmFrZWV0L1Ntc0NvZGVIZWxwZXIvYmxvYi9tYXN0ZXIvYXBwL3NyYy9tYWluL2phdmEvbWUvZHJha2VldC9pbm1lc3NhZ2UvdXRpbHMvU21zVXRpbHMuamF2YQoK5Li66YCC5bqU55+t5L+h5by556qX6aG555uu5L2c6YOo5YiG5bCP5L+u5pS5IGJ5IFFROjMyNTUyNzMyCiovCgovL+WumuS5ieWFs+mUruivjeWFqOWxgOWPmOmHj+aVsOe7hAp2YXIgQ1BBVENIQVNfS0VZV09SRF9DTiA9IG5ldyBBcnJheSgi5Yqo5oCB5Y+j5LukIiwi6ZqP5py656CBIiwi5Luj56CBIiwi5r+A5rS756CBIiwi5Yqo5oCB56CBIiwi5qCh6aqM56CBIiwi6aqM6K+B56CBIiwi56Gu6K6k56CBIiwi5qOA6aqM56CBIiwi6aqM6K+B5Luj56CBIiwi5r+A5rS75Luj56CBIiwi5qCh6aqM5Luj56CBIiwi5Yqo5oCB5Luj56CBIiwi5qOA6aqM5Luj56CBIiwi56Gu6K6k5Luj56CBIiwi55+t5L+h5Y+j5LukIiwi5Yqo5oCB5a+G56CBIiwi5Lqk5piT56CBIiwi6amX6K2J56K8Iiwi5r+A5rS756K8Iiwi5YuV5oWL56K8Iiwi5qCh6amX56K8Iiwi5qqi6amX56K8Iiwi6amX6K2J5Luj56K8Iiwi5r+A5rS75Luj56K8Iiwi5qCh6amX5Luj56K8Iiwi56K66KqN5Luj56K8Iiwi5YuV5oWL5Luj56K8Iiwi5qqi6amX5Luj56K8Iiwi5LiK572R5a+G56CBIiwi6ZqP5py65a+G56CBIiwi55+t5L+h5a+G56CBIik7CnZhciBDUEFUQ0hBU19LRVlXT1JEX0VOID0gbmV3IEFycmF5KCJDT0RFIiwiY29kZSIpOwoKCi8vIOWIpOaWreWtl+espuS4suS4reaXtuWQpuWMheWQq+S4reaWhwpmdW5jdGlvbiBpc0NvbnRhaW5zQ2hpbmVzZShzdHIpIHsKICAgIHZhciByZWdFeCA9IG5ldyBSZWdFeHAoIltcdTRlMDAtXHU5ZmE1XSIpOwogICAgdmFyIGZsZyA9IHJlZ0V4LnRlc3Qoc3RyKTsKICAgIHJldHVybiAoZmxnIHx8IChzdHIuaW5kZXhPZigi44CQIik+PTApIHx8IChzdHIuaW5kZXhPZigi44CRIik+PTApIHx8IChzdHIuaW5kZXhPZigi44CCIik+PTApICk7Cn0KCi8vIOWIpOaWreaYr+WQpuaYr+engeS6uuaJi+acuuWPt+eggQpmdW5jdGlvbiBpc1BlcnNvbmFsTW9ibGllTk8obW9iaWxlcykgewogICAgaWYobW9iaWxlcyAhPSBudWxsKSB7CiAgICAgICAgdmFyIHJlZ0V4ID0gbmV3IFJlZ0V4cCgiXigoMTNbMC05XSl8KDE1W140LFxcRF0pfCgxOFswLDUtOV0pKVxcZHs4fSQiKTsKICAgICAgICB2YXIgZm91bmQgPSByZWdFeC50ZXN0KG1vYmlsZXMpOwogICAgICAgIHJldHVybiBmb3VuZDsKICAgIH0KICAgIHJldHVybiBmYWxzZTsKfQoKLy/lj6rmnInlrZfmr43nm7jkvLznuqfliKvkuLow77yMIOWPquacieWtl+avjeWSjOaVsOWtl+WPr+iDvee6p+WIq+S4ujEsIOWPquacieaVsOWtl+WPr+iDvee6p+WIq+S4ujIuCmZ1bmN0aW9uIGdldExpa2VseUxldmVsKHN0cikgewogICAgaWYoUmVnRXhwKCJeWzAtOV0qJCIpLnRlc3Qoc3RyKSkgewogICAgICAgIHJldHVybiAyOwogICAgfSBlbHNlIGlmKFJlZ0V4cCgiXlthLXpBLVpdKiQiKS50ZXN0KHN0cikpIHsKICAgICAgICByZXR1cm4gMDsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIDE7CiAgICB9Cn0KCi8vIOagueaNrumqjOivgeeggeeJueW+geiOt+WPlumqjOivgeeggeWtl+espuS4sgpmdW5jdGlvbiB0cnlUb0dldENhcHRjaGFzKHN0cixpc0NoaW5lc2UpIHsKICAgIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KCk7CiAgICBpZiAoaXNDaGluZXNlKXsKICAgICAgICBtYXRjaGVzID0gc3RyLm1hdGNoKC9bYS16QS1aMC05XC5dKy9nKTsKICAgIH0KICAgIGVsc2UKICAgIHsKICAgICAgICBtYXRjaGVzID0gc3RyLm1hdGNoKC9bMC05XC5dKy9nKTsKICAgIH0KICAgIHZhciBtb3N0TGlrZWx5Q2FwdGNoYXMgPSAiIjsKICAgIHZhciBjdXJyZW50TGV2ZWwgPSAtMTsgCiAgICBmb3IgKHZhciBpPTA7aTxtYXRjaGVzLmxlbmd0aDtpKyspewogICAgICAgIGlmKG1hdGNoZXNbaV0ubGVuZ3RoPjMgJiYgbWF0Y2hlc1tpXS5sZW5ndGg8OCAmJiBtYXRjaGVzW2ldLmluZGV4T2YoIi4iKT09LTEpewogICAgICAgICAgICBpZihpc05lYXJUb0tleVdvcmQobWF0Y2hlc1tpXSwgc3RyLCBpc0NoaW5lc2UpKSB7CiAgICAgICAgICAgICAgICBpZihpc0NoaW5lc2UpIHsKICAgICAgICAgICAgICAgICAgICBpZihjdXJyZW50TGV2ZWwgPT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbW9zdExpa2VseUNhcHRjaGFzID0gbWF0Y2hlc1tpXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgdmFyIGxldmVsID0gZ2V0TGlrZWx5TGV2ZWwobWF0Y2hlc1tpXSk7CiAgICAgICAgICAgICAgICAgICAgaWYobGV2ZWwgPiBjdXJyZW50TGV2ZWwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbW9zdExpa2VseUNhcHRjaGFzID0gbWF0Y2hlc1tpXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgY3VycmVudExldmVsID0gbGV2ZWw7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaGVzW2ldOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIG1vc3RMaWtlbHlDYXB0Y2hhczsKfQoKLy/liKTmlq3mmK/lkKbpnaDov5HlhbPplK7or40KZnVuY3Rpb24gaXNOZWFyVG9LZXlXb3JkKGN1cnJlbnRTdHIsIGNvbnRlbnQsIGlzQ2hpbmVzZSkgewogICAgdmFyIHN0YXJ0UG9zaXRpb24gPSAwOwogICAgdmFyIGVuZFBvc2l0aW9uID0gY29udGVudC5sZW5ndGggLSAxOwogICAgLy92YXIgbWFnaWNOdW1iZXIgPSAxNDsgLy/prZTmlbAgXl9eCiAgICB2YXIgbWFnaWNOdW1iZXIgPSAyMDsgLy/kuIrpnaLpgqPkuKrprZTmlbDkuI3lpJ/lpKfllYogKD7vuY88KQogICAgaWYgKGNvbnRlbnQuaW5kZXhPZihjdXJyZW50U3RyKSA+IG1hZ2ljTnVtYmVyKSB7CiAgICAgICAgc3RhcnRQb3NpdGlvbiA9IGNvbnRlbnQuaW5kZXhPZihjdXJyZW50U3RyKSAtIG1hZ2ljTnVtYmVyOwogICAgfQogICAgaWYgKGNvbnRlbnQuaW5kZXhPZihjdXJyZW50U3RyKSAgKyBjdXJyZW50U3RyLmxlbmd0aCArIG1hZ2ljTnVtYmVyIDwgY29udGVudC5sZW5ndGggLSAxKSB7CiAgICAgICAgZW5kUG9zaXRpb24gPSBjb250ZW50LmluZGV4T2YoY3VycmVudFN0cikgKyBjdXJyZW50U3RyLmxlbmd0aCArIG1hZ2ljTnVtYmVyOwogICAgfQogICAgdmFyIGlzTmVhclRvS2V5V29yZCA9IGZhbHNlOwogICAgdmFyIGtleXdvcmRzID0gbmV3IEFycmF5KCk7CiAgICBpZiAoaXNDaGluZXNlKXsKICAgICAgICBrZXl3b3JkcyA9IENQQVRDSEFTX0tFWVdPUkRfQ047CiAgICB9CiAgICBlbHNlewogICAgICAgIGtleXdvcmRzID0gQ1BBVENIQVNfS0VZV09SRF9FTjsKICAgIH0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5d29yZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoY29udGVudC5zdWJzdHJpbmcoc3RhcnRQb3NpdGlvbiwgZW5kUG9zaXRpb24pLmluZGV4T2Yoa2V5d29yZHNbaV0pPj0wKSB7CiAgICAgICAgICAgIGlzTmVhclRvS2V5V29yZCA9IHRydWU7CiAgICAgICAgICAgIGNvZGVuYW1lID0ga2V5d29yZHNbaV07CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgIH0KICAgIHJldHVybiBpc05lYXJUb0tleVdvcmQ7Cn0KCi8vIOagueaNruWFs+mUruivjeWIpOaWreaYr+WQpuaYr+mqjOivgeefreS/oQpmdW5jdGlvbiBpc0NhcHRjaGFzTWVzc2FnZShjb250ZW50LCBpc0NoaW5lc2UpIHsKICAgIHZhciBleHBfYXJyID0gbmV3IEFycmF5KCk7CiAgICBpZiAoaXNDaGluZXNlKXsKICAgICAgICBleHBfYXJyID0gQ1BBVENI"),
b64("InVpIjsKdWkubGF5b3V0KAogICAgPGZyYW1lPgogICAgPHZlcnRpY2FsPgogICAgPGJ1dHRvbiBpZD0ibm90aWZ5IiB0ZXh0PSLlj5HpgIHpgJrnn6Uo5b+F6aG75YWI5omn6KGMKSIvPgogICAgPGJ1dHRvbiBpZD0ic2V0SWNvbiIgdGV4dD0i6ZqP5py65pS55Y+Y5Zu+5qCHIi8+CiAgICA8YnV0dG9uIGlkPSJzZXRUaXRsZSIgdGV4dD0i5pS55Y+Y5qCH6aKYIi8+CiAgICA8YnV0dG9uIGlkPSJzZXRDb250ZW50IiB0ZXh0PSLmlLnlj5jlhoXlrrkiLz4KICAgIDxidXR0b24gaWQ9InNldE9uZ29pbmciIHRleHQ9Iuiuvue9ruWPr+WQpuiiq+a4hemZpCIvPgogICAgPGJ1dHRvbiBpZD0iZGVsTm90aWZ5IiB0ZXh0PSLliKDpmaTpgJrnn6UiLz4KICAgIDwvdmVydGljYWw+CiAgICA8L2ZyYW1lPgopCi8v5a+85YWl57G7CmltcG9ydENsYXNzKCJhbmRyb2lkLmFwcC5Ob3RpZmljYXRpb25NYW5hZ2VyIik7CmltcG9ydENsYXNzKCJhbmRyb2lkLmFwcC5Ob3RpZmljYXRpb24iKTsKaW1wb3J0Q2xhc3MoImFuZHJvaWQuY29udGVudC5yZXMuUmVzb3VyY2VzIikKdmFyIE5PID0gbmV3IE5vdGlmaWNhdGlvbi5CdWlsZGVyKGNvbnRleHQpOwp2YXIgTk0gPSBjb250ZXh0LmdldFN5c3RlbVNlcnZpY2UoY29udGV4dC5OT1RJRklDQVRJT05fU0VSVklDRSk7CnZhciBub3RpZnlfaWQgPSAxMTIzOwp2YXIgY2FuY2VsID0gdHJ1ZTsKdWkubm90aWZ5LmNsaWNrKCgpID0+IHsKICAgIHZhciBpY29uX2F1dG9qcyA9IGdldFJlc291cmNlSUQoImF1dG9qc19tYXRlcmlhbCIsICJkcmF3YWJsZSIpOwogICAgTm90aWZ5KCJBdXRvLkpT5pyJ5paw54mI5ZWmfiIsICLmm7TmlrDoi6XlubJCVUciLCBpY29uX2F1dG9qcywgbm90aWZ5X2lkKTsKfSkKdWkuc2V0VGl0bGUuY2xpY2soKCkgPT4gewogICAgc2V0Tm90aWZ5VGl0bGUobm90aWZ5X2lkLCAiQXV0by5KU+abtOaWsOiHszkuMCIpOwp9KQp1aS5zZXRJY29uLmNsaWNrKCgpID0+IHsKICAgIHNldE5vdGlmeUljbyhub3RpZnlfaWQpOwp9KQp1aS5zZXRDb250ZW50LmNsaWNrKCgpID0+IHsKICAgIHNldE5vdGlmeUNvbnRlbnQobm90aWZ5X2lkLCAi5YW25a6e5pu05paw5piv5YGH55qE5ZWmfiIpOwp9KQp1aS5zZXRPbmdvaW5nLmNsaWNrKCgpID0+IHsKICAgIGNhbmNlbCA9ICFjYW5jZWwKICAgIHNldE5vdGlmeUNhbmNlbGFibGUobm90aWZ5X2lkLCBjYW5jZWwpOwp9KQp1aS5kZWxOb3RpZnkuY2xpY2soKCk9PnsKICAgIGRlbGV0ZU5vdGlmeShub3RpZnlfaWQpCiAgICB9KQoKZnVuY3Rpb24gTm90aWZ5KHRpdGxlLCBjb250ZW50LCBJY29JRCwgSUQpIHsKICAgIC8v5Y+R6YCB6YCa55+lCiAgICAvL+WPguaVsOWIhuWIq+S4uiDmoIfpopgg5YaF5a65IOWbvuagh0lEIOmAmuefpUlECiAgICBOTy5zZXRDb250ZW50VGl0bGUodGl0bGUpOwogICAgTk8uc2V0Q29udGVudFRleHQoY29udGVudCk7CiAgICBOTy5zZXRTbWFsbEljb24oSWNvSUQpOwogICAgTk0ubm90aWZ5KElELCBOTy5idWlsZCgpKQp9CgpmdW5jdGlvbiBzZXROb3RpZnlUaXRsZShJRCwgdGl0bGUpIHsKICAgIC8v6K6+572u6YCa55+l5qCH6aKYCiAgICAvL+WPguaVsCDpgJrnn6VJRCzmoIfpopgKICAgIE5PLnNldENvbnRlbnRUaXRsZSh0aXRsZSk7CiAgICBOTS5ub3RpZnkoSUQsIE5PLmJ1aWxkKCkpOwp9CgpmdW5jdGlvbiBzZXROb3RpZnlDb250ZW50KElELCBjb250ZW50KSB7CiAgICAvL+iuvue9rumAmuefpeWGheWuuQogICAgLy/lj4LmlbAg6YCa55+lSUQs5YaF5a65CiAgICBOTy5zZXRDb250ZW50VGV4dChjb250ZW50KTsKICAgIE5NLm5vdGlmeShJRCwgTk8uYnVpbGQoKSkKfQoKZnVuY3Rpb24gc2V0Tm90aWZ5SWNvKElEKSB7CiAgICAvL+iuvue9rumAmuefpeWbvuaghwogICAgLy/lj4LmlbAg6YCa55+lSUQs5Zu+5qCH6LWE5rqQSUQKICAgIC8v5LiL6Z2iSUTlj4LogIPoh6og56S65L6LLeeVjOmdouaOp+S7ti3ooajmoLwg5oiq5Y+W6YOo5YiGCiAgICB2YXIgaWMgPSBbJ2ljXzNkX3JvdGF0aW9uX2JsYWNrXzQ4ZHAnLCAnaWNfYWNjZXNzaWJpbGl0eV9ibGFja180OGRwJywgJ2ljX2FjY2Vzc2libGVfYmxhY2tfNDhkcCcsICdpY19hY2NvdW50X2JhbGFuY2VfYmxhY2tfNDhkcCcsICdpY19hY2NvdW50X2JhbGFuY2Vfd2FsbGV0X2JsYWNrXzQ4ZHAnLCAnaWNfYWNjb3VudF9ib3hfYmxhY2tfNDhkcCddOwogICAgdmFyIGkgPSByYW5kb20oMCwgaWMubGVuZ3RoKTsKICAgIHZhciBpY29uID0gZ2V0UmVzb3VyY2VJRChpY1tpXSwgImRyYXdhYmxlIik7CiAgICBOTy5zZXRTbWFsbEljb24oaWNvbik7CiAgICBOTS5ub3RpZnkoSUQsIE5PLmJ1aWxkKCkpCn0KCmZ1bmN0aW9uIHNldE5vdGlmeUNhbmNlbGFibGUoSUQsIGNhbmNlbGFibGUpIHsKICAgIC8v6K6+572u6YCa55+l5Y+v5ZCm6KKr5riF6ZmkCiAgICAvL+WPguaVsCDpgJrnn6VJRCzmmK/lkKblj6/muIXpmaQKICAgIE5PLnNldE9uZ29pbmcoIWNhbmNlbGFibGUpOwogICAgTk0ubm90aWZ5KElELCBOTy5idWlsZCgpKTsKfQoKZnVuY3Rpb24gZ2V0UmVzb3VyY2VJRChuYW1lLCBkZWZUeXBlKSB7CiAgICAvL+iOt+WPlui1hOa6kOaWh+S7tklECiAgICAvL+WPguaVsAogICAgLy9kZWZUeXBlIOexu+WQjSDlpoJkcmF3YWJsZSBpZCBzdHJpbmfnrYkKICAgIC8vbmFtZSDotYTmupDlkI0KICAgIHZhciByZXNvdXJjZSA9IGNvbnRleHQuZ2V0UmVzb3VyY2VzKCk7CiAgICByZXR1cm4gcmVzb3VyY2UuZ2V0SWRlbnRpZmllcihuYW1lLCBkZWZUeXBlLCBjb250ZXh0LmdldFBhY2thZ2VOYW1lKCkpOwp9CmZ1bmN0aW9uIGRlbGV0ZU5vdGlmeShJRCl7CiAgICBOTS5jYW5jZWwoSUQpOwogICAgfQ=="),
b64(""),
b64("Ly/kv67lpI3kuoblh6DkuKrplJnor68KLy/miZPlvIBRUeiBiuWkqeeVjOmdouWwseiDveiHquWKqOiBiuWkqeS6hgoiYXV0byIKdCA9IDA7IC8v5bu26L+fCnRvYXN0KCLmiZPlvIBRUea2iOaBr+eVjOmdouiHquWKqOiBiuWkqSIpOwp0aHJlYWRzLnN0YXJ0KG5vdGlmaWNhdGlvbm1zZyk7Cgp3aGlsZSAodHJ1ZSkgewpvdGhlciA9ICIiOwpmaW5kTWVzc2FnZSgpOwpvdGhlcnNheSA9IGdldE1lc3NhZ2UoKTsKaWYgKG90aGVyc2F5ICE9IG51bGwpIHsKdmFyIGluZm8gPSBvdGhlcnNheTsKbG9nKCJcblxuVGE6XG4iICsgIjoiICsgb3RoZXJzYXkpOwppID0gIiI7CmkgKz0gTWUoKTsKaSArPSAiIjsKc2VuZE1lc3NhZ2UoaSk7CmxvZygi5oiROlxuIiArIGkpOwpzbGVlcCh0KQpiYWNrKCk7Cn0KZmluZGJveG1zZygpOwp9CgpmdW5jdGlvbiBNZSgpIHsKdmFyIHVybCA9ICJodHRwOi8vd3d3LnR1bGluZzEyMy5jb20vb3BlbmFwaS9hcGkiOwppZDEgPSAibGxtamsiOwp2YXIgcmVzID0gaHR0cC5wb3N0KHVybCwgewprZXk6ICI3NjdlOGZiN2NkODQ0ODc1OWIyM2QxYTBkYTM4ZDMzZiIsIC8v5Zu+54G1CmluZm86IGluZm8sCnVzZXJpZDogIjEiLAp9KTsKdmFyIGh0bWwgPSByZXMuYm9keS5zdHJpbmcoKTsKZXZhbCgiYj0iICsgaHRtbCk7CnJldHVybiBiLnRleHQ7Cn0KCmZ1bmN0aW9uIGdldE1lc3NhZ2UoKSB7CnZhciBpbmZvcm1hdGlvbiA9IG51bGw7CmlmIChpZCgiY2hhdF9pdGVtX2hlYWRfaWNvbiIpLmV4aXN0cygpICYmIGlkKCJjaGF0X2l0ZW1fY29udGVudF9sYXlvdXQiKS5leGlzdHMoKSkgewoKdmFyIGxpc3QgPSBpZCgibGlzdFZpZXcxIikuZmluZE9uZSgpOyBudW0gPSBsaXN0LmNoaWxkQ291bnQoKTsgdmFyIG4gPSAxOyBpZiAoaWQoImdyYXliYXIiKS5leGlzdHMoKSkgeyBpID0gMDsgd2hpbGUgKGlkKCJncmF5YmFyIikuZmluZE9uY2UoaSsrKSAhPSBudWxsKTsgbiA9IGk7IH0gaWNvbiA9IGlkKCJjaGF0X2l0ZW1faGVhZF9pY29uIikuZmluZE9uY2UobnVtIC0gbik7IHRvYXN0dCA9IGlkKCJjaGF0X2l0ZW1fY29udGVudF9sYXlvdXQiKS5maW5kT25jZShudW0gLSBuKTsgaWYgKHRvYXN0dCAhPSBudWxsICYmIGljb24gIT0gbnVsbCkgeyB4ID0gaWNvbi5ib3VuZHMoKS5jZW50ZXJYKCk7IHkgPSBpY29uLmJvdW5kcygpLmNlbnRlclkoKTsgaWYgKHggPCA1MDApIHsgaW5mb3JtYXRpb24gPSB0b2FzdHQudGV4dCgpOyBvdGhlciA9IGljb24udGV4dCgpOyB9IH0gCgp9CnJldHVybiBpbmZvcm1hdGlvbjsKfQoKZnVuY3Rpb24gc2VuZE1lc3NhZ2UoaSkgewppZiAoaWQoImlucHV0IikuZGVwdGgoIjIiKS5leGlzdHMoKSkgewppZCgiaW5wdXQiKS5kZXB0aCgiMiIpLmZpbmQoKS5zZXRUZXh0KGkpOwpjbGFzc05hbWUoImFuZHJvaWQud2lkZ2V0LkJ1dHRvbiIpLnRleHQoIuWPkemAgSIpLmZpbmQoKS5jbGljaygpOwp9Cn0KCmZ1bmN0aW9uIGZpbmRNZXNzYWdlKCkgewppZiAoaWQoInVucmVhZG1zZyIpLmV4aXN0cygpKSB7CnVucmVhZG1zZyA9IGlkKCJ1bnJlYWRtc2ciKS5maW5kT25jZSgwKTsKeDEgPSB1bnJlYWRtc2cuYm91bmRzKCkuY2VudGVyWCgpOwp5MSA9IHVucmVhZG1zZy5ib3VuZHMoKS5jZW50ZXJZKCk7CmNsaWNrKHgxIC0gMjAwLCB5MSAtIDUwKTsKaWYgKGlkKCJpbnB1dCIpLmRlcHRoKCIyIikuZmluZE9uZSgyMDAwKSA9PSBudWxsKSB7CmJhY2soKTsKfQp9IGVsc2Ugewppc21zZyA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuUmVsYXRpdmVMYXlvdXQiKS5kZXB0aCgiNCIpLmRyYXdpbmdPcmRlcigiMiIpLmNsaWNrYWJsZSh0cnVlKS5zZWxlY3RlZCh0cnVlKS5maW5kT25lKDEwMCk7CmlmIChpc21zZyAhPSBudWxsICYmIGlzbXNnLmNoaWxkQ291bnQoKSA9PSAzKSB7CmlzbXNnLmNsaWNrKCk7Cn0KfQp9CgpmdW5jdGlvbiBmaW5kYm94bXNnKCkgewppZiAoaWQoIm1zZ2JveCIpLmV4aXN0cygpKSB7CmlkKCJtc2dib3giKS5maW5kT25lKCkuY2xpY2soKTsKfQp9CgpmdW5jdGlvbiBub3RpZmljYXRpb25tc2coKSB7CnZhciBub3RpZmk7CmV2ZW50cy5vYnNlcnZlTm90aWZpY2F0aW9uKCk7CmV2ZW50cy5vbigibm90aWZpY2F0aW9uIiwgZnVuY3Rpb24obikgewppZiAoImNvbS50ZW5jZW50Lm1vYmlsZXFxIiA9PSBuLmdldFBhY2thZ2VOYW1lKCkpIHsKYXBwLmxhdW5jaCgiY29tLnRlbmNlbnQubW9iaWxlcXEiKTsKfQp9KTsKfQ=="),
b64("YXV0bygpOw0KLy/or7fmsYLmiKrlm74NCmlmICghcmVxdWVzdFNjcmVlbkNhcHR1cmUoKSkgew0KICAgIHRvYXN0KCLor7fmsYLmiKrlm77lpLHotKUiKTsNCiAgICBleGl0KCk7DQp9DQovLz09PT09PT09PT09PT09PT09PeiEmuacrOS4u+aOp+WItuWMuj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQpnYW1lTmFtZSA9ICLov57ov57nnIsiOw0KLy9nYW1lTmFtZSA9ICLmi6/mlZHokIzlrqAiDQovLyBnYW1lTmFtZSA9ICLmtojnoJblnZciDQoNCg0KDQoNCnBhY2thZ2VOYW1lID0gImNvbS5rd2FpLnNvZ2FtZSI7DQppbWdQYXRoID0gIi9zZGNhcmQv5b+r5omL5bCP5ri45oiP5oiq5Zu+LyI7DQpmaWxlcy5lbnN1cmVEaXIoaW1nUGF0aCk7DQoNCi8vIHBhZ2VJbmZvPVsNCi8vICAgICBbIum7hOiJsuWwj+aMh+WktCIsMzkxLDEyLDQ0Nyw4Nywi5p+Q5ri45oiPIl0sDQovLyAgICAgWyLmnIDov5Hlr7nmiJgiLDYwNSwyMDUsOTc4LDMwMSwi5Li76aG1Il0sDQovLyAgICAgWyLlt7Llr7kiLDQ4MSw5MzcsNTcwLDk5MCwicGvnu5PmnpwiXSwNCi8vICAgICBbIuaJk+WtlyIsMTg2LDE3MjQsMjcyLDE3ODcsIuiBiuWkqSJdDQovLyBdDQoNCg0KDQp3aGlsZSAoMSkgew0KICAgIGVycm9yVGltZSA9IDENCiAgICBsZXQgcGFnZSA9IHdoaWNoUGFnZSgpOw0KICAgIGxvZygiXG7lvZPliY3nlYzpnaI9IiwgcGFnZSkNCiAgICAvLyBleGl0KCkNCiAgICBzd2l0Y2ggKHBhZ2UpIHsNCiAgICAgICAgY2FzZSAi5p+Q5ri45oiPIjoNCiAgICAgICAgICAgIGdhbWVQbGF5KGdhbWVOYW1lKQogICAgICAgICAgLy8gIHRvYXN0TG9nKDEpOw0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgIuS4u+mhtSI6DQogICAgICAgICAgICBnYW1lT3BlbihnYW1lTmFtZSkKICAgICAgICAgLy8gICB0b2FzdExvZygyKTsNCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBjYXNlICJwa+e7k+aenCI6DQogICAgICAgICAgICBnYW1lUmVzdWx0KCkKICAgICAgICAgIC8vICB0b2FzdExvZygzKTsNCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBjYXNlICLogYrlpKkiOg0KICAgICAgICAgICAgY2hhdEludGVyZmFjZSgpCiAgICAgICAgICAvLyAgdG9hc3RMb2coNCk7DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgIGlmIChjdXJyZW50UGFja2FnZSgpID09IHBhY2thZ2VOYW1lKSB7DQogICAgICAgICAgICAgICAgc2xlZXAoMTAwMCk7DQogICAgICAgICAgICAgICAgZXJyb3JUaW1lID0gZXJyb3JUaW1lICsgMQ0KICAgICAgICAgICAgICAgIGlmIChlcnJvclRpbWUgPiAxMCkgew0KICAgICAgICAgICAgICAgICAgICBhcHBPcGVuKHBhY2thZ2VOYW1lKQ0KICAgICAgICAgICAgICAgICAgICBlcnJvclRpbWUgPSAxDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgfSBlbHNlIHsNCg0KICAgICAgICAgICAgICAgIHRvYXN0TG9nKCLlvZPliY3ljIXlkI3kuI3mmK/lv6vmiYvlsI/muLjmiI9cbuW9k+WJjeWMheWQjeaYryIsICI9IiArIGN1cnJlbnRQYWNrYWdlKCkgKyAiPSIsICLljIXlkI3plb/luqY9IiwgY3VycmVudFBhY2thZ2UoKS5sZW5ndGgpDQogICAgICAgICAgICAgICAgc2xlZXAoMjAwMCkNCiAgICAgICAgICAgICAgICBhcHBPcGVuKHBhY2thZ2VOYW1lKQ0KICAgICAgICAgICAgfQ0KICAgIH0NCn0NCg0KDQpmdW5jdGlvbiBnYW1lUGxheShnYW1lTmFtZSkgew0KICAgIHN3aXRjaCAoZ2FtZU5hbWUpIHsNCiAgICAgICAgY2FzZSAi5raI56CW5Z2XIjoNCiAgICAgICAgICAgIHhpYW9aaHVhbkt1YWkoKQ0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgIui/nui/nueciyI6DQogICAgICAgICAgICBsaWFuTGlhbkthbigpDQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAi5ouv5pWR6JCM5a6gIjoNCiAgICAgICAgICAgIHpoZW5nSml1TWVuZ0Nob25nKCkNCiAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICBkZWZhdWx0Og0KICAgICAgICAgICAgdG9hc3RMb2coZ2FtZU5hbWUsICLmuLjmiI/lkI3lrZfkvaDlhpnplJnkuoYs5rKh5pyJ6L+Z5Liq5ri45oiP55qE6ISa5pysIikNCiAgICAgICAgICAgIGFsZXJ0KCkNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIGdhbWVSZXN1bHQoKSB7DQogICAgLy/lnKhwa+mhtSzmjInkuKTmrKFiYWNr6L+U5Zue5Li76aG1DQogICAgLy/mjInkuIDmrKHmmK/ogYrlpKkNCiAgICAvL+aMieS6jOasoeaYr+S4u+mhtQ0KICAgIGJhY2soKQ0KICAgIHNsZWVwKDIwMDApDQogICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpKyspIHsNCiAgICAgICAgaWYgKHdoaWNoUGFnZSgpID09ICLogYrlpKkiKSB7DQogICAgICAgICAgICB0b2FzdExvZygi5LuOcGvpobXov5Tlm57liLDkuobogYrlpKnpobUiKQ0KICAgICAgICAgICAgLy/ngrnlh7vlt6bkuIrop5Lnrq3lpLQs6L+U5Zue5Li76aG1DQogICAgICAgICAgICBiYWNrKCkNCiAgICAgICAgICAgIHNsZWVwKDIwMDApDQogICAgICAgIH0gZWxzZSBpZiAod2hpY2hQYWdlKCkgPT0gIuS4u+mhtSIpIHsNCiAgICAgICAgICAgIHRvYXN0TG9nKCLku45wa+mhtei/lOWbnuWIsOS6huiBiuWkqemhteWPiOi/lOWbnuWIsOS6huS4u+mhtSIpDQogICAgICAgICAgICBzbGVlcCgyMDAwKQ0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0gZWxzZSBpZiAod2hpY2hQYWdlKCkgPT0gIuafkOa4uOaIjyIpIHsNCiAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgfQ0KDQoNCg0KDQoNCiAgICB9DQogICAgdG9hc3RMb2coIuS7jnBr6aG16L+U5Zue5Li76aG15byC5bi4IikNCiAgICBhbGVydCgpDQogICAgcmV0dXJuIGZhbHNlOw0KfQ0KDQpmdW5jdGlvbiBjaGF0SW50ZXJmYWNlKCkgew0KICAgIC8v5Zyo6IGK5aSp6aG1LOaMieS4gOasoWJhY2vov5Tlm57kuLvpobUNCiAgICBiYWNrKCkNCiAgICBzbGVlcCgyMDAwKQ0KICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7DQogICAgICAgIGlmICh3aGljaFBhZ2UoKSA9PSAi6IGK5aSpIikgew0KICAgICAgICAgICAgdG9hc3RMb2coIuS7juiBiuWkqemhtei/lOWbnuWIsOS6huS4u+mhteWksei0pSzlh4blpIfngrnlh7vkuIvkuIDmrKFiYWNr6ZSuIikNCiAgICAgICAgICAgIGJhY2soKQ0KICAgICAgICAgICAgc2xlZXAoMjAwMCkNCiAgICAgICAgfSBlbHNlIGlmICh3aGljaFBhZ2UoKSA9PSAi5Li76aG1Iikgew0KICAgICAgICAgICAgdG9hc3RMb2coIuS7juiBiuWkqemhtei/lOWbnuWIsOS6huS4u+mhtSIpDQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2UgaWYgKHdoaWNoUGFnZSgpID09ICLmn5DmuLjmiI8iKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICB9DQogICAgdG9hc3RMb2coIuS7juiBiuWkqemhtei/lOWbnuS4u+mhteW8guW4uCIpDQogICAgYWxlcnQoKQ0KICAgIHJldHVybiBmYWxzZTsNCn0NCg0KZnVuY3Rpb24gYXBwT3BlbihwYWNrYWdlTmFtZSkgew0KICAgIHRvYXN0KCLlkK/liqjlv6vmiYvlsI/muLjmiI8iKQ0KICAgIHNsZWVwKDIwMDApDQogICAgaWYgKGN1cnJlbnRQYWNrYWdlKCkgPT0gcGFja2FnZU5hbWUpIHsNCg0KICAgIH0gZWxzZSB7DQogICAgICAgIGxhdW5jaChwYWNrYWdlTmFtZSk7DQogICAgICAgIHNsZWVwKDEwMDApOw0KICAgIH0NCiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE1OyBpKyspIHsNCg0KICAgICAgICBpZiAod2hpY2hQYWdlKCkgPT0gIuS4u+mhtSIpIHsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgc2xlZXAoMTAwMCk7DQogICAgICAgIH0NCiAgICB9DQoNCg0KICAgIHRvYXN0TG9nKCLlv6vmiYvlsI/muLjmiI/lkK/liqjlvILluLgiKQ0KICAgIGFsZXJ0KCkNCiAgICByZXR1cm4gZmFsc2U7DQp9DQoNCg0KZnVuY3Rpb24gZ2FtZU9wZW4oZ2FtZU5hbWUpIHsNCiAgICBpZiAod2hpY2hQYWdlKCkgPT0gIuS4u+mhtSIpIHsNCg0KICAgICAgICBsZXQgaW1nU21hbGwgPSBpbWFnZXMucmVhZChpbWdQYXRoICsgZ2FtZU5hbWUgKyAiLnBuZyIpOw0KICAgICAgICBsZXQgcCA9IGZpbmRJbWFnZShjYXB0dXJlU2NyZWVuKCksIGltZ1NtYWxsKTsNCiAgICAgICAgaWYgKHApIHsNCiAgICAgICAgICAgIHRvYXN0TG9nKCLmib7liLDkuobmuLjmiI8iLCBnYW1lTmFtZSwgIuW8gOWni+eCueWHu+WugyIpDQogICAgICAgICAgICBwcmVzcyhwLngsIHAueSwgNTApOw0KICAgICAgICAgICAgc2xlZXAoMzAwMCkNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdG9hc3RMb2coIuayoeaJvuWIsOa4uOaIjyIsIGdhbWVOYW1lLCAi5LiL5ruR5bGP5bmVIik7DQogICAgICAgICAgICAvLyDkuIvmu5EoKQ0KICAgICAgICAgICAgc2xlZXAoMjAwMCkNCg0KDQogICAgICAgICAgICBsZXQgaW1nU21hbGwgPSBpbWFnZXMucmVhZChpbWdQYXRoICsgIuacgOi/keWvueaImCIgKyAiLnBuZyIpOw0KDQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHsNCiAgICAgICAgICAgICAgICBsZXQgcCA9IGZpbmRJbWFnZShjYXB0dXJlU2NyZWVuKCksIGltZ1NtYWxsLCB7DQogICAgICAgICAgICAgICAgICAgIHJlZ2lvbjogWzY1MiwgMjEzLCAyNzMsIDc2XSwNCiAgICAgICAgICAgICAgICAgICAgdGhyZXNob2xkOiAwLjgNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICBpZiAocCkgew0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0b2FzdExvZygi5LiL5ruRIiwgaSArIDEsICLmrKEiLCAi5rKh5om+5Yiw5Y+z5LiK6KeS5pyA6L+R5a+55oiY5Zu+54mHIik7DQoNCiAgICAgICAgICAgICAgICAgICAg5LiL5ruRKCkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KICAgICAgICB9DQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykgew0KICAgICAgICAgICAgbGV0IHAgPSBmaW5kSW1hZ2UoY2FwdHVyZVNjcmVlbigpLCBpbWdTbWFsbCk7DQogICAgICAgICAgICBpZiAocCkgew0KICAgICAgICAgICAgICAgIHRvYXN0TG9nKCLmib7liLDkuobmuLjmiI8iLCBnYW1lTmFtZSwgIuW8gOWni+eCueWHu+WugyIpDQoNCiAgICAgICAgICAgICAgICBwcmVzcyhwLngsIHAueSwgNTApOw0KICAgICAgICAgICAgICAgIHNsZWVwKDMwMDApDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRvYXN0TG9nKCLkuIrmu5EiLCBpLCAi5qyhIiwgIuayoeaJvuWIsOWPs+S4iuinkuacgOi/keWvueaImOWbvueJhyIpOw0KDQogICAgICAgICAgICAgICAg5LiK5ruRKCkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICB0b2FzdExvZygi5rKh5om+5Yiw5ri45oiPIiwgZ2FtZU5hbWUsICLohJrmnKzlgZzmraLov5DooYwiKTsNCiAgICAgICAgYWxlcnQoKQ0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfSBlbHNlIHsNCiAgICAgICAgdG9hc3RMb2coIueOsOWcqOS4jeWcqOS4u+mhtSzkuI3og73miZPlvIDku7vkvZXmuLjmiI8iKQ0KICAgICAgICBzbGVlcCgyMDAwKQ0KICAgIH0NCiAgICByZXR1cm4gZmFsc2U7DQp9DQoNCg0KZnVuY3Rpb24gYWxlcnQoKSB7DQogICAgZGV2aWNlLnZpYnJhdGUoMjAwMCk7DQogICAgc2xlZXAoMTAwMCk7DQogICAgZGV2aWNlLnZpYnJhdGUoMjAwMCk7DQogICAgZXhpdCgpOw0KfQ0KDQoNCg0KZnVuY3Rpb24gd2hpY2hQYWdlKCkgew0KICAgIC8vIOW3puS4iuinkuacieacgOi/keWvueaImCzor7TmmI7lnKjkuLvpobUNCiAgICAvL+mhtumDqOS4remXtOacieS4gOS4qum7hOiJsueahOWwj+aMh+WktCzor7TmmI7lnKjmn5DkuKrmuLjmiI/nlYzpnaINCiAgICAvL+S4remXtOacieS4gOS4qiDlt7Llr7ks6K+05piO5Zyo5ri45oiPcGvnu5PmnpzpobXpnaINCiAgICAvL+W6lemDqOacieaIs+i/memHjOaJk+Wtl+ivtOaYjuWcqOiBiuWkqemhtemdog0KICAgIHBhZ2VJbmZvID0gWw0KICAgICAgICBbIum7hOiJsuWwj+aMh+WktCIsIDM5MSwgMTIsIDQ0NywgODcsICLmn5DmuLjmiI8iXSwNCiAgICAgICAgWyLlr7nmiJgiLCAyOTAsIDczLCA0MjIsIDE1MCwgIuS4u+mhtSJdLA0KICAgICAgICBbIuW3suWvuSIsIDQ4MSwgOTM3LCA1NzAsIDk5MCwgInBr57uT5p6cIl0sDQogICAgICAgIFsi5omT5a2XIiwgMTg2LCAxNzI0LCAyNzIsIDE3ODcsICLogYrlpKkiXQ0KICAgIF0NCg0KICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFnZUluZm8ubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IGltZ1NtYWxsID0gaW1hZ2VzLnJlYWQoaW1nUGF0aCArIHBhZ2VJbmZvW2ldWzBdICsgIi5wbmciKTsNCiAgICAgICAgLy/miKrlm77lubbmib7lm74NCiAgICAgICAgbGV0IHAgPSBmaW5kSW1hZ2UoY2FwdHVyZVNjcmVlbigpLCBpbWdTbWFsbCwgew0KICAgICAgICAgICAgcmVnaW9uOiBbcGFnZUluZm9baV1bMV0sIHBhZ2VJbmZvW2ldWzJdLCBwYWdlSW5mb1tpXVszXSAtIHBhZ2VJbmZvW2ldWzFdLCBwYWdlSW5mb1tpXVs0XSAtIHBhZ2VJbmZvW2ldWzJdXSwNCiAgICAgICAgICAgIHRocmVzaG9sZDogMC42DQogICAgICAgIH0pOw0KICAgICAgICBpZiAocCkgew0KICAgICAgICAgICAgLy8gbG9nKCJcbuW9k+WJjemhtemdoj09PT09PSIscGFnZUluZm9baV1bNV0pOw0KICAgICAgICAgICAgLy8gbG9nKCJpPSIsaSkNCiAgICAgICAgICAgIGxvZygicGFnZUluZm9baV1bNV09IixwYWdlSW5mb1tpXVs1XSkNCiAgICAgICAgICAgIHJldHVybiBwYWdlSW5mb1tpXVs1XQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgLy8gbG9nKCJcbuW9k+WJjemhtemdolhYWFhYWCIscGFnZUluZm9baV1bNV0pOw0KICAgICAgICB9DQoNCiAgICB9DQogICAgcmV0dXJuICLohJrmnKzkuI3orqTor4bov5nkuKrnlYzpnaIiOw0KDQoNCn0NCg0KZnVuY3Rpb24g5LiK5ruRKCkgew0KICAgIHZhciB4MSA9IDcwMCwNCiAgICAgICAgeTEgPSAxNjAwLA0KICAgICAgICB4MiA9IDEwMDAsDQogICAgICAgIHkyID0gNjMwLA0KICAgICAgICBkdXJhdGlvbiA9IDEwMDA7DQogICAgc3dpcGUoeDEsIHkxLCB4MiwgeTIsIGR1cmF0aW9uKQ0KICAgIHNsZWVwKDEwMDApDQp9DQoNCmZ1bmN0aW9uIOS4i+a7kSgpIHsNCiAgICAvL+W/q+mAn+S4i+a7kQ0KICAgIHZhciB4MSA9IDcwMCwNCiAgICAgICAgeTEgPSA4MDAsDQogICAgICAgIHgyID0gNTAwLA0KICAgICAgICB5MiA9IDE2MzAsDQogICAgICAgIGR1cmF0aW9uID0gMzAwOw0KICAgIHN3aXBlKHgxLCB5MSwgeDIsIHkyLCBkdXJhdGlvbikNCiAgICBzbGVlcCgxMDAwKQ0KfQ0KDQoNCg0KDQoNCg0KDQoNCi8vPT09PT09PT09PT09PT09PT095Lul5LiL5piv5ri45oiP6L+Q6KGM5piv55qE6ISa5pysPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KZnVuY3Rpb24geGlhb1podWFuS3VhaSgpIHsNCiAgICBpbnRlcnZhbFRpbWUgPSAxOw0KICAgIHByZXNzKDEzMiwgMTU1MiwgaW50ZXJ2YWxUaW1lKTsNCiAgICBwcmVzcygzOTEsIDE1ODcsIGludGVydmFsVGltZSk7DQogICAgcHJlc3MoNjY1LCAxNTk5LCBpbnRlcnZhbFRpbWUpOw0KICAgIHByZXNzKDk2MiwgMTU1MiwgaW50ZXJ2YWxUaW1lKTsNCn0NCg0KZnVuY3Rpb24gemhlbmdKaXVNZW5nQ2hvbmcoKSB7DQogICAgVGhyZXNob2xkID0gMw0KICAgIGxldCBpbWcgPSBjYXB0dXJlU2NyZWVuKCk7DQogICAgc2xlZXAoMzApOw0KICAgIGxldCB0YXJnZXRDb29yZGluYXRlc0FycmF5ID0gY29vcmRpbmF0ZUFuYWx5c2lzQW5kRXh0cmFjdChpbWcpOw0KICAgIC8vLy9sb2codGFyZ2V0Q29vcmRpbmF0ZXNBcnJheSk7DQogICAgY29vcmRpbmF0ZXNDbGljayh0YXJnZXRDb29yZGluYXRlc0FycmF5KTsNCiAgICB0YXJnZXRDb29yZGluYXRlc0FycmF5ID0gY29vcmRpbmF0ZUFuYWx5c2lzQW5kRXh0cmFjdFJpZ2h0KGltZyk7DQogICAgLy8vL2xvZyh0YXJnZXRDb29yZGluYXRlc0FycmF5KTsNCiAgICBjb29yZGluYXRlc0NsaWNrKHRhcmdldENvb3JkaW5hdGVzQXJyYXkpOw0KICAgIHRhcmdldENvb3JkaW5hdGVzQXJyYXkgPSBjb29yZGluYXRlQW5hbHlzaXNBbmRFeHRyYWN0RG93bihpbWcpOw0KICAgIC8vLy9sb2codGFyZ2V0Q29vcmRpbmF0ZXNBcnJheSk7DQogICAgY29vcmRpbmF0ZXNDbGljayh0YXJnZXRDb29yZGluYXRlc0FycmF5KTsNCiAgICAvL+WinuWKoOeCueWHu+eBq+eureetkg0KICAgIHJvY2tldENsaWNrKGltZyk7DQogICAgc2xlZXAoODApOw0KDQoNCn0NCg0KDQovLy0tLS0tLS3ku6XkuIvmmK/mi6/mlZHokIzlrqDkvb/nlKjnmoTlsI/lh73mlbAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQovLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCmZ1bmN0aW9uIHJvY2tldENsaWNrKGltZykgew0KICAgIHZhciByb2NrZXQgPSBpbWFnZXMucmVhZChpbWdQYXRoICsgIueBq+eureetki5wbmciKTsNCiAgICAvL+aIquWbvuW5tuaJvuWbvg0KICAgIHZhciBwID0gZmluZEltYWdlKGltZywgcm9ja2V0LCB7DQogICAgICAgIHJlZ2lvbjogWzUyLCA0ODIsIDk1MCwgMTE0NV0sDQogICAgICAgIHRocmVzaG9sZDogMC44DQogICAgfSk7DQogICAgaWYgKHApIHsNCiAgICAgICAgLy8vL2xvZygi5om+5Yiw54Gr566t562S5ZWmOiAiICsgcCk7DQogICAgICAgIGNsaWNrKHAueCwgcC55KTsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIGNvb3JkaW5hdGVzQ2xpY2sodGFyZ2V0Q29vcmRpbmF0ZXNBcnJheSkgew0KICAgIGZvciAoaiA9IDAsIGxlbiA9IHRhcmdldENvb3JkaW5hdGVzQXJyYXkubGVuZ3RoOyBqIDwgbGVuOyBqKyspIHsNCiAgICAgICAgeCA9IHRhcmdldENvb3JkaW5hdGVzQXJyYXlbal1bMF07DQogICAgICAgIHkgPSB0YXJnZXRDb29yZGluYXRlc0FycmF5W2pdWzFdOw0KICAgICAgICBjbGljayh4LCB5KTsNCiAgICAgICAgLy8gcHJlc3MoNTAwLCAxMDAwLCAxMjAwKTsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIGNvb3JkaW5hdGVBbmFseXNpc0FuZEV4dHJhY3REb3duKGltZykgew0KICAgIC8v5YiG5p6Q5o+Q5Y+W5Zu+54mH5Lit55u46YK76Imy5Z2X6aKc6Imy55u45ZCM55qE5Z2Q5qCHDQogICAgLy/lj6rliIbmnpDoibLlnZfnmoTlj7PmlrnlkozkuIvmlrks5aaC5p6c5Y+z6L655oiW6ICF5LiL6L656aKc6Imy5LiA5qC3LOmCo+S5iOWwseiusOW9lei/meS4quWdkOaghw0KICAgIC8v6LW354K55Z2Q5qCH5pivMTM3LDUzOA0KICAgIC8v57uI54K55Z2Q5qCH5pivMTAyNywxNTk3DQogICAgdmFyIHhTdGFydCA9IDEzNywNCiAgICAgICAgeVN0YXJ0ID0gMTUzMCwNCiAgICAgICAgeEVuZCA9IDEwMjcsDQogICAgICAgIHlFbmQgPSAxNTk3LA0KICAgICAgICAvL+iJsuWdl+S4iuS4i+mXtOi3nTEyMA0KICAgICAgICAvL+iJsuWdl+W3puWPs+mXtOi3nTEyNg0KICAgICAgICBTcGFjaW5nTGVmdEFuZFJpZ2h0ID0gMTI0LA0KICAgICAgICBTcGFjaW5nVXBBbmREb3duID0gMTIyLA0KDQogICAgICAgIC8vIOaoquaOkjjkuKrnq5bmjpI55LiqDQogICAgICAgIC8v5pyA5ZCO5LiA5o6S5LiN6ZyA6KaB6ICD6JmRLOWcqOesrDjmjpLnmoTml7blgJks5bCx5bey57uP5qOA5rWL6L+H56ysOeaOkuS6hi4NCiAgICAgICAgLy/mqKrmjpLnq5bmjpLpg73kuIDmoLcs5pyA5ZCO5LiA5o6S6YO95LiN6ZyA6KaB6ICD6JmRDQogICAgICAgIEhvcml6b250YWxOdW1iZXIgPSA4Ow0KDQoNCiAgICB2YXIgdGFyZ2V0Q29vcmRpbmF0ZXNBcnJheSA9IG5ldyBBcnJheSgpDQogICAgLy8g5LuO5bem5b6A5Y+zLOS7juS4iuWIsOS4iy4NCiAgICBmb3IgKHZhciBpID0gMTsgaSA8PSBIb3Jpem9udGFsTnVtYmVyIC0gMTsgaSsrKSB7DQoNCiAgICAgICAgLy/ojrflj5blnKjngrkoeCwgeSnlpITnmoTpopzoibINCiAgICAgICAgLy8gLy8vL2xvZyh4U3RhcnQrKGktMSkqU3BhY2luZ0xlZnRBbmRSaWdodCwgeVN0YXJ0KyhqLTEpKlNwYWNpbmdVcEFuZERvd24pOw0KICAgICAgICB2YXIgQ29sb3JNYWluQ29sb3JCbG9jayA9IGltYWdlcy5waXhlbChpbWcsIHhTdGFydCArIChpIC0gMSkgKiBTcGFjaW5nTGVmdEFuZFJpZ2h0LCB5U3RhcnQpOw0KICAgICAgICB2YXIgQ29sb3JSaWdodENvbG9yQmxvY2sgPSBpbWFnZXMucGl4ZWwoaW1nLCB4U3RhcnQgKyBpICogU3BhY2luZ0xlZnRBbmRSaWdodCwgeVN0YXJ0KTsNCiAgICAgICAgdmFyIENvbG9yRG93bkNvbG9yQmxvY2sgPSBpbWFnZXMucGl4ZWwoaW1nLCB4U3RhcnQgKyAoaSAtIDEpICogU3BhY2luZ0xlZnRBbmRSaWdodCwgeVN0YXJ0KTsNCiAgICAgICAgdGhyZXNob2xkID0gVGhyZXNob2xkOw0KICAgICAgICBpZiAoY29sb3JzLmlzU2ltaWxhcihDb2xvck1haW5Db2xvckJsb2NrLCBDb2xvclJpZ2h0Q29sb3JCbG9jaywgdGhyZXNob2xkKSkgew0KICAgICAgICAgICAgdmFyIHRhcmdldENvb3JkaW5hdGVzID0gbmV3IEFycmF5KHhTdGFydCArIChpIC0gMSkgKiBTcGFjaW5nTGVmdEFuZFJpZ2h0LCB5U3RhcnQpDQogICAgICAgICAgICB0YXJnZXRDb29yZGluYXRlc0FycmF5LnB1c2godGFyZ2V0Q29vcmRpbmF0ZXMpDQogICAgICAgIH0NCg0KICAgIH0NCiAgICByZXR1cm4gdGFyZ2V0Q29vcmRpbmF0ZXNBcnJheTsNCn0NCg0KDQoNCi8v6L655LiK55qE6Imy5Z2XDQpmdW5jdGlvbiBjb29yZGluYXRlQW5hbHlzaXNBbmRFeHRyYWN0UmlnaHQoaW1nKSB7DQogICAgLy/liIbmnpDmj5Dlj5blm77niYfkuK3nm7jpgrvoibLlnZfpopzoibLnm7jlkIznmoTlnZDmoIcNCiAgICAvL+WPquWIhuaekOiJsuWdl+eahOWPs+aWueWSjOS4i+aWuSzlpoLmnpzlj7PovrnmiJbogIXkuIvovrnpopzoibLkuIDmoLcs6YKj5LmI5bCx6K6w5b2V6L+Z5Liq5Z2Q5qCHDQogICAgLy/otbfngrnlnZDmoIfmmK8xMzcsNTM4DQogICAgLy/nu4jngrnlnZDmoIfmmK8xMDI3LDE1OTcNCiAgICB2YXIgeFN0YXJ0ID0gMTAwOCwNCiAgICAgICAgeVN0YXJ0ID0gNTQ3LA0KICAgICAgICB4RW5kID0gMTAyNywNCiAgICAgICAgeUVuZCA9IDE1OTc7DQogICAgLy/oibLlnZfkuIrkuIvpl7Tot50xMjANCiAgICAvL+iJsuWdl+W3puWPs+mXtOi3nTEyNg0KICAgIFNwYWNpbmdMZWZ0QW5kUmlnaHQgPSAxMjQsDQogICAgICAgIFNwYWNpbmdVcEFuZERvd24gPSAxMjIsDQoNCiAgICAgICAgLy8g5qiq5o6SOOS4querluaOkjnkuKoNCiAgICAgICAgLy/mnIDlkI7kuIDmjpLkuI3pnIDopoHogIPomZEs5Zyo56ysOOaOkueahOaXtuWAmSzlsLHlt7Lnu4/mo4DmtYvov4fnrKw55o6S5LqGLg0KICAgICAgICAvL+aoquaOkuerluaOkumDveS4gOagtyzmnIDlkI7kuIDmjpLpg73kuI3pnIDopoHogIPomZENCiAgICAgICAgVmVydGljYWxOdW1iZXIgPSA5Ow0KDQogICAgdmFyIHRhcmdldENvb3JkaW5hdGVzQXJyYXkgPSBuZXcgQXJyYXkoKQ0KICAgIC8vIOS7juW3puW+gOWPsyzku47kuIrliLDkuIsuDQoNCiAgICBmb3IgKHZhciBqID0gMTsgaiA8PSBWZXJ0aWNhbE51bWJlciAtIDE7IGorKykgew0KICAgICAgICAvL+iOt+WPluWcqOeCuSh4LCB5KeWkhOeahOminOiJsg0KICAgICAgICAvLyAvLy8vbG9nKHhTdGFydCsoaS0xKSpTcGFjaW5nTGVmdEFuZFJpZ2h0LCB5U3RhcnQrKGotMSkqU3BhY2luZ1VwQW5kRG93bik7DQogICAgICAgIHZhciBDb2xvck1haW5Db2xvckJsb2NrID0gaW1hZ2VzLnBpeGVsKGltZywgeFN0YXJ0LCB5U3RhcnQgKyAoaiAtIDEpICogU3BhY2luZ1VwQW5kRG93bik7DQogICAgICAgIHZhciBDb2xvckRvd25Db2xvckJsb2NrID0gaW1hZ2VzLnBpeGVsKGltZywgeFN0YXJ0LCB5U3RhcnQgKyBqICogU3BhY2luZ1VwQW5kRG93bik7DQogICAgICAgIHRocmVzaG9sZCA9IFRocmVzaG9sZDsNCiAgICAgICAgaWYgKGNvbG9ycy5pc1NpbWlsYXIoQ29sb3JNYWluQ29sb3JCbG9jaywgQ29sb3JEb3duQ29sb3JCbG9jaywgdGhyZXNob2xkKSkgew0KICAgICAgICAgICAgdmFyIHRhcmdldENvb3JkaW5hdGVzID0gbmV3IEFycmF5KHhTdGFydCwgeVN0YXJ0ICsgKGogLSAxKSAqIFNwYWNpbmdVcEFuZERvd24pDQogICAgICAgICAgICB0YXJnZXRDb29yZGluYXRlc0FycmF5LnB1c2godGFyZ2V0Q29vcmRpbmF0ZXMpDQogICAgICAgIH0NCiAgICB9DQoNCiAgICByZXR1cm4gdGFyZ2V0Q29vcmRpbmF0ZXNBcnJheTsNCn0NCg0KDQoNCg0KDQoNCmZ1bmN0aW9uIGNvb3JkaW5hdGVBbmFseXNpc0FuZEV4dHJhY3QoaW1nKSB7DQogICAgLy/liIbmnpDmj5Dlj5blm77niYfkuK3nm7jpgrvoibLlnZfpopzoibLnm7jlkIznmoTlnZDmoIcNCiAgICAvL+WPquWIhuaekOiJsuWdl+eahOWPs+aWueWSjOS4i+aWuSzlpoLmnpzlj7PovrnmiJbogIXkuIvovrnpopzoibLkuIDmoLcs6YKj5LmI5bCx6K6w5b2V6L+Z5Liq5Z2Q5qCHDQogICAgLy/otbfngrnlnZDmoIfmmK8xMzcsNTM4DQogICAgLy/nu4jngrnlnZDmoIfmmK8xMDI3LDE1OTcNCiAgICB2YXIgeFN0YXJ0ID0gMTM3LA0KICAgICAgICB5U3RhcnQgPSA1NDIsDQogICAgICAgIHhFbmQgPSAxMDI3LA0KICAgICAgICB5RW5kID0gMTU5NywNCiAgICAgICAgLy/oibLlnZfkuIrkuIvpl7Tot50xMjINCiAgICAgICAgLy/oibLlnZflt6blj7Ppl7Tot50xMjQNCiAgICAgICAgU3BhY2luZ0xlZnRBbmRSaWdodCA9IDEyNCwNCiAgICAgICAgU3BhY2luZ1VwQW5kRG93biA9IDEyMiwNCg0KICAgICAgICAvLyDmqKrmjpI45Liq56uW5o6SOeS4qg0KICAgICAgICAvL+acgOWQjuS4gOaOkuS4jemcgOimgeiAg+iZkSzlnKjnrKw45o6S55qE5pe25YCZLOWwseW3sue7j+ajgOa1i+i/h+esrDnmjpLkuoYuDQogICAgICAgIC8v5qiq5o6S56uW5o6S6YO95LiA5qC3LOacgOWQjuS4gOaOkumDveS4jemcgOimgeiAg+iZkQ0KICAgICAgICBIb3Jpem9udGFsTnVtYmVyID0gOCwNCiAgICAgICAgVmVydGljYWxOdW1iZXIgPSA5Ow0KDQogICAgdmFyIHRhcmdldENvb3JkaW5hdGVzQXJyYXkgPSBuZXcgQXJyYXkoKQ0KICAgIC8vIOS7juW3puW+gOWPsyzku47kuIrliLDkuIsuDQogICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gSG9yaXpvbnRhbE51bWJlciAtIDE7IGkrKykgew0KICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8PSBWZXJ0aWNhbE51bWJlciAtIDE7IGorKykgew0KICAgICAgICAgICAgLy/ojrflj5blnKjngrkoeCwgeSnlpITnmoTpopzoibINCiAgICAgICAgICAgIC8vIC8vLy9sb2coeFN0YXJ0KyhpLTEpKlNwYWNpbmdMZWZ0QW5kUmlnaHQsIHlTdGFydCsoai0xKSpTcGFjaW5nVXBBbmREb3duKTsNCiAgICAgICAgICAgIHZhciBDb2xvck1haW5Db2xvckJsb2NrID0gaW1hZ2VzLnBpeGVsKGltZywgeFN0YXJ0ICsgKGkgLSAxKSAqIFNwYWNpbmdMZWZ0QW5kUmlnaHQsIHlTdGFydCArIChqIC0gMSkgKiBTcGFjaW5nVXBBbmREb3duKTsNCiAgICAgICAgICAgIHZhciBDb2xvclJpZ2h0Q29sb3JCbG9jayA9IGltYWdlcy5waXhlbChpbWcsIHhTdGFydCArIGkgKiBTcGFjaW5nTGVmdEFuZFJpZ2h0LCB5U3RhcnQgKyAoaiAtIDEpICogU3BhY2luZ1VwQW5kRG93bik7DQogICAgICAgICAgICB2YXIgQ29sb3JEb3duQ29sb3JCbG9jayA9IGltYWdlcy5waXhlbChpbWcsIHhTdGFydCArIChpIC0gMSkgKiBTcGFjaW5nTGVmdEFuZFJpZ2h0LCB5U3RhcnQgKyBqICogU3BhY2luZ1VwQW5kRG93bik7DQogICAgICAgICAgICB0aHJlc2hvbGQgPSBUaHJlc2hvbGQ7DQogICAgICAgICAgICBpZiAoY29sb3JzLmlzU2ltaWxhcihDb2xvck1haW5Db2xvckJsb2NrLCBDb2xvclJpZ2h0Q29sb3JCbG9jaywgdGhyZXNob2xkKSB8fCBjb2xvcnMuaXNTaW1pbGFyKENvbG9yTWFpbkNvbG9yQmxvY2ssIENvbG9yRG93bkNvbG9yQmxvY2ssIHRocmVzaG9sZCkpIHsNCiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0Q29vcmRpbmF0ZXMgPSBuZXcgQXJyYXkoeFN0YXJ0ICsgKGkgLSAxKSAqIFNwYWNpbmdMZWZ0QW5kUmlnaHQsIHlTdGFydCArIChqIC0gMSkgKiBTcGFjaW5nVXBBbmREb3duKQ0KICAgICAgICAgICAgICAgIHRhcmdldENvb3JkaW5hdGVzQXJyYXkucHVzaCh0YXJnZXRDb29yZGluYXRlcykNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gdGFyZ2V0Q29vcmRpbmF0ZXNBcnJheTsNCn0NCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQovLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQpmdW5jdGlvbiBsaWFuTGlhbkthbigpIHsNCg0KDQogICAgLy8gbGV0IGltZ0JhY2tncm91bmQ9W2ltYWdlcy5yZWFkKCIvc2RjYXJkL2pz5oiq5Zu+My/og4zmma8xLnBuZyIpLGltYWdlcy5yZWFkKCIvc2RjYXJkL2pz5oiq5Zu+My/og4zmma8yLnBuZyIpLGltYWdlcy5yZWFkKCIvc2RjYXJkL2pz5oiq5Zu+My/og4zmma8zLnBuZyIpXTsNCiAgICBpbWdCYWNrZ3JvdW5kID0gW2ltYWdlcy5yZWFkKGltZ1BhdGggKyAi6IOM5pmvMS5wbmciKV07DQogICAgLy/ooYzliJfmlbDnm64NCiAgICByb3dzTnVtYmVyID0gMTA7DQogICAgY29sdW1uc051bWJlciA9IDc7DQogICAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vPT09PT09PT09PT09PT09PT09PT09PT09Pei/nui/nueci+aOp+WItuS4reW/gz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KDQogICAgLy/lm77niYfku5PlupMs55So5p2l5a2Y5pS+6K+G5Yir5Ye65p2l55qE5Zu+54mH5L+h5oGvDQogICAgd2FyZWhvdXNlID0gW107DQogICAgcGxhbmVQaWN0dXJlID0gbmV3IEFycmF5KCk7IC8v5YWI5aOw5piO5LiA57u0DQogICAgZm9yIChsZXQgayA9IDA7IGsgPCByb3dzTnVtYmVyICsgMjsgaysrKSB7IC8v5LiA57u06ZW/5bqm5Li6aSxp5Li65Y+Y6YeP77yM5Y+v5Lul5qC55o2u5a6e6ZmF5oOF5Ya15pS55Y+YDQogICAgICAgIHBsYW5lUGljdHVyZVtrXSA9IG5ldyBBcnJheSgpOyAvL+WjsOaYjuS6jOe7tO+8jOavj+S4gOS4quS4gOe7tOaVsOe7hOmHjOmdoueahOS4gOS4quWFg+e0oOmDveaYr+S4gOS4quaVsOe7hO+8mw0KICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNvbHVtbnNOdW1iZXIgKyAyOyBqKyspIHsgLy/kuIDnu7TmlbDnu4Tph4zpnaLmr4/kuKrlhYPntKDmlbDnu4Tlj6/ku6XljIXlkKvnmoTmlbDph49w77yMcOS5n+aYr+S4gOS4quWPmOmHj++8mw0KICAgICAgICAgICAgcGxhbmVQaWN0dXJlW2tdW2pdID0gZmFsc2U7IC8v6L+Z6YeM5bCG5Y+Y6YeP5Yid5aeL5YyW77yM5oiR6L+Z6L6557uf5LiA5Yid5aeL5YyW5Li656m677yM5ZCO6Z2i5Zyo55So5omA6ZyA55qE5YC86KaG55uW6YeM6Z2i55qE5YC8DQogICAgICAgIH0NCiAgICB9DQogICAgLy8gLy8vL2xvZyhwbGFuZVBpY3R1cmUubGVuZ3RoKQ0KICAgIC8vIC8vLy9sb2cocGxhbmVQaWN0dXJlKQ0KICAgIC8vIGV4aXQoKQ0KICAgIC8vIOesrOS4gOS4quWSjOacgOWQjuS4gOS4quWbvueJh+WdkOaghw0KICAgIGltZ0Zpc3RDZW50ZXJDb29yZGluYXRlID0gWzExNCwgNDcyXTsNCiAgICBpbWdMYXN0Q2VudGVyQ29vcmRpbmF0ZSA9IFs5NjYsIDE3NTNdOw0KICAgIC8v5Zu+54mH5a696auYDQogICAgaW1nV2lkdGhIZWlnaHQgPSBbNzYsIDUwXQ0KICAgIGltZ1dpZHRoSGVpZ2h0MiA9IFszOCwgMjVdDQogICAgLy8g5Zu+54mH55qE5bem5Y+z5ZKM5LiK5LiL6Ze06ZqU6Led56a7DQogICAgU3BhY2luZ0xlZnRBbmRSaWdodCA9IE1hdGgucm91bmQoKGltZ0xhc3RDZW50ZXJDb29yZGluYXRlWzBdIC0gaW1nRmlzdENlbnRlckNvb3JkaW5hdGVbMF0pIC8gKGNvbHVtbnNOdW1iZXIgLSAxKSk7DQogICAgU3BhY2luZ1VwQW5kRG93biA9IE1hdGgucm91bmQoKGltZ0xhc3RDZW50ZXJDb29yZGluYXRlWzFdIC0gaW1nRmlzdENlbnRlckNvb3JkaW5hdGVbMV0pIC8gKHJvd3NOdW1iZXIgLSAxKSk7DQoNCiAgICAvLyDlsIblm77niYfmlbTnkIbliLDku5PlupMNCiAgICB3YXJlaG91c2VSZW9yZ2FuaXplKCk7DQogICAgLy/pgY3ljobku5PlupPkuK3nmoTlm77niYcNCiAgICBsZW5XYXJlaG91c2UgPSB3YXJlaG91c2UubGVuZ3RoOw0KDQogICAga2sgPSAxDQoNCiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGxlbldhcmVob3VzZTsgaisrKSB7DQogICAgICAgIC8vIC8vLy9sb2coIuesrCIsaiwi5Liq5Zu+54mH57uEXG4iKTsNCiAgICAgICAgbGV0IGxlbmltZ3MgPSB3YXJlaG91c2Vbal0ubGVuZ3RoOw0KICAgICAgICBpZiAobGVuaW1ncyA+IDMwKSB7DQogICAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgZm9yIChsZXQgazEgPSAwOyBrMSA8IGxlbmltZ3M7IGsxKyspIHsNCiAgICAgICAgICAgIGZvciAobGV0IGsyID0gazEgKyAxOyBrMiA8IGxlbmltZ3M7IGsyKyspIHsNCiAgICAgICAgICAgICAgICAvLy8vbG9nKCLlvZPliY3lr7nmr5TnmoTlm77niYfmmK9cbiIsd2FyZWhvdXNlW2pdW2sxXSwgd2FyZWhvdXNlW2pdW2syXSwiXG7ku6XkuIrmmK/lvZPliY3lr7nmr5TnmoTkuKTlvKDlm77niYciKTsNCiAgICAgICAgICAgICAgICAvLyBzbGVlcCgxMCk7DQogICAgICAgICAgICAgICAgaWYgKHdhcmVob3VzZVtqXVtrMV0uaW1nRW50aXR5ID09IGZhbHNlIHx8IHdhcmVob3VzZVtqXVtrMl0uaW1nRW50aXR5ID09IGZhbHNlKSB7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAvLy8vbG9nKGosIuWPt+e7hOWbvueJh+aVsOmHjz0iLHdhcmVob3VzZVtqXS5sZW5ndGgsIiAgIFxu5q2j5Zyo5Yik5pat55qE5Lik5byg5Zu+54mH6KGM5YiX5Y+356CB5pivOiAiLHJvd0V4dHJhY3Qod2FyZWhvdXNlW2pdW2sxXSksY29sdW1uRXh0cmFjdCh3YXJlaG91c2Vbal1bazFdKSxyb3dFeHRyYWN0KHdhcmVob3VzZVtqXVtrMl0pLGNvbHVtbkV4dHJhY3Qod2FyZWhvdXNlW2pdW2syXSkpDQogICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IHBlbkFwcGxlKHdhcmVob3VzZVtqXVtrMV0sIHdhcmVob3VzZVtqXVtrMl0pOw0KICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy/plIDmr4Hngrnlh7vov4fnmoTlr7nosaENCiAgICAgICAgICAgICAgICAgICAgLy/nrKzlh6DkuKrlm77niYfnu4QNCiAgICAgICAgICAgICAgICAgICAgLy/pgqPkuKTkuKrlm77niYcNCiAgICAgICAgICAgICAgICAgICAgLy/orr7nva7lsZ7mgKfkuLrnqbos6ICM5LiN5piv5Yig6Zmk5a+56LGhLOWQpuWImemAoOaIkOe0ouW8lemUmeivrw0KICAgICAgICAgICAgICAgICAgICB3YXJlaG91c2Vbal1bazFdLmltZ0VudGl0eSA9IGZhbHNlDQogICAgICAgICAgICAgICAgICAgIHdhcmVob3VzZVtqXVtrMl0uaW1nRW50aXR5ID0gZmFsc2UNCiAgICAgICAgICAgICAgICAgICAgLy/liKDpmaTkuYvliY3mlbDnu4TlhoXlrrkNCiAgICAgICAgICAgICAgICAgICAgLy8g55u05o6l56e76ZmkLOiAjOS4jeaYr+aUueWPmOWxnuaApw0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKHdhcmVob3VzZVtqXSx3YXJlaG91c2Vbal0ubGVuZ3RoKQ0KICAgICAgICAgICAgICAgICAgICAvLyB3YXJlaG91c2Vbal0uc3BsaWNlKGsxLDEpOw0KICAgICAgICAgICAgICAgICAgICAvLyB3YXJlaG91c2Vbal0uc3BsaWNlKGsyLTEsMSk7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuW3sumUgOavgSIsaixrMSkNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi5bey6ZSA5q+BIixqLGsyKQ0KICAgICAgICAgICAgICAgICAgICAvL+WIoOmZpOS5i+WQjuaVsOe7hOWGheWuuQ0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKHdhcmVob3VzZVtqXSx3YXJlaG91c2Vbal0ubGVuZ3RoKQ0KDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIC8vIGlmKGtrPT03KXtleGl0KCl9DQogICAgICAgICAgICAgICAga2sgPSBrayArIDENCiAgICAgICAgICAgICAgICAvLy8vbG9nKCLkuKTlvKDlm77niYflr7nmr5Tlrozmr5UiKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICAvLy8vbG9nKCLkuIDmrKHlm77niYfmtojpmaTliqjkvZznu5PmnZ8iKQ0KICAgIC8vLy9sb2cod2FyZWhvdXNlKQ0KDQp9DQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQovLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLz09PT09PT09PeS7peS4i+Wkp+mDqOWIhuaYr+i/nui/nueci+eUqOeahOWwj+WHveaVsD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCg0KZnVuY3Rpb24gcGVuQXBwbGUocDEsIHAyKSB7DQogICAgLy8gaWYoIShyb3dFeHRyYWN0KHAxKT09MTAgJiYgY29sdW1uRXh0cmFjdChwMSk9PTIgJiYgcm93RXh0cmFjdChwMik9PTEwICYmIGNvbHVtbkV4dHJhY3QocDIpPT03KSl7cmV0dXJuO30NCiAgICAvLy8vbG9nKHAxLHAyKQ0KICAgIC8vIC8vLy9sb2coInBlbkFwcGxlIikNCiAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHAxLCBwMikpIHsNCiAgICAgICAgLy9sb2coIuWPr+S7pei/nuaOpSIsIHJvd0V4dHJhY3QocDEpLGNvbHVtbkV4dHJhY3QocDEpLCItLSIscm93RXh0cmFjdChwMiksY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAvLyBleGl0KCk7DQogICAgICAgIGltZ0Rlc3Ryb3kocDEsIHAyKTsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfSBlbHNlIGlmIChpczJJbWdUaG9yb3VnaGZhcmVVcERvd25MZWZ0UmlnaHQocDEsIHAyKSkgew0KICAgICAgICAvL2xvZygi5Y+v5Lul6L+e5o6l5LiK5LiL5bem5Y+zIiwgcm93RXh0cmFjdChwMSksY29sdW1uRXh0cmFjdChwMSksIi0tIixyb3dFeHRyYWN0KHAyKSxjb2x1bW5FeHRyYWN0KHAyKSk7DQogICAgICAgIC8vIGV4aXQoKTsNCg0KICAgICAgICBpbWdEZXN0cm95KHAxLCBwMik7DQogICAgICAgIHJldHVybiB0cnVlOw0KDQogICAgfSBlbHNlIGlmIChpczJJbWdUaG9yb3VnaGZhcmVaKHAxLCBwMikpIHsNCiAgICAgICAgLy9sb2coIuWPr+S7pei/nuaOpVpaWiIsIHJvd0V4dHJhY3QocDEpLGNvbHVtbkV4dHJhY3QocDEpLCItLSIscm93RXh0cmFjdChwMiksY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAvLyBleGl0KCk7DQoNCiAgICAgICAgaW1nRGVzdHJveShwMSwgcDIpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCg0KICAgIH0gZWxzZSBpZiAoaXMySW1nVGhvcm91Z2hmYXJlWjEocDEsIHAyKSkgew0KICAgICAgICAvL2xvZygi5Y+v5Lul6L+e5o6lWlpaMSIsIHJvd0V4dHJhY3QocDEpLGNvbHVtbkV4dHJhY3QocDEpLCItLSIscm93RXh0cmFjdChwMiksY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAvLyBleGl0KCk7DQoNCiAgICAgICAgaW1nRGVzdHJveShwMSwgcDIpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCg0KICAgIH0gZWxzZSBpZiAoaXMySW1nVGhvcm91Z2hmYXJlWjIocDEsIHAyKSkgew0KICAgICAgICAvL2xvZygi5Y+v5Lul6L+e5o6lWlpaMiIsIHJvd0V4dHJhY3QocDEpLGNvbHVtbkV4dHJhY3QocDEpLCItLSIscm93RXh0cmFjdChwMiksY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAvLyBleGl0KCk7DQoNCiAgICAgICAgaW1nRGVzdHJveShwMSwgcDIpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCg0KICAgIH0gZWxzZSBpZiAoaXMySW1nVGhvcm91Z2hmYXJlWjMocDEsIHAyKSkgew0KICAgICAgICAvL2xvZygi5Y+v5Lul6L+e5o6lWlpaMyIsIHJvd0V4dHJhY3QocDEpLGNvbHVtbkV4dHJhY3QocDEpLCItLSIscm93RXh0cmFjdChwMiksY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAvLyBleGl0KCk7DQoNCiAgICAgICAgaW1nRGVzdHJveShwMSwgcDIpOw0KICAgICAgICByZXR1cm4gdHJ1ZTsNCg0KICAgIH0gZWxzZSB7DQogICAgICAgIC8v5LiN6IO96L+eDQogICAgICAgIC8vbG9nKCLkuI3og73ov57mjqUiLCByb3dFeHRyYWN0KHAxKSxjb2x1bW5FeHRyYWN0KHAxKSwiLS0iLHJvd0V4dHJhY3QocDIpLGNvbHVtbkV4dHJhY3QocDIpKTsNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KDQogICAgfQ0KfQ0KLy/lm77niYfmnInkuKTkuKrlsZ7mgKcs6KGM5YiX5ZKM5Zu+54mH5a6e5L2TDQpmdW5jdGlvbiBJbWdVbml0KGltZ0VudGl0eSwgaW1nUm93QW5kY29sdW1uKSB7DQogICAgdGhpcy5pbWdFbnRpdHkgPSBpbWdFbnRpdHk7DQogICAgdGhpcy5pbWdSb3dBbmRjb2x1bW4gPSBpbWdSb3dBbmRjb2x1bW47DQp9DQoNCg0KLy/ku5PlupPkuK3nmoTmoLzlvI8NCi8v5LuT5bqT5piv5LiA5Liq5YiX6KGoLOavj+S4quWIl+ihqOaYr+S4gOS4quWbvueJh+Wvueixoee7hA0KLy/mr4/kuKrlm77niYflr7nosaHnu4TljIXlkKvkuKTkuKrlsZ7mgKcgIOWbvueJh+WSjOihjOWIlw0KLy8gaW1nRGlzY2VybiA9IG5ldyBJbWdVbml0KGltZ0VudGl0eSwgaW1nUm93QW5kY29sdW1uKTsNCmZ1bmN0aW9uIGlzMkltZ1Rob3JvdWdoZmFyZShwMSwgcDIpIHsNCiAgICAvLy8vbG9nKHAxLHAyKQ0KDQogICAgLy8gPT09PT09PT09PT09PeS4jeaJk+WNsOS4jeaDs+WFs+eahOWbvueJh+S/oeaBrz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8gaWYoIShyb3dFeHRyYWN0KHAyKT09MiAmJiBjb2x1bW5FeHRyYWN0KHAyKT09NCkpe3JldHVybjt9DQogICAgLy8vL2xvZygi6L+Z6YeM5pivaXMySW1nVGhvcm91Z2hmYXJlKHAxLCBwMikiKQ0KICAgIC8vLy9sb2cocDEscDIpDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KDQogICAgLy8vL2xvZygiaXMySW1nVGhvcm91Z2hmYXJlKHAxLCBwMinkvKDlhaXnmoTlj4LmlbDmmK8iLHAxLHAyKQ0KICAgIC8v5Y+q6ZyA6KaB6L+U5Zue5piv5ZCm6IO96L+e5o6lLOS4jemcgOimgeeCueWHuw0KICAgIC8v5byA5aeL5pCc57Si5YmN5a+5cDEscDLmjpLluo/vvIzkvb9wMuWwveWPr+iDveeahOWcqHAx55qE5Y+z5LiL5pa544CCDQogICAgLy/ov5nmoLflgZrlj6/ku6XnroDljJbnrpfms5UNCiAgICBpZiAocm93RXh0cmFjdChwMSkgPiByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgcDEgPSBwMjsNCiAgICAgICAgcDIgPSB0cDsNCiAgICB9IGVsc2UgaWYgKHJvd0V4dHJhY3QocDEpID09IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgIGlmIChjb2x1bW5FeHRyYWN0KHAxKSA+IGNvbHVtbkV4dHJhY3QocDIpKSB7DQogICAgICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgICAgIHAxID0gcDI7DQogICAgICAgICAgICBwMiA9IHRwOw0KICAgICAgICB9DQogICAgfQ0KICAgIC8vLy9sb2cocDEscDIpDQoNCg0KICAgIC8v5Yik5pat5Lik5Liq5Zu+54mH6IO95LiN6IO96L+e6YCaDQogICAgLy8g5LiA6Iis6YO95Lik56eN5pa55rOVDQogICAgLy8g5LiA5Liq5piv5p6a5Li+DQogICAgLy8g5LiA5Liq5piv6YCS5b2SKERGUyjmt7HluqbkvJjlhYjmkJzntKIpKQ0KICAgIC8v6L+Z6YeM5oiR5Lus55So5p6a5Li+DQogICAgLy8g56ys5LiA56eN5Lik5Liq5Zu+54mH5Zyo5ZCM5LiA6KGMDQogICAgLy8g5Lik5Liq5Zu+54mH5oyo552ADQogICAgLy8g5Lik5Liq5Zu+54mH5LiN5oyo552ADQoNCiAgICAvLyDnrKzkuoznp43kuKTkuKrlm77niYflnKjlkIzkuIDliJcNCiAgICAvLyDkuKTkuKrlm77niYfmjKjnnYANCiAgICAvLyDkuKTkuKrlm77niYfkuI3mjKjnnYANCg0KICAgIC8vIOesrOS4ieenjeS4pOS4quWbvueJh+aXouS4jeWcqOWQjOS4gOihjOS5n+S4jeWcqOWQjOS4gOWIlw0KDQogICAgLy8g5oiR5Lus5LiA5Liq5LiA5Liq5p2l55yLDQogICAgLy89PT09PT09PT09PT09PT09PeWPr+eIseeahOWIhuWJsue6vz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g56ys5LiA56eN5Lik5Liq5Zu+54mH5Zyo5ZCM5LiA6KGMDQogICAgLy8vL2xvZygi5ZCM5LiA6KGMPT09PT09PT09PT09PT09PT09PT0iLG9ubGluZVgocDEsIHAyKSkNCiAgICBpZiAob25saW5lWChwMSwgcDIpKSB7DQogICAgICAgIC8vLy9sb2coIjI2NuihjOWHuuWFpeeahOW6lOivpeaYr+WQjOS4gOihjCxpZihvbmxpbmVYKHAxLCBwMikp5Y+C5pWw5pivIixwMSxwMikNCiAgICAgICAgLy8g5Lik5Liq5Zu+54mH5oyo552ADQogICAgICAgIGlmIChwMU5leHRUb1AyKCJvbmxpbmVYIiwgcDEsIHAyKSkgew0KICAgICAgICAgICAgLy8vL2xvZygiMTMy6KGMcDEscDLlnKjkuIDotbciLHAxLHAyKQ0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0gZWxzZSBpZiAob2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwMSwgcDIpKSB7DQogICAgICAgICAgICAvLy8vbG9nKCIyNzLooYzlm77niYfkuK3mnInpmpznoo3niallbHNlIGlmIChvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMihvbmxpbmVYLCBwMSwgcDIpIixwMSxwMikNCiAgICAgICAgICAgIC8vIGV4aXQoKQ0KICAgICAgICAgICAgLy8gcDEscDLkuK3pl7TmnInpmpznoo3niakNCiAgICAgICAgICAgIC8v6YKj5LmIcDHnmoTkuIvpnaJwM+aYr+S4jeaYr+epuueahD8NCiAgICAgICAgICAgIC8v5aaC5p6ccDPmmK/nqbrnmoQs6YKj5LmIcDLnmoTkuIvpnaJwNOaYr+S4jeaYr+epuueahCwNCiAgICAgICAgICAgIC8v5aaC5p6ccDTmmK/nqbrnmoQs6YKj5LmIcDHnmoTkuIvpnaJwM+WSjHAy55qE5LiL6Z2icDTog73kuI3og73ov57mjqU/DQogICAgICAgICAgICAvL+WmguaenHAz5ZKMcDTlj6/ku6Xov57mjqUs6YKj5LmIcDHlkoxwMuWwseiDvei/nuaOpQ0KDQogICAgICAgICAgICAvL+ihjOWIl+aVsOebrg0KICAgICAgICAgICAgLy8gbGV0IHJvd3NOdW1iZXIgPSAxMDsNCiAgICAgICAgICAgIC8vIGxldCBjb2x1bW5zTnVtYmVyID0gNzsNCiAgICAgICAgICAgIC8vLy9sb2coIuW8gOWni2ZvcuW+queOryIsKHJvd3NOdW1iZXIgLSByb3dFeHRyYWN0KHAxKSkpDQogICAgICAgICAgICBmb3IgKGxldCBrID0gMTsgayA8PSAocm93c051bWJlciAtIHJvd0V4dHJhY3QocDEpKSArIDE7IGsrKykgew0KICAgICAgICAgICAgICAgIC8vLy9sb2coIjEzNeihjOeahOWPguaVsHAxLHAy5pivIixwMSxwMiwiaz0iLGspOw0KICAgICAgICAgICAgICAgIGxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpICsgaywgY29sdW1uRXh0cmFjdChwMSkpOw0KICAgICAgICAgICAgICAgIGxldCBwNCA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpICsgaywgY29sdW1uRXh0cmFjdChwMikpOw0KDQoNCg0KDQogICAgICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDMpIHx8ICFpc0ltZ0JhY2tncm91bmQocDQpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuS4i+i3r+S4jemAmiIpDQogICAgICAgICAgICAgICAgICAgIC8vIOS4i+i3r+S4jemAmg0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCLlkIzlnKjkuIDooYzkuIvot6/kuI3pgJoiLHAxLHAyKQ0KICAgICAgICAgICAgICAgICAgICAvLyBleGl0KCkNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi6L+b5YWl5Yiw6L+Z6YeM5LqGIikNCiAgICAgICAgICAgICAgICAgICAgbGV0IHAzbmV3ID0gbmV3IEltZ1VuaXQocDMsIFtyb3dFeHRyYWN0KHAxKSArIGssIGNvbHVtbkV4dHJhY3QocDEpXSk7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNG5ldyA9IG5ldyBJbWdVbml0KHA0LCBbcm93RXh0cmFjdChwMikgKyBrLCBjb2x1bW5FeHRyYWN0KHAyKV0pOw0KICAgICAgICAgICAgICAgICAgICAvLyDliKTmlq1wM3A05piv5ZCm5Y+v5Lul6L+e5o6lDQoNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygib2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIob25saW5lWCwgcDNuZXcsIHA0bmV3KSIsb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwM25ldywgcDRuZXcpKQ0KDQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHAzbmV3LCBwNG5ldykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuWQjOWcqOS4gOihjOS4i+i3r+i/numAmiIscDEscDIpDQogICAgICAgICAgICAgICAgICAgICAgICAvLyBleGl0KCkNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgLy8vL2xvZygi5LiL6Lev5LiN6YCa5byA5aeL5rWL6K+V5LiK6LevIikNCiAgICAgICAgICAgIC8v5aaC5p6c5LiL6Lev5LiN6YCaLOmCo+S5iOWwneivleS4iui3rw0KICAgICAgICAgICAgZm9yIChsZXQgayA9IDE7IGsgPD0gcm93RXh0cmFjdChwMSk7IGsrKykgew0KICAgICAgICAgICAgICAgIC8vLy9sb2coIjE3NeihjHAzcDTkuLrnqboiLHJvd0V4dHJhY3QocDEpIC0gaywgY29sdW1uRXh0cmFjdChwMSkscm93RXh0cmFjdChwMikgLSBrLCBjb2x1bW5FeHRyYWN0KHAyKSkNCiAgICAgICAgICAgICAgICAvLyBleGl0KCkNCiAgICAgICAgICAgICAgICBsZXQgcDMgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAxKSAtIGssIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICAgICAgICAgICAgICBsZXQgcDQgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSAtIGssIGNvbHVtbkV4dHJhY3QocDIpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwMykgfHwgIWlzSW1nQmFja2dyb3VuZChwNCkpIHsNCiAgICAgICAgICAgICAgICAgICAgLy/kuIrot6/kuI3pgJoNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi5ZCM5Zyo5LiA6KGM5LiK6Lev5LiN6YCaIixwMSxwMikNCiAgICAgICAgICAgICAgICAgICAgLy8gZXhpdCgpDQoNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygiMTg16KGMcDNwNOS4uuepuiIscm93RXh0cmFjdChwMSkgLSBrLCBjb2x1bW5FeHRyYWN0KHAxKSxyb3dFeHRyYWN0KHAyKSAtIGssIGNvbHVtbkV4dHJhY3QocDIpKQ0KICAgICAgICAgICAgICAgICAgICAvLyBleGl0KCkNCiAgICAgICAgICAgICAgICAgICAgbGV0IHAzbmV3ID0gbmV3IEltZ1VuaXQocDMsIFtyb3dFeHRyYWN0KHAxKSAtIGssIGNvbHVtbkV4dHJhY3QocDEpXSk7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNG5ldyA9IG5ldyBJbWdVbml0KHA0LCBbcm93RXh0cmFjdChwMikgLSBrLCBjb2x1bW5FeHRyYWN0KHAyKV0pOw0KICAgICAgICAgICAgICAgICAgICAvLyDliKTmlq1wM3A05piv5ZCm5Y+v5Lul6L+e5o6lDQogICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwM25ldywgcDRuZXcpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCLlkIzlnKjkuIDooYzkuIrot6/ov57pgJoiLHAxLHAyKQ0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXhpdCgpDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIjE5NuihjHAzcDTkuI3og73ov57mjqUiLHAzbmV3LCBwNG5ldykNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8vIHAxLHAy5Lit6Ze05rKh5pyJ6Zqc56KN54mpDQogICAgICAgICAgICAvLy8vbG9nKCLlkIzlnKjkuIDooYxwMSxwMuS4remXtOayoeaciemanOeijeeJqSzlj6/ku6Xnm7TmjqXov57mjqUiLHAxLHAyKQ0KICAgICAgICAgICAgLy8gZXhpdCgpDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAvLyDnrKzkuoznp43kuKTkuKrlm77niYflnKjlkIzkuIDliJcNCiAgICBpZiAob25saW5lWShwMSwgcDIpKSB7DQogICAgICAgIC8vIGlmKCEocm93RXh0cmFjdChwMSk9PTQgJiYgY29sdW1uRXh0cmFjdChwMSk9PTYgJiYgcm93RXh0cmFjdChwMik9PTcgJiYgY29sdW1uRXh0cmFjdChwMik9PTYpKXtyZXR1cm47fQ0KDQogICAgICAgIC8vLy9sb2coIjI4MeihjOWQjOS4gOWIl29ubGluZVkocDEsIHAyKSIscDEscDIpDQogICAgICAgIC8vIOS4pOS4quWbvueJh+aMqOedgA0KICAgICAgICBpZiAocDFOZXh0VG9QMigib25saW5lWSIsIHAxLCBwMikpIHsNCiAgICAgICAgICAgIC8vLy9sb2coIuS4pOS4quWbvueJh+aMqOedgCIpDQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9IGVsc2UgaWYgKG9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDEsIHAyKSkgew0KICAgICAgICAgICAgLy8vL2xvZygi5Lik5Liq5Zu+54mH5Lit6Ze05pyJ6Zqc56KN54mpIikNCg0KICAgICAgICAgICAgLy8gcDEscDLkuK3pl7TmnInpmpznoo3niakNCiAgICAgICAgICAgIC8v6YKj5LmIcDHnmoTkuIvpnaJwM+aYr+S4jeaYr+epuueahD8NCiAgICAgICAgICAgIC8v5aaC5p6ccDPmmK/nqbrnmoQs6YKj5LmIcDLnmoTkuIvpnaJwNOaYr+S4jeaYr+epuueahCwNCiAgICAgICAgICAgIC8v5aaC5p6ccDTmmK/nqbrnmoQs6YKj5LmIcDHnmoTkuIvpnaJwM+WSjHAy55qE5LiL6Z2icDTog73kuI3og73ov57mjqU/DQogICAgICAgICAgICAvL+WmguaenHAz5ZKMcDTlj6/ku6Xov57mjqUs6YKj5LmIcDHlkoxwMuWwseiDvei/nuaOpQ0KDQogICAgICAgICAgICAvL+ihjOWIl+aVsOebrg0KICAgICAgICAgICAgLy8gbGV0IHJvd3NOdW1iZXIgPSAxMDsNCiAgICAgICAgICAgIC8vIGxldCBjb2x1bW5zTnVtYmVyID0gNzsNCiAgICAgICAgICAgIGZvciAobGV0IGsgPSAxOyBrIDw9IChjb2x1bW5zTnVtYmVyIC0gY29sdW1uRXh0cmFjdChwMSkpOyBrKyspIHsNCg0KICAgICAgICAgICAgICAgIGxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAxKSArIGspOw0KICAgICAgICAgICAgICAgIGxldCBwNCA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAyKSArIGspOw0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHAzKSB8fCAhaXNJbWdCYWNrZ3JvdW5kKHA0KSkgew0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCIyMznooYzlkIzkuIDliJflj7Pot6/kuI3pgJoiKQ0KICAgICAgICAgICAgICAgICAgICAvL+WPs+i3r+S4jemAmg0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBsZXQgcDNuZXcgPSBuZXcgSW1nVW5pdChwMywgW3Jvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAxKSArIGtdKTsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHA0bmV3ID0gbmV3IEltZ1VuaXQocDQsIFtyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMikgKyBrXSk7DQogICAgICAgICAgICAgICAgICAgIC8vIOWIpOaWrXAzcDTmmK/lkKblj6/ku6Xov57mjqUNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHAzbmV3LCBwNG5ldykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgLy/lpoLmnpzlj7Pot6/kuI3pgJos6YKj5LmI5bCd6K+V5bem6LevDQogICAgICAgICAgICAvLyBmb3IgKGxldCBrID0gKGNvbHVtbnNOdW1iZXItMSk7IGsgPj0gMTsgay0tKXsNCiAgICAgICAgICAgIGZvciAobGV0IGsgPSAxOyBrIDw9IGNvbHVtbkV4dHJhY3QocDEpOyBrKyspIHsNCg0KICAgICAgICAgICAgICAgIGxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAxKSAtIGspOw0KICAgICAgICAgICAgICAgIGxldCBwNCA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAyKSAtIGspOw0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHAzKSB8fCAhaXNJbWdCYWNrZ3JvdW5kKHA0KSkgew0KICAgICAgICAgICAgICAgICAgICAvL+WPs+i3r+S4jemAmg0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCIyNTnooYzlkIzkuIDliJflt6bot6/kuI3pgJoiKQ0KDQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIjI2M+ihjC0tLS0tLS0tLS0tLSIpDQoNCiAgICAgICAgICAgICAgICAgICAgbGV0IHAzbmV3ID0gbmV3IEltZ1VuaXQocDMsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMSkgLSBrXSk7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNG5ldyA9IG5ldyBJbWdVbml0KHA0LCBbcm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDIpIC0ga10pOw0KICAgICAgICAgICAgICAgICAgICAvLyDliKTmlq1wM3A05piv5ZCm5Y+v5Lul6L+e5o6lDQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuWImuaJjTI2OOihjOS8oOWFpeeahOWPguaVsOaYr3AzbmV3LHA0bmV3IixwM25ldyxwNG5ldykNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHAzbmV3LCBwNG5ldykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIjI3MOihjOayoeaciemanOeijeeJqSIpDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIjI3M+ihjOaciemanOeijeeJqSIpDQoNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8vIHAxLHAy5Lit6Ze05rKh5pyJ6Zqc56KN54mpDQogICAgICAgICAgICAvLy8vbG9nKCLkuKTkuKrlm77niYfkuK3pl7TmsqHmnInpmpznoo3niakiKQ0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9DQogICAgcmV0dXJuIGZhbHNlOw0KfQ0KDQoNCg0KDQovLz09PT09PT09PT09PT09PT09PT09PT096YeN6KaB55qE5Luj56CB5LiJ6KGM5YiG5Ymy57q/PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLy8gaXMySW1nVGhvcm91Z2hmYXJlKHAxLCBwMikNCi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KLy89PT09PT09PT09PT09PT09PT09PT09PeWQjOS4gOihjOWIl+S4jeWtmOWcqOeahD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLyDnrKzkuInnp43kuKTkuKrlm77niYfkuI3lnKjlkIzkuIDliJcs5Lmf5LiN5Zyo5ZCM5LiA6KGMDQovLyDpgqPkuYjlsLHmnInkuIrkuIvlt6blj7Plm5vkuKrmlrnlkJHnmoTov57ms5UNCmZ1bmN0aW9uIGlzMkltZ1Rob3JvdWdoZmFyZVVwRG93bkxlZnRSaWdodChwMSwgcDIpIHsNCg0KDQoNCiAgICAvLy8vbG9nKCJpczJJbWdUaG9yb3VnaGZhcmVVcERvd25MZWZ0UmlnaHQocDEscDIp55qE5Y+C5pWw5pivIixwMSxwMikNCiAgICAvL+WPqumcgOimgei/lOWbnuaYr+WQpuiDvei/nuaOpSzkuI3pnIDopoHngrnlh7sNCiAgICAvL+W8gOWni+aQnOe0ouWJjeWvuXAxLHAy5o6S5bqP77yM5L2/cDLlsL3lj6/og73nmoTlnKhwMeeahOWPs+S4i+aWueOAgg0KICAgIC8v6L+Z5qC35YGa5Y+v5Lul566A5YyW566X5rOVDQogICAgaWYgKHJvd0V4dHJhY3QocDEpID4gcm93RXh0cmFjdChwMikpIHsNCiAgICAgICAgbGV0IHRwID0gcDE7DQogICAgICAgIHAxID0gcDI7DQogICAgICAgIHAyID0gdHA7DQogICAgfSBlbHNlIGlmIChyb3dFeHRyYWN0KHAxKSA9PSByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBpZiAoY29sdW1uRXh0cmFjdChwMSkgPiBjb2x1bW5FeHRyYWN0KHAyKSkgew0KICAgICAgICAgICAgbGV0IHRwID0gcDE7DQogICAgICAgICAgICBwMSA9IHAyOw0KICAgICAgICAgICAgcDIgPSB0cDsNCiAgICAgICAgfQ0KICAgIH0NCg0KDQoNCg0KICAgIGlmIChjb2x1bW5FeHRyYWN0KHAxKSA8IGNvbHVtbkV4dHJhY3QocDIpKSB7DQogICAgICAgIC8vLy9sb2coInAx5Zyo5bem6L65cDLlnKjlj7PovrkiKQ0KICAgICAgICAvL+esrOS4gOenjSzku47kuIrpnaLlvIDlp4sNCiAgICAgICAgLy8gcDHlnKjlt6bkuIrop5JwMuWcqOWPs+S4i+inkg0KICAgICAgICAvLyBsZXQgcDM9aW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSksY29sdW1uRXh0cmFjdChwMSkrayk7DQogICAgICAgIC8vIGxldCBwND1pbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSxjb2x1bW5FeHRyYWN0KHAyKStrKTsNCiAgICAgICAgLy9wMeS4jnAz6IGU57O7LHAy5LiOcDTogZTns7sNCiAgICAgICAgLy8gZm9yIChsZXQgayA9IChyb3dFeHRyYWN0KHAyKS1yb3dFeHRyYWN0KHAxKSk7IGsgPj0gMTsgay0tKXsNCiAgICAgICAgLy8gZm9yIChsZXQgayA9IDE7IGsgPD0gKHJvd0V4dHJhY3QocDIpLXJvd0V4dHJhY3QocDEpKTsgaysrKXsNCiAgICAgICAgLy8g6aaW5YWI55yLcDLnmoTkuIrpnaLkuIDmoLxwNOaYr+S4jeaYr+epuueahA0KICAgICAgICBsZXQgcDRGcmVlc3R5bGUxID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMikgLSAxLCBjb2x1bW5FeHRyYWN0KHAyKSk7DQogICAgICAgIC8vLy9sb2coInAy5LiK6Z2i5LiA5qC85piv5LiN5piv6IOM5pmvOiIsaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMSkpDQogICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMSkpIHsNCiAgICAgICAgICAgIC8vLy9sb2coIuS4iui3r+S4jemAmjEiKQ0KICAgICAgICAgICAgLy/kuIrot6/kuI3pgJoNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8v5LiN5LuF5YiG5bem5Y+zLOS4iuS4i+S5n+imgeWIhg0KICAgICAgICAgICAgLy9wMeWcqHAy5LiK6L65DQogICAgICAgICAgICBpZiAocm93RXh0cmFjdChwMSkgPCByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICAgICAgICAgIC8vLy9sb2coInAx6auYIikNCiAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDIpKTsNCg0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMikpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi5LiK6Lev5LiN6YCaMiIpDQogICAgICAgICAgICAgICAgICAgIC8v5LiK6Lev5LiN6YCaDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHA0RnJlZXN0eWxlMk5ldyA9IG5ldyBJbWdVbml0KHA0RnJlZXN0eWxlMiwgW3Jvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAyKV0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMikgJiYgaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDRGcmVlc3R5bGUyTmV3LCBwMikgfHwgIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvL3Ax5ZyocDLkuIvovrkNCiAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTIpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuS4iui3r+S4jemAmjMiKQ0KDQogICAgICAgICAgICAgICAgICAgIC8v5LiK6Lev5LiN6YCaDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHA0RnJlZXN0eWxlMk5ldyA9IG5ldyBJbWdVbml0KHA0RnJlZXN0eWxlMiwgW3Jvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAxKV0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMikgJiYgaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDRGcmVlc3R5bGUyTmV3LCBwMikgfHwgIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgLy/kuIvot68NCiAgICAgICAgLy8vL2xvZygi5byA5aeL5Yik5pat5LiL6LevIikNCiAgICAgICAgcDRGcmVlc3R5bGUxID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMikgKyAxLCBjb2x1bW5FeHRyYWN0KHAyKSk7DQoNCg0KICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTEpKSB7DQogICAgICAgICAgICAvLy8vbG9nKCLkuIvot6/kuI3pgJoiKQ0KICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGlmIChyb3dFeHRyYWN0KHAxKSA8IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgICAgICAgICAgLy8vL2xvZygicDHlnKhwMuS4iumdojY2NiIpDQogICAgICAgICAgICAgICAgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDIpKTsNCg0KICAgICAgICAgICAgICAgIC8vLy9sb2cocm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpKQ0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMikpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi5LiL6Lev5LiN6YCaIikNCg0KICAgICAgICAgICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTJOZXcgPSBuZXcgSW1nVW5pdChwNEZyZWVzdHlsZTIsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMildKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpICYmIGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHA0RnJlZXN0eWxlMk5ldywgcDIpIHx8ICFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHA0RnJlZXN0eWxlMiA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAyKSk7DQogICAgICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUyKSkgew0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCLkuIvot6/kuI3pgJoiKQ0KDQogICAgICAgICAgICAgICAgICAgIC8v5LiL6Lev5LiN6YCaDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHA0RnJlZXN0eWxlMk5ldyA9IG5ldyBJbWdVbml0KHA0RnJlZXN0eWxlMiwgW3Jvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAyKV0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMikgJiYgaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDRGcmVlc3R5bGUyTmV3LCBwMikgfHwgIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvL+W3pui3rw0KICAgICAgICAvLy8vbG9nKCLlvIDlp4vliKTmlq3lt6bot68iKQ0KDQogICAgICAgIHA0RnJlZXN0eWxlMSA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAyKSAtIDEpOw0KICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTEpKSB7DQogICAgICAgICAgICAvLy8vbG9nKCLlt6bot6/kuI3pgJoiKQ0KICAgICAgICAgICAgLy/lt6bot6/kuI3pgJoNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGlmIChyb3dFeHRyYWN0KHAxKSA8IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgICAgICAgICAgLy8vL2xvZygi5bem6LevcDHlnKjkuIrpnaJwMuWcqOS4i+mdoiIpDQogICAgICAgICAgICAgICAgLy8vL2xvZyhyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMSkpDQogICAgICAgICAgICAgICAgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTIpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuW3pui3r+S4jemAmiIpDQoNCiAgICAgICAgICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KDQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIj09PT09PT09Iixyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMSkpDQogICAgICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTJOZXcgPSBuZXcgSW1nVW5pdChwNEZyZWVzdHlsZTIsIFtyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMSldKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpICYmIGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygiPT09PT096YCa6YCa6YCaPT09PT09PT09PSIpDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDRGcmVlc3R5bGUyTmV3LCBwMikgfHwgIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTIpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuW3pui3r+S4jemAmiIpDQoNCiAgICAgICAgICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyTmV3ID0gbmV3IEltZ1VuaXQocDRGcmVlc3R5bGUyLCBbcm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpXSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAyKSAmJiBpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNEZyZWVzdHlsZTJOZXcsIHAyKSB8fCAhb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIC8v5Y+z6LevDQogICAgICAgIC8vLy9sb2coIuW8gOWni+WIpOaWreWPs+i3ryIpDQoNCiAgICAgICAgcDRGcmVlc3R5bGUxID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDIpICsgMSk7DQogICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMSkpIHsNCiAgICAgICAgICAgIC8vLy9sb2coIuWPs+i3r+S4jemAmiIpDQogICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKHJvd0V4dHJhY3QocDEpIDwgcm93RXh0cmFjdChwMikpIHsNCg0KICAgICAgICAgICAgICAgIHA0RnJlZXN0eWxlMiA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAyKSk7DQogICAgICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUyKSkgew0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCLlj7Pot6/kuI3pgJoiKQ0KDQogICAgICAgICAgICAgICAgICAgIC8v5LiL6Lev5LiN6YCaDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHA0RnJlZXN0eWxlMk5ldyA9IG5ldyBJbWdVbml0KHA0RnJlZXN0eWxlMiwgW3Jvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAyKV0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMikgJiYgaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDRGcmVlc3R5bGUyTmV3LCBwMikgfHwgIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDIpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTIpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuWPs+i3r+S4jemAmiIpDQoNCiAgICAgICAgICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyTmV3ID0gbmV3IEltZ1VuaXQocDRGcmVlc3R5bGUyLCBbcm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDIpXSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAyKSAmJiBpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNEZyZWVzdHlsZTJOZXcsIHAyKSB8fCAhb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgaWYgKGNvbHVtbkV4dHJhY3QocDEpID4gY29sdW1uRXh0cmFjdChwMikpIHsNCg0KICAgICAgICAvLy8vbG9nKCJwMeWcqOWPsyAgcDLlnKjlt6YiKQ0KICAgICAgICAvL+esrOS4gOenjSzku47kuIrpnaLlvIDlp4sNCiAgICAgICAgLy8gcDHlnKjlt6bkuIrop5JwMuWcqOWPs+S4i+inkg0KICAgICAgICAvLyBsZXQgcDM9aW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSksY29sdW1uRXh0cmFjdChwMSkrayk7DQogICAgICAgIC8vIGxldCBwND1pbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSxjb2x1bW5FeHRyYWN0KHAyKStrKTsNCiAgICAgICAgLy9wMeS4jnAz6IGU57O7LHAy5LiOcDTogZTns7sNCiAgICAgICAgLy8gZm9yIChsZXQgayA9IChyb3dFeHRyYWN0KHAyKS1yb3dFeHRyYWN0KHAxKSk7IGsgPj0gMTsgay0tKXsNCiAgICAgICAgLy8gZm9yIChsZXQgayA9IDE7IGsgPD0gKHJvd0V4dHJhY3QocDIpLXJvd0V4dHJhY3QocDEpKTsgaysrKXsNCiAgICAgICAgLy8g6aaW5YWI55yLcDLnmoTkuIrpnaLkuIDmoLxwNOaYr+S4jeaYr+epuueahA0KDQogICAgICAgIC8vLy9sb2coIuW8gOWni+WIpOaWreS4iui3ryIpDQogICAgICAgIGxldCBwNEZyZWVzdHlsZTEgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSAtIDEsIGNvbHVtbkV4dHJhY3QocDIpKTsNCiAgICAgICAgLy8vL2xvZyhwMikNCiAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUxKSkgew0KICAgICAgICAgICAgLy8vL2xvZygi5LiK6Lev5LiN6YCaNjY2IikNCiAgICAgICAgICAgIC8v5LiK6Lev5LiN6YCaDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBpZiAocm93RXh0cmFjdChwMSkgPCByb3dFeHRyYWN0KHAyKSkgew0KDQoNCg0KICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTIgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMikpIHsNCiAgICAgICAgICAgICAgICAgICAgLy/kuIrot6/kuI3pgJoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KDQogICAgICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTJOZXcgPSBuZXcgSW1nVW5pdChwNEZyZWVzdHlsZTIsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMildKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpICYmIGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi6L+b5YWl6L+Z6YeM5LqGIikNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vLy9sb2cocDEscDIscDRGcmVlc3R5bGUyTmV3KQ0KDQoNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8vL2xvZyhvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIscDRGcmVlc3R5bGUyTmV3LCBwMSkpDQogICAgICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKG9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIixwNEZyZWVzdHlsZTJOZXcsIHAyKSkNCg0KDQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNEZyZWVzdHlsZTJOZXcsIHAyKSB8fCAhb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTIpKSB7DQogICAgICAgICAgICAgICAgICAgIC8v5LiK6Lev5LiN6YCaDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHA0RnJlZXN0eWxlMk5ldyA9IG5ldyBJbWdVbml0KHA0RnJlZXN0eWxlMiwgW3Jvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAxKV0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMikgJiYgaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDRGcmVlc3R5bGUyTmV3LCBwMikgfHwgIW9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvL+S4i+i3rw0KICAgICAgICAvLy8vbG9nKCLlvIDlp4vliKTmlq3kuIvot68iKQ0KDQogICAgICAgIHA0RnJlZXN0eWxlMSA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpICsgMSwgY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTEpKSB7DQogICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKHJvd0V4dHJhY3QocDEpIDwgcm93RXh0cmFjdChwMikpIHsNCg0KICAgICAgICAgICAgICAgIHA0RnJlZXN0eWxlMiA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAxKSk7DQogICAgICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUyKSkgew0KICAgICAgICAgICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTJOZXcgPSBuZXcgSW1nVW5pdChwNEZyZWVzdHlsZTIsIFtyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMSldKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpICYmIGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHA0RnJlZXN0eWxlMk5ldywgcDIpIHx8ICFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHA0RnJlZXN0eWxlMiA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAxKSk7DQogICAgICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUyKSkgew0KICAgICAgICAgICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTJOZXcgPSBuZXcgSW1nVW5pdChwNEZyZWVzdHlsZTIsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMildKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpICYmIGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHA0RnJlZXN0eWxlMk5ldywgcDIpIHx8ICFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgLy/lt6bot68NCiAgICAgICAgLy8vL2xvZygi5byA5aeL5Yik5pat5bem6LevIikNCg0KICAgICAgICBwNEZyZWVzdHlsZTEgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMikgLSAxKTsNCiAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUxKSkgew0KICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIC8vLy9sb2coIjExMTExMTE9PT09PT09PT09PT09PT09IikNCiAgICAgICAgICAgIGlmIChyb3dFeHRyYWN0KHAxKSA8IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgICAgICAgICAgLy8vL2xvZygicDHlnKjkuIpwMuWcqOS4iyIpDQogICAgICAgICAgICAgICAgcDRGcmVlc3R5bGUyID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDIpKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTIpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIuW3pui3r+S4jemAmjY2NjY2NjY2NjY2NjY2NiIpDQogICAgICAgICAgICAgICAgICAgIC8v5bem6Lev5LiN6YCaDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8gLy8vL2xvZygi5bem6Lev6YCa5LqGNjY2NjY2NjY2NjY2NjY2IikNCg0KICAgICAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyTmV3ID0gbmV3IEltZ1VuaXQocDRGcmVlc3R5bGUyLCBbcm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDIpXSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAyKSAmJiBpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8v5Lik5Lik5LmL6Ze05Y+v5Lul6L+e5o6lLOS9huW/hemhu+acieS4gOS4quaYr+ebtOaOpei/nuaOpQ0KICAgICAgICAgICAgICAgICAgICAgICAgLy/kuZ/lsLHmmK/or7TlhbbkuK3kuIDkuKrkuKTkuKTkuYvpl7TmsqHmnInpmpznoo3niakNCiAgICAgICAgICAgICAgICAgICAgICAgIC8v5oiW6ICF56ys5LiA57uE5oiW6ICF56ys5LqM57uEDQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNEZyZWVzdHlsZTJOZXcsIHAyKSB8fCAhb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQoNCg0KDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHA0RnJlZXN0eWxlMiA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAyKSk7DQogICAgICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDRGcmVlc3R5bGUyKSkgew0KICAgICAgICAgICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBwNEZyZWVzdHlsZTJOZXcgPSBuZXcgSW1nVW5pdChwNEZyZWVzdHlsZTIsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMildKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpICYmIGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHA0RnJlZXN0eWxlMk5ldywgcDIpIHx8ICFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHA0RnJlZXN0eWxlMk5ldywgcDEpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAvL+WPs+i3rw0KICAgICAgICAvLy8vbG9nKCLlvIDlp4vliKTmlq3lj7Pot68iKQ0KDQogICAgICAgIHA0RnJlZXN0eWxlMSA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAyKSArIDEpOw0KICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwNEZyZWVzdHlsZTEpKSB7DQogICAgICAgICAgICAvL+S4i+i3r+S4jemAmg0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKHJvd0V4dHJhY3QocDEpIDwgcm93RXh0cmFjdChwMikpIHsNCiAgICAgICAgICAgICAgICAvLy8vbG9nKCJwMeWcqOS4inAy5Zyo5LiLIikNCiAgICAgICAgICAgICAgICBwNEZyZWVzdHlsZTIgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMSkpOw0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMikpIHsNCiAgICAgICAgICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLy8vbG9nKCLov5vlhaXov5nph4zkuoYiKQ0KICAgICAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyTmV3ID0gbmV3IEltZ1VuaXQocDRGcmVlc3R5bGUyLCBbcm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpXSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZyhpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMSkpDQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coaXMySW1nVGhvcm91Z2hmYXJlKHA0RnJlZXN0eWxlMk5ldywgcDIpKQ0KDQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAyKSAmJiBpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNEZyZWVzdHlsZTJOZXcsIHAyKSB8fCAhb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBwNEZyZWVzdHlsZTIgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMSkpOw0KICAgICAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHA0RnJlZXN0eWxlMikpIHsNCiAgICAgICAgICAgICAgICAgICAgLy/kuIvot6/kuI3pgJoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBsZXQgcDRGcmVlc3R5bGUyTmV3ID0gbmV3IEltZ1VuaXQocDRGcmVlc3R5bGUyLCBbcm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDEpXSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzMkltZ1Rob3JvdWdoZmFyZShwNEZyZWVzdHlsZTJOZXcsIHAyKSAmJiBpczJJbWdUaG9yb3VnaGZhcmUocDRGcmVlc3R5bGUyTmV3LCBwMSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNEZyZWVzdHlsZTJOZXcsIHAyKSB8fCAhb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNEZyZWVzdHlsZTJOZXcsIHAxKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQoNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gZmFsc2U7DQp9DQoNCg0KDQovLyDmnIDlkI7kuIDnp4165b2i6L+e5o6lDQoNCg0KZnVuY3Rpb24gaXMySW1nVGhvcm91Z2hmYXJlWihwMSwgcDIpIHsNCiAgICAvLyDlvaLnirZwMeWcqOS4inAy5Zyo5LiLDQogICAgLy8NCiAgICAvLyDlt7Lnu4/noa7lrprlgLzpgILnlKjkuo7or6Xnp43lm77lvaINCiAgICAvLyBfXw0KICAgIC8vICAgfF9fDQogICAgLy8vL2xvZygiOTEw6KGMPT09aXMySW1nVGhvcm91Z2hmYXJlWihwMSwgcDIp55qE5Y+C5pWw5pivIixwMSxwMikNCiAgICAvL+WPqumcgOimgei/lOWbnuaYr+WQpuiDvei/nuaOpSzkuI3pnIDopoHngrnlh7sNCiAgICAvL+W8gOWni+aQnOe0ouWJjeWvuXAxLHAy5o6S5bqP77yM5L2/cDLlsL3lj6/og73nmoTlnKhwMeeahOWPs+S4i+aWueOAgg0KICAgIC8v6L+Z5qC35YGa5Y+v5Lul566A5YyW566X5rOVDQogICAgaWYgKHJvd0V4dHJhY3QocDEpID4gcm93RXh0cmFjdChwMikpIHsNCiAgICAgICAgbGV0IHRwID0gcDE7DQogICAgICAgIHAxID0gcDI7DQogICAgICAgIHAyID0gdHA7DQogICAgfSBlbHNlIGlmIChyb3dFeHRyYWN0KHAxKSA9PSByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBpZiAoY29sdW1uRXh0cmFjdChwMSkgPiBjb2x1bW5FeHRyYWN0KHAyKSkgew0KICAgICAgICAgICAgbGV0IHRwID0gcDE7DQogICAgICAgICAgICBwMSA9IHAyOw0KICAgICAgICAgICAgcDIgPSB0cDsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAvLy8vbG9nKCJwMeWcqHAy55qE5bem6L65IikNCiAgICAvLy8vbG9nKCJwMyIscm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDEpICsgMSkNCiAgICAvLy8vbG9nKCJwNCIscm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDIpIC0gMSkNCiAgICBsZXQgcDMgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMSkgKyAxKTsNCiAgICBsZXQgcDQgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMikgLSAxKTsNCg0KDQoNCiAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwMykgfHwgIWlzSW1nQmFja2dyb3VuZChwNCkpIHsNCiAgICAgICAgLy/kuI3og71a5b2i6L+e5o6lDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9IGVsc2Ugew0KICAgICAgICAvLyDliKTmlq1wM3A05ZKMcDXmmK/lkKblj6/ku6Xnm7Tov54NCiAgICAgICAgLy9wM+WSjHA15LiN6IO95pyJ6Zqc56KN54mpDQogICAgICAgIC8vcDTlkoxwNeS4jeiDveaciemanOeijeeJqQ0KICAgICAgICAvL+W+queOr+asoeaVsOS4unAyLXAxLTMNCiAgICAgICAgbGV0IGN5Y2xlVGltZXMgPSBjb2x1bW5FeHRyYWN0KHAyKSAtIGNvbHVtbkV4dHJhY3QocDEpDQogICAgICAgIGZvciAobGV0IGsgPSAxOyBrIDwgY3ljbGVUaW1lczsgaysrKSB7DQoNCiAgICAgICAgICAgIGxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAxKSArIGspOw0KICAgICAgICAgICAgbGV0IHAzbmV3ID0gbmV3IEltZ1VuaXQocDMsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMSkgKyBrXSk7DQogICAgICAgICAgICBsZXQgcDRuZXcgPSBuZXcgSW1nVW5pdChwNCwgW3Jvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAyKSAtIDFdKTsNCiAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDJXaXRoU2VsZihwM25ldywgcDRuZXcpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQoNCg0KDQogICAgICAgICAgICBsZXQgcDUgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwM25ldykpOw0KICAgICAgICAgICAgbGV0IHA1bmV3ID0gbmV3IEltZ1VuaXQocDUsIFtyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwM25ldyldKTsNCg0KDQoNCiAgICAgICAgICAgIGlmIChpc0ltZ0JhY2tncm91bmQocDMpICYmIGlzSW1nQmFja2dyb3VuZChwNSkpIHsNCg0KICAgICAgICAgICAgICAgIGlmIChvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHAzbmV3LCBwNW5ldykgfHwgb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVgiLCBwNG5ldywgcDVuZXcpKSB7DQoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQoNCg0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCg0KDQogICAgfQ0KDQp9DQoNCg0KDQoNCg0KDQoNCg0KDQpmdW5jdGlvbiBpczJJbWdUaG9yb3VnaGZhcmVaMShwMSwgcDIpIHsNCiAgICAvLy8vbG9nKCJpczJJbWdUaG9yb3VnaGZhcmVaMShwMSwgcDIpICIscDEscDIpDQogICAgLy8g5b2i54q2cDHlnKjkuIpwMuWcqOS4iw0KICAgIC8vDQogICAgLy8gX198y4nLicuJDQogICAgLy8vL2xvZygiOTEw6KGMPT09aXMySW1nVGhvcm91Z2hmYXJlWihwMSwgcDIp55qE5Y+C5pWw5pivIixwMSxwMikNCiAgICAvL+WPqumcgOimgei/lOWbnuaYr+WQpuiDvei/nuaOpSzkuI3pnIDopoHngrnlh7sNCiAgICAvL+W8gOWni+aQnOe0ouWJjeWvuXAxLHAy5o6S5bqP77yM5L2/cDLlsL3lj6/og73nmoTlnKhwMeeahOWPs+S4i+aWueOAgg0KICAgIC8v6L+Z5qC35YGa5Y+v5Lul566A5YyW566X5rOVDQogICAgaWYgKHJvd0V4dHJhY3QocDEpID4gcm93RXh0cmFjdChwMikpIHsNCiAgICAgICAgbGV0IHRwID0gcDE7DQogICAgICAgIHAxID0gcDI7DQogICAgICAgIHAyID0gdHA7DQogICAgfSBlbHNlIGlmIChyb3dFeHRyYWN0KHAxKSA9PSByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBpZiAoY29sdW1uRXh0cmFjdChwMSkgPiBjb2x1bW5FeHRyYWN0KHAyKSkgew0KICAgICAgICAgICAgbGV0IHRwID0gcDE7DQogICAgICAgICAgICBwMSA9IHAyOw0KICAgICAgICAgICAgcDIgPSB0cDsNCiAgICAgICAgfQ0KICAgIH0NCiAgICAvLy8vbG9nKCJwMeWcqHAy55qE5bem6L65IikNCiAgICAvLy8vbG9nKCJwMyIscm93RXh0cmFjdChwMSksIGNvbHVtbkV4dHJhY3QocDEpICsgMSkNCiAgICAvLy8vbG9nKCJwNCIscm93RXh0cmFjdChwMiksIGNvbHVtbkV4dHJhY3QocDIpIC0gMSkNCiAgICBsZXQgcDMgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMSkgLSAxKTsNCiAgICBsZXQgcDQgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMikgKyAxKTsNCg0KICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKHAzKSB8fCAhaXNJbWdCYWNrZ3JvdW5kKHA0KSkgew0KICAgICAgICAvLyAvLy8vbG9nKCLov5vlhaVpZiIpDQogICAgICAgIC8v5LiN6IO9WuW9oui/nuaOpQ0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfSBlbHNlIHsNCiAgICAgICAgLy8vL2xvZygi6L+b5YWlZWxzZSIpDQoNCiAgICAgICAgLy8g5Yik5patcDNwNOWSjHA15piv5ZCm5Y+v5Lul55u06L+eDQogICAgICAgIC8vcDPlkoxwNeS4jeiDveaciemanOeijeeJqQ0KICAgICAgICAvL3A05ZKMcDXkuI3og73mnInpmpznoo3niakNCiAgICAgICAgLy/lvqrnjq/mrKHmlbDkuLpwMi1wMS0zDQogICAgICAgIGxldCBjeWNsZVRpbWVzID0gcm93RXh0cmFjdChwMikgLSByb3dFeHRyYWN0KHAxKQ0KICAgICAgICAvLy8vbG9nKCJjeWNsZVRpbWVzPSIsY3ljbGVUaW1lcykNCiAgICAgICAgZm9yIChsZXQgayA9IDE7IGsgPCBjeWNsZVRpbWVzOyBrKyspIHsNCiAgICAgICAgICAgIC8vLy9sb2coImtra2traz09PT09PT09PSIsaykNCiAgICAgICAgICAgIGxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpLCBjb2x1bW5FeHRyYWN0KHAxKSAtIGspOw0KICAgICAgICAgICAgbGV0IHAzbmV3ID0gbmV3IEltZ1VuaXQocDMsIFtyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMSkgLSBrXSk7DQogICAgICAgICAgICBsZXQgcDRuZXcgPSBuZXcgSW1nVW5pdChwNCwgW3Jvd0V4dHJhY3QocDIpLCBjb2x1bW5FeHRyYWN0KHAyKSArIDFdKTsNCiAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDJXaXRoU2VsZihwM25ldywgcDRuZXcpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBsZXQgcDUgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwM25ldykpOw0KICAgICAgICAgICAgbGV0IHA1bmV3ID0gbmV3IEltZ1VuaXQocDUsIFtyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwM25ldyldKTsNCg0KDQoNCiAgICAgICAgICAgIGlmIChpc0ltZ0JhY2tncm91bmQocDMpICYmIGlzSW1nQmFja2dyb3VuZChwNSkpIHsNCiAgICAgICAgICAgICAgICAvLy8vbG9nKCLov5vlhaVpZjY2NiIpDQogICAgICAgICAgICAgICAgLy8vL2xvZyhwM25ldywgcDVuZXcpDQogICAgICAgICAgICAgICAgaWYgKG9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVZIiwgcDNuZXcsIHA1bmV3KSB8fCBvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHA0bmV3LCBwNW5ldykpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8vL2xvZygi6L+b5YWlaWY2Njg4ODg4ODg4ODg2IikNCg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vLy9sb2coIui/m2Vsc2U2Njg4ODg4ODg4ODg2IikNCg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8vL2xvZygi6L+b5YWlZWxzZTY2NiIpDQoNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCg0KDQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KDQoNCiAgICB9DQoNCn0NCg0KDQoNCg0KDQoNCg0KDQoNCi8vIOacgOWQjuS4gOenjXrlvaLov57mjqUNCmZ1bmN0aW9uIGlzMkltZ1Rob3JvdWdoZmFyZVoyKHAxLCBwMikgew0KICAgIC8vLy9sb2cocDEscDIpDQogICAgLy8g5b2i54q2cDHlnKjkuIpwMuWcqOS4iw0KICAgIC8vIHxfXw0KICAgIC8vICAgIHwNCiAgICAvLy8vbG9nKCI5MTDooYw9PT1pczJJbWdUaG9yb3VnaGZhcmVaKHAxLCBwMinnmoTlj4LmlbDmmK8iLHAxLHAyKQ0KICAgIC8v5Y+q6ZyA6KaB6L+U5Zue5piv5ZCm6IO96L+e5o6lLOS4jemcgOimgeeCueWHuw0KICAgIC8v5byA5aeL5pCc57Si5YmN5a+5cDEscDLmjpLluo/vvIzkvb9wMuWwveWPr+iDveeahOWcqHAx55qE5Y+z5LiL5pa544CCDQogICAgLy/ov5nmoLflgZrlj6/ku6XnroDljJbnrpfms5UNCiAgICBpZiAocm93RXh0cmFjdChwMSkgPiByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgcDEgPSBwMjsNCiAgICAgICAgcDIgPSB0cDsNCiAgICB9IGVsc2UgaWYgKHJvd0V4dHJhY3QocDEpID09IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgIGlmIChjb2x1bW5FeHRyYWN0KHAxKSA+IGNvbHVtbkV4dHJhY3QocDIpKSB7DQogICAgICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgICAgIHAxID0gcDI7DQogICAgICAgICAgICBwMiA9IHRwOw0KICAgICAgICB9DQogICAgfQ0KICAgIC8vLy9sb2coInAx5ZyocDLnmoTlt6bovrkiKQ0KICAgIC8vLy9sb2coInAzIixyb3dFeHRyYWN0KHAxKSwgY29sdW1uRXh0cmFjdChwMSkgKyAxKQ0KICAgIC8vLy9sb2coInA0Iixyb3dFeHRyYWN0KHAyKSwgY29sdW1uRXh0cmFjdChwMikgLSAxKQ0KICAgIGxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpICsgMSwgY29sdW1uRXh0cmFjdChwMSkpOw0KICAgIGxldCBwNCA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDIpIC0gMSwgY29sdW1uRXh0cmFjdChwMikpOw0KDQogICAgaWYgKCFpc0ltZ0JhY2tncm91bmQocDMpIHx8ICFpc0ltZ0JhY2tncm91bmQocDQpKSB7DQogICAgICAgIC8vLy9sb2coInAz5oiW6ICFcDTkuI3mmK/og4zmma8iKQ0KICAgICAgICAvL+S4jeiDvVrlvaLov57mjqUNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0gZWxzZSB7DQogICAgICAgIC8vLy9sb2coInAzcDTpg73mmK/og4zmma8iKQ0KDQogICAgICAgIC8vIOWIpOaWrXAzcDTlkoxwNeaYr+WQpuWPr+S7peebtOi/ng0KICAgICAgICAvL3Az5ZKMcDXkuI3og73mnInpmpznoo3niakNCiAgICAgICAgLy9wNOWSjHA15LiN6IO95pyJ6Zqc56KN54mpDQogICAgICAgIC8v5b6q546v5qyh5pWw5Li6cDItcDEtMw0KICAgICAgICBsZXQgY3ljbGVUaW1lcyA9IHJvd0V4dHJhY3QocDIpIC0gcm93RXh0cmFjdChwMSkNCiAgICAgICAgLy8vL2xvZygi5b6q546v5qyh5pWwPSIsY3ljbGVUaW1lcykNCiAgICAgICAgZm9yIChsZXQgayA9IDE7IGsgPCBjeWNsZVRpbWVzOyBrKyspIHsNCg0KICAgICAgICAgICAgbGV0IHAzID0gaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocm93RXh0cmFjdChwMSkgKyBrLCBjb2x1bW5FeHRyYWN0KHAxKSk7DQogICAgICAgICAgICBsZXQgcDNuZXcgPSBuZXcgSW1nVW5pdChwMywgW3Jvd0V4dHJhY3QocDEpICsgaywgY29sdW1uRXh0cmFjdChwMSldKTsNCiAgICAgICAgICAgIGxldCBwNG5ldyA9IG5ldyBJbWdVbml0KHA0LCBbcm93RXh0cmFjdChwMikgLSAxLCBjb2x1bW5FeHRyYWN0KHAyKV0pOw0KICAgICAgICAgICAgaWYgKCFvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMldpdGhTZWxmKHAzbmV3LCBwNG5ldykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGxldCBwNSA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDNuZXcpLCBjb2x1bW5FeHRyYWN0KHAyKSk7DQogICAgICAgICAgICBsZXQgcDVuZXcgPSBuZXcgSW1nVW5pdChwNSwgW3Jvd0V4dHJhY3QocDNuZXcpLCBjb2x1bW5FeHRyYWN0KHA0bmV3KV0pOw0KDQoNCg0KICAgICAgICAgICAgaWYgKGlzSW1nQmFja2dyb3VuZChwMykgJiYgaXNJbWdCYWNrZ3JvdW5kKHA1KSkgew0KDQogICAgICAgICAgICAgICAgaWYgKG9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKCJvbmxpbmVYIiwgcDNuZXcsIHA1bmV3KSB8fCBvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWSIsIHA0bmV3LCBwNW5ldykpIHsNCg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCg0KDQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KDQoNCg0KICAgIH0NCg0KfQ0KLy8g5pyA5ZCO5LiA56eNeuW9oui/nuaOpQ0KZnVuY3Rpb24gaXMySW1nVGhvcm91Z2hmYXJlWjMocDEsIHAyKSB7DQogICAgLy8gICAgIF9ffA0KICAgIC8vICAgIHwNCg0KDQogICAgLy8vL2xvZygiMTA2NuihjGlzMkltZ1Rob3JvdWdoZmFyZVozKHAxLCBwMikgIixwMSxwMikNCiAgICAvLy8vbG9nKCIzOTXooYw9PT1pczJJbWdUaG9yb3VnaGZhcmVaKHAxLCBwMinnmoTlj4LmlbDmmK8iLHAxLHAyKQ0KICAgIC8v5Y+q6ZyA6KaB6L+U5Zue5piv5ZCm6IO96L+e5o6lLOS4jemcgOimgeeCueWHuw0KICAgIC8v5byA5aeL5pCc57Si5YmN5a+5cDEscDLmjpLluo/vvIzkvb9wMuWwveWPr+iDveeahOWcqHAx55qE5Y+z5LiL5pa544CCDQogICAgLy/ov5nmoLflgZrlj6/ku6XnroDljJbnrpfms5UNCiAgICBpZiAocm93RXh0cmFjdChwMSkgPiByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgcDEgPSBwMjsNCiAgICAgICAgcDIgPSB0cDsNCiAgICB9IGVsc2UgaWYgKHJvd0V4dHJhY3QocDEpID09IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgIGlmIChjb2x1bW5FeHRyYWN0KHAxKSA+IGNvbHVtbkV4dHJhY3QocDIpKSB7DQogICAgICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgICAgIHAxID0gcDI7DQogICAgICAgICAgICBwMiA9IHRwOw0KICAgICAgICB9DQogICAgfQ0KICAgIC8vLy9sb2coIlpaWuS4reWIpOaWreeahHAxLHAy5pivIixwMSxwMikNCiAgICAvLyAvLy8vbG9nKCLluIzmnJvmmK8zIDIgIDEgNiIpDQoNCiAgICBsZXQgcDMgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAxKSArIDEsIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICBsZXQgcDQgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAyKSAtIDEsIGNvbHVtbkV4dHJhY3QocDIpKTsNCiAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChwMykgfHwgIWlzSW1nQmFja2dyb3VuZChwNCkpIHsNCiAgICAgICAgLy/kuI3og71a5b2i6L+e5o6lDQogICAgICAgIHJldHVybiBmYWxzZTsNCiAgICB9IGVsc2Ugew0KICAgICAgICAvLyDliKTmlq1wM3A05ZKMcDXmmK/lkKblj6/ku6Xnm7Tov54NCiAgICAgICAgLy9wM+WSjHA15LiN6IO95pyJ6Zqc56KN54mpDQogICAgICAgIC8vcDTlkoxwNeS4jeiDveaciemanOeijeeJqQ0KICAgICAgICAvL+W+queOr+asoeaVsOS4unAyLXAxLTMNCiAgICAgICAgbGV0IGN5Y2xlVGltZXMgPSByb3dFeHRyYWN0KHAyKSAtIHJvd0V4dHJhY3QocDEpDQogICAgICAgIC8vLy9sb2coIuW+queOr+asoeaVsD0iLGN5Y2xlVGltZXMpDQogICAgICAgIGZvciAobGV0IGsgPSAxOyBrIDwgY3ljbGVUaW1lczsgaysrKSB7DQoNCg0KDQoNCiAgICAgICAgICAgIC8vLy9sb2coInJvd0V4dHJhY3QocDEpPSIscm93RXh0cmFjdChwMSkpDQogICAgICAgICAgICAvLy8vbG9nKCJrPSIsaykNCiAgICAgICAgICAgIC8vLy9sb2coImxldCBwMyA9IGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHJvd0V4dHJhY3QocDEpKzEraywgY29sdW1uRXh0cmFjdChwMSkpOyIscm93RXh0cmFjdChwMSkrMStrLCBjb2x1bW5FeHRyYWN0KHAxKSkNCg0KDQogICAgICAgICAgICBsZXQgcDMgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAxKSArIGssIGNvbHVtbkV4dHJhY3QocDEpKTsNCiAgICAgICAgICAgIGxldCBwM25ldyA9IG5ldyBJbWdVbml0KHAzLCBbcm93RXh0cmFjdChwMSkgKyBrLCBjb2x1bW5FeHRyYWN0KHAxKV0pOw0KICAgICAgICAgICAgbGV0IHA0bmV3ID0gbmV3IEltZ1VuaXQocDQsIFtyb3dFeHRyYWN0KHAyKSAtIDEsIGNvbHVtbkV4dHJhY3QocDIpXSk7DQoNCiAgICAgICAgICAgIGlmICghb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDJXaXRoU2VsZihwM25ldywgcDRuZXcpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBsZXQgcDUgPSBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3dFeHRyYWN0KHAzbmV3KSwgY29sdW1uRXh0cmFjdChwMikpOw0KICAgICAgICAgICAgbGV0IHA1bmV3ID0gbmV3IEltZ1VuaXQocDUsIFtyb3dFeHRyYWN0KHAzbmV3KSwgY29sdW1uRXh0cmFjdChwMildKTsNCg0KDQoNCiAgICAgICAgICAgIGlmIChpc0ltZ0JhY2tncm91bmQocDMpICYmIGlzSW1nQmFja2dyb3VuZChwNSkpIHsNCg0KICAgICAgICAgICAgICAgIGlmIChvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMigib25saW5lWCIsIHAzbmV3LCBwNW5ldykgfHwgb2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDIoIm9ubGluZVkiLCBwNG5ldywgcDVuZXcpKSB7DQoNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQoNCg0KICAgICAgICB9DQogICAgICAgIHJldHVybiBmYWxzZTsNCg0KDQoNCiAgICB9DQp9DQoNCg0KDQoNCg0KLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovLz09PT09PT09PT09PT09PT3lsI/lsI/nmoTkuJPkuIDlh73mlbA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQovL+acieayoeaciemanOeijeeJqQ0KLy/mnInov5Tlm550cnVlDQovL+ayoeaciei/lOWbnmZhbHNlDQovL+m7mOiupOaciemanOeijeeJqXRydWUNCmZ1bmN0aW9uIG9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKHh5LCBwMSwgcDIpIHsNCiAgICAvLyBpZighKHJvd0V4dHJhY3QocDEpPT0yICYmIGNvbHVtbkV4dHJhY3QocDEpPT0xICYmIHJvd0V4dHJhY3QocDIpPT0yICYmIGNvbHVtbkV4dHJhY3QocDIpPT00KSl7cmV0dXJuO30NCg0KICAgIC8vLy9sb2coIm9ic3RhY2xlSXNUaGVyZUJldHdlZW5QMUFuZFAyKHh5LHAxLCBwMinkvKDlhaXlj4LmlbDmmK9cbiIseHkscDEscDIpOw0KICAgIC8vIGV4aXQoKQ0KICAgIC8v5Lik5Liq5Zu+54mH5Lit6Ze05pyJ5rKh5pyJ6Zqc56KN54mpLOm7mOiupOaciemanOeijeeJqShyZXR1cm4gdHJ1ZTspDQogICAgaWYgKHh5ID09ICJvbmxpbmVYIikgew0KICAgICAgICAvLy8vbG9nKCI4MzTooYzlkIzkuIDooYxcbiIscDEscDIpDQogICAgICAgIC8vIGV4aXQoKQ0KICAgICAgICBsZXQgaSA9IGNvbHVtbkV4dHJhY3QocDEpID4gY29sdW1uRXh0cmFjdChwMikgPyBjb2x1bW5FeHRyYWN0KHAyKSA6IGNvbHVtbkV4dHJhY3QocDEpOw0KICAgICAgICBpID0gaSArIDE7DQogICAgICAgIC8vLy9sb2coImk9IixpKQ0KICAgICAgICBsZXQgbWF4ID0gY29sdW1uRXh0cmFjdChwMSkgPiBjb2x1bW5FeHRyYWN0KHAyKSA/IGNvbHVtbkV4dHJhY3QocDEpIDogY29sdW1uRXh0cmFjdChwMik7DQogICAgICAgIC8vLy9sb2coIm1heD0iLG1heCkNCg0KICAgICAgICAvLy8vbG9nKCJwMT09PT09PT09PT09PT09PT09PT09PT09IixwMSkNCiAgICAgICAgZm9yICg7IGkgPCBtYXg7IGkrKykgew0KICAgICAgICAgICAgbGV0IHAgPSB7DQogICAgICAgICAgICAgICAgeDogcm93RXh0cmFjdChwMSksDQogICAgICAgICAgICAgICAgeTogaQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIC8vLy9sb2coIuacn+acmzIgMiAgICAgICAyICAzICIpDQogICAgICAgICAgICAvLy8vbG9nKCI4NDnooYxpLHAueCxwLnkiLGkscC54LHAueSxpc0ltZ0JhY2tncm91bmQoaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocC54LCBwLnkpKSkNCg0KDQoNCiAgICAgICAgICAgIGlmICghaXNJbWdCYWNrZ3JvdW5kKGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHAueCwgcC55KSkpIHsNCiAgICAgICAgICAgICAgICAvLy8vbG9nKCI0MzPooYzmnInpmpznoo3niakiKQ0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLy8vbG9nKCI0MzbooYzmsqHmnInpmpznoo3niakiKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIC8vLy9sb2coImkgPT0gbWF4IixpICwgbWF4KQ0KICAgICAgICBpZiAoaSA9PSBtYXgpIHsNCiAgICAgICAgICAgIC8vLy9sb2coIjYwN+ihjOWQjOS4gOihjOWPr+S7pei/numAmizmsqHmnInpmpznoo3nialcbiIscDEscDIpDQogICAgICAgICAgICAvLyBleGl0KCkNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgfSBlbHNlIGlmICh4eSA9PSAib25saW5lWSIpIHsNCiAgICAgICAgLy8vL2xvZygiODc36KGM5ZCM5LiA5YiXXG4iLHAxLHAyKQ0KDQogICAgICAgIGxldCBpID0gcm93RXh0cmFjdChwMSkgPiByb3dFeHRyYWN0KHAyKSA/IHJvd0V4dHJhY3QocDIpIDogcm93RXh0cmFjdChwMSk7DQogICAgICAgIGkgPSBpICsgMTsNCiAgICAgICAgbGV0IG1heCA9IHJvd0V4dHJhY3QocDEpID4gcm93RXh0cmFjdChwMikgPyByb3dFeHRyYWN0KHAxKSA6IHJvd0V4dHJhY3QocDIpOw0KICAgICAgICBmb3IgKDsgaSA8IG1heDsgaSsrKSB7DQogICAgICAgICAgICBsZXQgcCA9IHsNCiAgICAgICAgICAgICAgICB4OiBpLA0KICAgICAgICAgICAgICAgIHk6IGNvbHVtbkV4dHJhY3QocDEpDQogICAgICAgICAgICB9Ow0KICAgICAgICAgICAgaWYgKCFpc0ltZ0JhY2tncm91bmQoaW1nRW50aXR5RXh0cmFjdEZyb21Sb3dBbmRjb2x1bW4ocC54LCBwLnkpKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmIChpID09IG1heCkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfSBlbHNlIHsNCiAgICAgICAgLy8vL2xvZygib2JzdGFjbGVJc1RoZXJlQmV0d2VlblAxQW5kUDLlh73mlbDkvKDlhaXlj4LmlbDplJnor68hIik7DQogICAgICAgIGV4aXQoKTsNCiAgICB9DQogICAgcmV0dXJuIHRydWU7DQoNCn0NCg0KDQoNCg0KDQoNCg0KDQpmdW5jdGlvbiBvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMldpdGhTZWxmKHAxLCBwMikgew0KICAgIC8v5byA5aeL5pCc57Si5YmN5a+5cDEscDLmjpLluo/vvIzkvb9wMuWwveWPr+iDveeahOWcqHAx55qE5Y+z5LiL5pa544CCDQogICAgLy/ov5nmoLflgZrlj6/ku6XnroDljJbnrpfms5UNCiAgICBpZiAocm93RXh0cmFjdChwMSkgPiByb3dFeHRyYWN0KHAyKSkgew0KICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgcDEgPSBwMjsNCiAgICAgICAgcDIgPSB0cDsNCiAgICB9IGVsc2UgaWYgKHJvd0V4dHJhY3QocDEpID09IHJvd0V4dHJhY3QocDIpKSB7DQogICAgICAgIGlmIChjb2x1bW5FeHRyYWN0KHAxKSA+IGNvbHVtbkV4dHJhY3QocDIpKSB7DQogICAgICAgICAgICBsZXQgdHAgPSBwMTsNCiAgICAgICAgICAgIHAxID0gcDI7DQogICAgICAgICAgICBwMiA9IHRwOw0KICAgICAgICB9DQogICAgfQ0KICAgIC8v5Lik5Liq6YO95b+F6aG75piv6IOM5pmv5omN5pyJ5Y+v6IO96L+U5ZueZmFsc2UNCiAgICAvL+WmguaenOmDveaYr+iDjOaZr+W5tuS4lOaMqOedgOmCo+S5iOi/lOWbnmZhbHNlDQogICAgLy/pu5jorqTov5Tlm550cnVlDQogICAgbGV0IHAxSW1nID0gaW1nRW50aXR5RXh0cmFjdChwMSkNCiAgICBsZXQgcDJJbWcgPSBpbWdFbnRpdHlFeHRyYWN0KHAyKQ0KDQogICAgaWYgKGlzSW1nQmFja2dyb3VuZChwMUltZykgJiYgaXNJbWdCYWNrZ3JvdW5kKHAySW1nKSkgew0KDQogICAgICAgIC8vIOWQjOS4gOihjOaMqOedgA0KICAgICAgICBpZiAocm93RXh0cmFjdChwMSkgPT0gcm93RXh0cmFjdChwMikgJiYgY29sdW1uRXh0cmFjdChwMikgLSBjb2x1bW5FeHRyYWN0KHAxKSA9PSAxKSB7DQogICAgICAgICAgICByZXR1cm4gZmFsc2UNCg0KICAgICAgICB9DQoNCg0KDQoNCiAgICAgICAgLy8g5ZCM5LiA5YiX5oyo552ADQogICAgICAgIGlmIChjb2x1bW5FeHRyYWN0KHAxKSA9PSBjb2x1bW5FeHRyYWN0KHAyKSAmJiByb3dFeHRyYWN0KHAyKSAtIHJvd0V4dHJhY3QocDEpID09IDEpIHsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZQ0KDQogICAgICAgIH0NCg0KICAgIH0NCg0KDQoNCg0KDQoNCiAgICByZXR1cm4gdHJ1ZTsNCg0KDQogICAgLy8gLy8gaWYoIShyb3dFeHRyYWN0KHAxKT09MiAmJiBjb2x1bW5FeHRyYWN0KHAxKT09MSAmJiByb3dFeHRyYWN0KHAyKT09MiAmJiBjb2x1bW5FeHRyYWN0KHAyKT09NCkpe3JldHVybjt9DQoNCiAgICAvLyAvLy8vbG9nKCJvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMih4eSxwMSwgcDIp5Lyg5YWl5Y+C5pWw5pivXG4iLHh5LHAxLHAyKTsNCiAgICAvLyAvLyBleGl0KCkNCiAgICAvLyAvL+S4pOS4quWbvueJh+S4remXtOacieayoeaciemanOeijeeJqSzpu5jorqTmnInpmpznoo3niakocmV0dXJuIHRydWU7KQ0KICAgIC8vIGlmICh4eSA9PSAib25saW5lWCIpIHsNCiAgICAvLyAgICAgLy8vL2xvZygiODM06KGM5ZCM5LiA6KGMXG4iLHAxLHAyKQ0KICAgIC8vICAgICAvLyBleGl0KCkNCiAgICAvLyAgICAgbGV0IGkgPSBjb2x1bW5FeHRyYWN0KHAxKSA+IGNvbHVtbkV4dHJhY3QocDIpID8gY29sdW1uRXh0cmFjdChwMikgOiBjb2x1bW5FeHRyYWN0KHAxKTsNCiAgICAvLyAgICAgaSA9IGkgKyAxOw0KICAgIC8vICAgICAvLy8vbG9nKCJpPSIsaSkNCiAgICAvLyAgICAgbGV0IG1heCA9IGNvbHVtbkV4dHJhY3QocDEpID4gY29sdW1uRXh0cmFjdChwMikgPyBjb2x1bW5FeHRyYWN0KHAxKSA6IGNvbHVtbkV4dHJhY3QocDIpOw0KICAgIC8vICAgICAvLy8vbG9nKCJtYXg9IixtYXgpDQoNCiAgICAvLyAgICAgLy8vL2xvZygicDE9PT09PT09PT09PT09PT09PT09PT09PSIscDEpDQogICAgLy8gICAgIGZvciAoOyBpIDwgbWF4OyBpKyspIHsNCiAgICAvLyAgICAgICAgIGxldCBwID0gew0KICAgIC8vICAgICAgICAgICAgIHg6IHJvd0V4dHJhY3QocDEpLA0KICAgIC8vICAgICAgICAgICAgIHk6IGkNCiAgICAvLyAgICAgICAgIH07DQogICAgLy8gICAgICAgICAvLy8vbG9nKCLmnJ/mnJsyIDIgICAgICAgMiAgMyAiKQ0KICAgIC8vICAgICAgICAgLy8vL2xvZygiODQ56KGMaSxwLngscC55IixpLHAueCxwLnksaXNJbWdCYWNrZ3JvdW5kKGltZ0VudGl0eUV4dHJhY3RGcm9tUm93QW5kY29sdW1uKHAueCwgcC55KSkpDQoNCg0KDQogICAgLy8gICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihwLngsIHAueSkpKSB7DQogICAgLy8gICAgICAgICAgICAgLy8vL2xvZygiNDMz6KGM5pyJ6Zqc56KN54mpIikNCiAgICAvLyAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAvLyAgICAgICAgIH1lbHNlew0KICAgIC8vICAgICAgICAgICAgIC8vLy9sb2coIjQzNuihjOayoeaciemanOeijeeJqSIpDQogICAgLy8gICAgICAgICB9DQogICAgLy8gICAgIH0NCiAgICAvLyAgICAgLy8vL2xvZygiaSA9PSBtYXgiLGkgLCBtYXgpDQogICAgLy8gICAgIGlmIChpID09IG1heCkgew0KICAgIC8vICAgICAgICAgLy8vL2xvZygiNjA36KGM5ZCM5LiA6KGM5Y+v5Lul6L+e6YCaLOayoeaciemanOeijeeJqVxuIixwMSxwMikNCiAgICAvLyAgICAgICAgIC8vIGV4aXQoKQ0KICAgIC8vICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIC8vICAgICB9DQoNCiAgICAvLyB9IGVsc2UgaWYgKHh5ID09ICJvbmxpbmVZIikgew0KICAgIC8vICAgICAvLy8vbG9nKCI4NzfooYzlkIzkuIDliJdcbiIscDEscDIpDQoNCiAgICAvLyAgICAgbGV0IGkgPSByb3dFeHRyYWN0KHAxKSA+IHJvd0V4dHJhY3QocDIpID8gcm93RXh0cmFjdChwMikgOiByb3dFeHRyYWN0KHAxKTsNCiAgICAvLyAgICAgaSA9IGkgKyAxOw0KICAgIC8vICAgICBsZXQgbWF4ID0gcm93RXh0cmFjdChwMSkgPiByb3dFeHRyYWN0KHAyKSA/IHJvd0V4dHJhY3QocDEpIDogcm93RXh0cmFjdChwMik7DQogICAgLy8gICAgIGZvciAoOyBpIDwgbWF4OyBpKyspIHsNCiAgICAvLyAgICAgICAgIGxldCBwID0gew0KICAgIC8vICAgICAgICAgICAgIHg6IGksDQogICAgLy8gICAgICAgICAgICAgeTogY29sdW1uRXh0cmFjdChwMSkNCiAgICAvLyAgICAgICAgIH07DQogICAgLy8gICAgICAgICBpZiAoIWlzSW1nQmFja2dyb3VuZChpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihwLngsIHAueSkpKSB7DQogICAgLy8gICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgLy8gICAgICAgICB9DQogICAgLy8gICAgIH0NCiAgICAvLyAgICAgaWYgKGkgPT0gbWF4KSB7DQogICAgLy8gICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgLy8gICAgIH0NCiAgICAvLyB9IGVsc2Ugew0KICAgIC8vICAgICAvLy8vbG9nKCJvYnN0YWNsZUlzVGhlcmVCZXR3ZWVuUDFBbmRQMuWHveaVsOS8oOWFpeWPguaVsOmUmeivryEiKTsNCiAgICAvLyAgICAgZXhpdCgpOw0KICAgIC8vIH0NCiAgICAvLyByZXR1cm4gdHJ1ZTsNCg0KfQ0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KZnVuY3Rpb24gaW1nRW50aXR5RXh0cmFjdChwKSB7DQogICAgcmV0dXJuIHAuaW1nRW50aXR5Ow0KfQ0KDQpmdW5jdGlvbiBpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3csIGNvbHVtbikgew0KICAgIC8vLy9sb2coIjEyMjLooYxpbWdFbnRpdHlFeHRyYWN0RnJvbVJvd0FuZGNvbHVtbihyb3csY29sdW1uKeeahOWPguaVsOaYryIscm93LGNvbHVtbikNCiAgICAvLy8vbG9nKCJwbGFuZVBpY3R1cmUubGVuZ3RoPSIscGxhbmVQaWN0dXJlLmxlbmd0aCkNCiAgICAvLy8vbG9nKCJyb3csIGNvbHVtbiIscm93LCBjb2x1bW4pDQogICAgcmV0dXJuIHBsYW5lUGljdHVyZVtyb3ddW2NvbHVtbl07DQp9DQoNCmZ1bmN0aW9uIHJvd0V4dHJhY3QocCkgew0KICAgIC8vLy9sb2coIjU1NuihjOS8oOWFpeeahOWbvueJh+aYryIscCkNCiAgICByZXR1cm4gcC5pbWdSb3dBbmRjb2x1bW5bMF07DQp9DQoNCmZ1bmN0aW9uIGNvbHVtbkV4dHJhY3QocCkgew0KICAgIHJldHVybiBwLmltZ1Jvd0FuZGNvbHVtblsxXTsNCn0NCg0KZnVuY3Rpb24gaW1nRGVzdHJveShwMSwgcDIpIHsNCiAgICAvLyAvLy8vbG9nKCJpbWdEZXN0cm95KHAxLCBwMikg6KKr6LCD55SoIik7DQogICAgaW1nQ2xpY2tQMVAyKHAxLCBwMik7DQp9DQoNCmZ1bmN0aW9uIGltZ0NsaWNrUDFQMihwMSwgcDIpIHsNCiAgICBsZXQgeDEgPSBDb29yZGluYXRlRnJvbUltZyhwMSlbMF07DQogICAgbGV0IHkxID0gQ29vcmRpbmF0ZUZyb21JbWcocDEpWzFdOw0KICAgIGxldCB4MiA9IENvb3JkaW5hdGVGcm9tSW1nKHAyKVswXTsNCiAgICBsZXQgeTIgPSBDb29yZGluYXRlRnJvbUltZyhwMilbMV07DQogICAgbGV0IHQgPSAxOw0KICAgIC8vIGNsaWNrKDUzNywyMzYpOw0KICAgIHNsZWVwKHQpOw0KICAgIC8vLy9sb2coIue7neWvueWdkOagh+aYryoqKioqKiIseDEseTEseDIseTIsIuS4pOW8oOWbvueJh+aYr1xuIixwMSxwMik7DQogICAgY2xpY2soeDEsIHkxKTsNCiAgICBzbGVlcCh0KTsNCiAgICBjbGljayh4MiwgeTIpOw0KICAgIHNsZWVwKHQpOw0KfQ0KDQovL+S8oOWFpeihjOWIl+i/lOWbnuWdkOaghw0KZnVuY3Rpb24gQ29vcmRpbmF0ZUZyb21JbWcocDEpIHsNCiAgICBsZXQgeDEgPSBwMS5pbWdSb3dBbmRjb2x1bW5bMF07DQogICAgbGV0IHkxID0gcDEuaW1nUm93QW5kY29sdW1uWzFdOw0KICAgIGxldCB4ID0gaW1nRmlzdENlbnRlckNvb3JkaW5hdGVbMF0gKyAoeTEgLSAxKSAqIFNwYWNpbmdMZWZ0QW5kUmlnaHQ7DQogICAgbGV0IHkgPSBpbWdGaXN0Q2VudGVyQ29vcmRpbmF0ZVsxXSArICh4MSAtIDEpICogU3BhY2luZ1VwQW5kRG93bjsNCiAgICByZXR1cm4gW3gsIHldOw0KfQ0KDQpmdW5jdGlvbiBvbmxpbmVYKHAxLCBwMikgew0KICAgIGxldCB5MSA9IHAxLmltZ1Jvd0FuZGNvbHVtblswXTsNCiAgICBsZXQgeTIgPSBwMi5pbWdSb3dBbmRjb2x1bW5bMF07DQogICAgLy8gbGV0IHgxPXAxLmltZ1Jvd0FuZGNvbHVtblswXTsNCiAgICAvLyBsZXQgeTE9cDEuaW1nUm93QW5kY29sdW1uWzFdOw0KICAgIC8vIGxldCB4Mj1wMi5pbWdSb3dBbmRjb2x1bW5bMF07DQogICAgLy8gbGV0IHkyPXAyLmltZ1Jvd0FuZGNvbHVtblsxXTsNCiAgICByZXR1cm4geTEgPT0geTI7DQp9DQoNCmZ1bmN0aW9uIG9ubGluZVkocDEsIHAyKSB7DQogICAgbGV0IHgxID0gcDEuaW1nUm93QW5kY29sdW1uWzFdOw0KICAgIGxldCB4MiA9IHAyLmltZ1Jvd0FuZGNvbHVtblsxXTsNCiAgICByZXR1cm4geDEgPT0geDI7DQp9DQoNCmZ1bmN0aW9uIHAxTmV4dFRvUDIoeHksIHAxLCBwMikgew0KICAgIC8vLy9sb2coIjQ4NOihjHAxTmV4dFRvUDIoeHkscDEsIHAyKeeahOWPguaVsOaYr1xuIix4eSxwMSwgcDIpDQogICAgbGV0IHgxID0gcDEuaW1nUm93QW5kY29sdW1uWzBdOw0KICAgIGxldCB5MSA9IHAxLmltZ1Jvd0FuZGNvbHVtblsxXTsNCiAgICBsZXQgeDIgPSBwMi5pbWdSb3dBbmRjb2x1bW5bMF07DQogICAgbGV0IHkyID0gcDIuaW1nUm93QW5kY29sdW1uWzFdOw0KICAgIGlmICh4eSA9PSAib25saW5lWCIpIHsNCg0KICAgICAgICBsZXQgcmVzdWx0ID0gTWF0aC5hYnMoeTEgLSB5Mik7DQogICAgICAgIC8vLy9sb2coIjQ5MeihjOeahOWPguaVsHh55pivIix4eSwiXG4iLCJyZXN1bHQ9IixyZXN1bHQsIngxPSIseDEsIngyPSIseDIpDQogICAgICAgIGlmIChyZXN1bHQgPT0gMSkgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9IGVsc2UgaWYgKHh5ID09ICJvbmxpbmVZIikgew0KICAgICAgICBsZXQgcmVzdWx0ID0gTWF0aC5hYnMoeDEgLSB4Mik7DQogICAgICAgIGlmIChyZXN1bHQgPT0gMSkgew0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0NCiAgICB9IGVsc2Ugew0KICAgICAgICAvLy8vbG9nKCJwMU5leHRUb1Ay5Ye95pWw5Lyg5YWl5Y+C5pWw6ZSZ6K+vISIpOw0KICAgICAgICBleGl0KCk7DQogICAgfQ0KICAgIHJldHVybiBmYWxzZTsNCn0NCi8vIGlzSW1nQmFja2dyb3VuZChwKQ0KLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KZnVuY3Rpb24gd2FyZWhvdXNlUmVvcmdhbml6ZSgpIHsNCiAgICAvLyDnrKzkuIDmraUg5Zu+54mH5YiG57G7DQogICAgbGV0IGltZ0NhcHR1cmVTY3JlZW4gPSBjYXB0dXJlU2NyZWVuKCk7DQogICAgc2xlZXAoNTApOw0KICAgIGZvciAobGV0IGogPSAxOyBqIDw9IHJvd3NOdW1iZXI7IGorKykgew0KICAgICAgICBmb3IgKGxldCBrID0gMTsgayA8PSBjb2x1bW5zTnVtYmVyOyBrKyspIHsNCiAgICAgICAgICAgIC8vIC8vLy9sb2coaiwgIuihjCIsIGssICLliJciKTsNCiAgICAgICAgICAgIC8vIOWPquS/neWtmOacieaViOWbvueJhyjljbPpnZ7og4zmma/lm77niYcpDQogICAgICAgICAgICBsZXQgaW1nUm93QW5kY29sdW1uID0gW2osIGtdOw0KDQogICAgICAgICAgICBsZXQgc2NyZWVuc2hvdFJlZ2lvbiA9IFtpbWdGaXN0Q2VudGVyQ29vcmRpbmF0ZVswXSArIChrIC0gMSkgKiBTcGFjaW5nTGVmdEFuZFJpZ2h0IC0gaW1nV2lkdGhIZWlnaHQyWzBdLCBpbWdGaXN0Q2VudGVyQ29vcmRpbmF0ZVsxXSArIChqIC0gMSkgKiBTcGFjaW5nVXBBbmREb3duIC0gaW1nV2lkdGhIZWlnaHQyWzFdLCBpbWdXaWR0aEhlaWdodFswXSwgaW1nV2lkdGhIZWlnaHRbMV1dOw0KICAgICAgICAgICAgbGV0IGltZ0VudGl0eSA9IGltYWdlcy5jbGlwKGltZ0NhcHR1cmVTY3JlZW4sIHNjcmVlbnNob3RSZWdpb25bMF0sIHNjcmVlbnNob3RSZWdpb25bMV0sIHNjcmVlbnNob3RSZWdpb25bMl0sIHNjcmVlbnNob3RSZWdpb25bM10pOw0KDQogICAgICAgICAgICBpZiAoaXNJbWdCYWNrZ3JvdW5kKGltZ0VudGl0eSkpIHsNCiAgICAgICAgICAgICAgICAvLyAvLy8vbG9nKCLmmK/og4zmma/lm74s6Lez5Ye65pys5qyh5b6q546vIiwi6KGM5YiXPT09IixqLGspDQogICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBwbGFuZVBpY3R1cmVbal1ba10gPSBpbWdFbnRpdHk7DQogICAgICAgICAgICBpbWdEaXNjZXJuID0gbmV3IEltZ1VuaXQoaW1nRW50aXR5LCBpbWdSb3dBbmRjb2x1bW4pOw0KICAgICAgICAgICAgaWYgKHdhcmVob3VzZS5sZW5ndGggPT0gMCkgew0KICAgICAgICAgICAgICAgIHdhcmVob3VzZS5wdXNoKFtdKTsNCiAgICAgICAgICAgICAgICB3YXJlaG91c2VbMF0ucHVzaChpbWdEaXNjZXJuKTsNCiAgICAgICAgICAgICAgICBpbWdTYXZlKGltZ0VudGl0eSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIGxldCBsZW4gPSB3YXJlaG91c2UubGVuZ3RoOw0KICAgICAgICAgICAgICAgIGxldCBmb3VuZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgbGVuOyBqKyspIHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHAxID0gd2FyZWhvdXNlW2pdWzBdLmltZ0VudGl0eTsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHAyID0gaW1nRW50aXR5Ow0KICAgICAgICAgICAgICAgICAgICBpZiAoaXMySW1nU2FtZShwMSwgcDIpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB3YXJlaG91c2Vbal0ucHVzaChpbWdEaXNjZXJuKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICghZm91bmQpIHsNCiAgICAgICAgICAgICAgICAgICAgd2FyZWhvdXNlLnB1c2goW2ltZ0Rpc2Nlcm5dKTsNCiAgICAgICAgICAgICAgICAgICAgaW1nU2F2ZShpbWdFbnRpdHkpOw0KDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KICAgIC8vLy9sb2coIuS7k+W6k+S4reWbvueJh+aVsOmHjyIsd2FyZWhvdXNlLmxlbmd0aCk7DQoNCn0NCg0KZnVuY3Rpb24gaW1nU2F2ZShwKSB7DQogICAgLy8gLy8g5L+d5a2Y6L+e6L+e55yL5bCP5Zu+54mHDQogICAgLy8gbGV0IHNqID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7DQogICAgLy8gbGV0IHBhdGggPSAiL3NkY2FyZC9qc+aIquWbvjIvIiArIHNqICsgIi5wbmciOw0KICAgIC8vIC8vIC8vLy9sb2cocCk7DQogICAgLy8gLy8gLy8vL2xvZyhwYXRoKTsNCiAgICAvLyBpbWFnZXMuc2F2ZShwLCBwYXRoKTsNCiAgICAvLyAvLyAvLy8vbG9nKCLlt7Lkv53lrZjlsI/miKrlm74iKTsNCn0NCg0KDQoNCg0KDQoNCg0KDQoNCg0KZnVuY3Rpb24gaXMySW1nU2FtZShwMSwgcDIpIHsNCiAgICAvLyAvLy8vbG9nKCJwMT09PT09PT0iLHAxKTsNCiAgICAvLyAvLy8vbG9nKCJwMj09PT09PT0iLHAyKTsNCiAgICBpZiAoIXAxIHx8ICFwMikgew0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KDQoNCg0KDQogICAgLy8gcDHljIXlkKtwMg0KICAgIC8v5ZyocDHkuK3mib5wMg0KICAgIC8vcDJTbWFsbGVy5pivMzBYMzDnmoRwMg0KICAgIGxldCBwMlNtYWxsZXIgPSBpbWFnZXMuY2xpcChwMiwgMTgsIDEwLCAzMCwgMzApOw0KICAgIGxldCByZXN1bHQgPSBpbWFnZXMuZmluZEltYWdlKHAxLCBwMlNtYWxsZXIpOw0KICAgIGlmIChyZXN1bHQgPT0gbnVsbCkgew0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KfQ0KDQoNCi8vIOaYr+WQpuiDjOaZr+iJsuWbvg0KZnVuY3Rpb24gaXNJbWdCYWNrZ3JvdW5kKHApIHsNCiAgICBpZiAoIXApIHsNCiAgICAgICAgcmV0dXJuIHRydWU7DQogICAgfQ0KICAgIGxldCBsZW4gPSBpbWdCYWNrZ3JvdW5kLmxlbmd0aDsNCiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGxlbjsgaisrKSB7DQogICAgICAgIGxldCBjb2xvckFuZENvb3JkaW5hdGUgPSBpbWdCYWNrZ3JvdW5kRml2ZVBvaW50KGltZ0JhY2tncm91bmRbal0pOw0KICAgICAgICAvLyAvLy8vbG9nKCLkupTmjIflsbHmmK86XG4iLGNvbG9yQW5kQ29vcmRpbmF0ZVswXSwiXG4iLCBjb2xvckFuZENvb3JkaW5hdGVbMV0pOw0KICAgICAgICAvLyAvLy8vbG9nKCI1NTfooYxpc0ltZ0JhY2tncm91bmTmlrnms5UiLCLlj4LmlbDliIbliKvmmK8iLHAsIGNvbG9yQW5kQ29vcmRpbmF0ZVswXSwgY29sb3JBbmRDb29yZGluYXRlWzFdKTsNCiAgICAgICAgbGV0IHJlc3VsdCA9IGltYWdlcy5maW5kTXVsdGlDb2xvcnMocCwgY29sb3JBbmRDb29yZGluYXRlWzBdLCBjb2xvckFuZENvb3JkaW5hdGVbMV0pOw0KICAgICAgICAvLyAvLy8vbG9nKCLnrKwiLGosIuS4quiDjOaZr+WbvueahOWIpOaWree7k+aenOaYryIscmVzdWx0KTsNCiAgICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gZmFsc2U7DQp9DQoNCmZ1bmN0aW9uIGltZ0JhY2tncm91bmRGaXZlUG9pbnQocCkgew0KICAgIGNvbnN0IHBvaW50Rml2ZSA9IFsNCiAgICAgICAgWzEsIDFdLA0KICAgICAgICBbMTEsIDFdLA0KICAgICAgICBbMSwgMTFdLA0KICAgICAgICBbMjEsIDExXSwNCiAgICAgICAgWzExLCAyMV0NCiAgICBdOw0KICAgIGNvbnN0IHBvaW50Zm91ciA9IFsNCiAgICAgICAgWzEwLCAwXSwNCiAgICAgICAgWzAsIDEwXSwNCiAgICAgICAgWzIwLCAxMF0sDQogICAgICAgIFsxMCwgMjBdDQogICAgXTsNCiAgICBsZXQgcG9pbnRDb2xvcnMgPSBbXTsNCiAgICBmb3IgKGxldCBqID0gMDsgaiA8IDU7IGorKykgew0KICAgICAgICBwb2ludENvbG9yc1tqXSA9IGltYWdlcy5waXhlbChwLCBwb2ludEZpdmVbal1bMF0sIHBvaW50Rml2ZVtqXVsxXSk7DQogICAgfQ0KICAgIGxldCByZXN1bHQgPSBbXTsNCiAgICByZXN1bHRbMF0gPSBwb2ludENvbG9yc1swXTsNCiAgICByZXN1bHRbMV0gPSBbDQogICAgICAgIFtwb2ludGZvdXJbMF1bMF0sIHBvaW50Zm91clswXVsxXSwgcG9pbnRDb2xvcnNbMV1dLA0KICAgICAgICBbcG9pbnRmb3VyWzFdWzBdLCBwb2ludGZvdXJbMV1bMV0sIHBvaW50Q29sb3JzWzJdXSwNCiAgICAgICAgW3BvaW50Zm91clsyXVswXSwgcG9pbnRmb3VyWzJdWzFdLCBwb2ludENvbG9yc1szXV0sDQogICAgICAgIFtwb2ludGZvdXJbM11bMF0sIHBvaW50Zm91clszXVsxXSwgcG9pbnRDb2xvcnNbNF1dDQoNCiAgICBdOw0KICAgIHJldHVybiByZXN1bHQ7DQogICAgLy8g6L+U5Zue6L+Z5qC355qE5qC85byPIOesrOS4gOS4queCueWIsOmineminOiJsiAg5ZKM5YW25L2Z54K555qE5Z2Q5qCH5ZKM6aKc6ImyDQogICAgLy8gIiMxMjM0NTYiLCBbWzEwLCAyMCwgIiNmZmZmZmYiXSwgWzMwLCA0MCwgIiMwMDAwMDAiXV0NCn0="),
b64("Ly8gYW5kcm9pZDpsYXlvdXRfd2lkdGg9IndyYXBfY29udGVudCIKLy8gYW5kcm9pZDpsYXlvdXRfaGVpZ2h0PSJtYXRjaF9wYXJlbnQiCi8vIGFuZHJvaWQ6bGF5b3V0X3dlaWdodD0iMSIKLy8gYW5kcm9pZDp0ZXh0PSJAc3RyaW5nL3RleHQ3IiAvPgovLyA8QnV0dG9uCi8vIGFuZHJvaWQ6bGF5b3V0X3dpZHRoPSJ3cmFwX2NvbnRlbnQiCi8vIGFuZHJvaWQ6bGF5b3V0X2hlaWdodD0ibWF0Y2hfcGFyZW50IgovLyBhbmRyb2lkOmxheW91dF93ZWlnaHQ9IjEiCi8vIGFuZHJvaWQ6dGV4dD0iQHN0cmluZy90ZXh0XzYiIC8+Ci8vIDxCdXR0b24KLy8gYW5kcm9pZDpsYXlvdXRfd2lkdGg9IndyYXBfY29udGVudCIKLy8gYW5kcm9pZDpsYXlvdXRfaGVpZ2h0PSJtYXRjaF9wYXJlbnQiCi8vIGFuZHJvaWQ6bGF5b3V0X3dlaWdodD0iMSIKLy8gYW5kcm9pZDp0ZXh0PSJAc3RyaW5nL3RleHRfOSIgLz4KLy8gPEJ1dHRvbgovLyBhbmRyb2lkOmxheW91dF93aWR0aD0id3JhcF9jb250ZW50IgovLyBhbmRyb2lkOmxheW91dF9oZWlnaHQ9Im1hdGNoX3BhcmVudCIKCgoKLy8g6ISa5pys55uu55qEOuaIquWbvuaOp+WItuWPsAovLyDpnIDopoHkuIrkuIvlt6blj7Ms6YCA5Ye6LOaIquWbvgoKcmVxdWVzdFNjcmVlbkNhcHR1cmUoKQoK5o6n5Yi25Y+wKCkKc2xlZXAoMzMzMzM0MzMzKQpmdW5jdGlvbiDmjqfliLblj7AoKSB7CiAgICB3ID0gZmxvYXR5LndpbmRvdygKICAgICAgICAvL+aCrOa1rueql+iDjOaZr+iJsgo8ZnJhbWUgaWQ9IuiDjOaZrzEiIHc9IjMwMCIgaD0iMzAwIiBncmF2aXR5PSJjZW50ZXIiIGJnPSIjZmY5MzcwREIiPgoKPHZlcnRpY2FsIGdyYXZpdHk9ImNlbnRlciI+CiAgICA8YnV0dG9uIGlkPSLpgIDlh7oiIGdyYXZpdHk9ImNlbnRlciIgdz0iYXV0byIgdGV4dD0i6YCA5Ye6IiAvPgoKCiAgICA8aG9yaXpvbnRhbD4KICAgICAgICA8dmVydGljYWwgbGF5b3V0X3dlaWdodD0iMSIgbGF5b3V0X3dpZHRoPSJ3cmFwX2NvbnRlbnQiIGxheW91dF9oZWlnaHQ9IndyYXBfY29udGVudCIgYmc9IiM5OTk5MTkxOSI+CiAgICAgICAgICAgIDxsaW5lYXIgZ3Jhdml0eT0iY2VudGVyIiBsYXlvdXRfd2VpZ2h0PSIxIiBsYXlvdXRfd2lkdGg9IndyYXBfY29udGVudCIgbGF5b3V0X2hlaWdodD0id3JhcF9jb250ZW50Ij4KICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IuW3puS4iiIgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLlt6bkuIoiIC8+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLkuIphIiBncmF2aXR5PSJjZW50ZXIiIHRleHQ9IuKGkSIgLz4KICAgICAgICAgICAgPBRQbmVhcj4KICAgICAgICAgICAgPGxpbmVhciBncmF2aXR5PSJjZW50ZXIiIGxheW91dF93ZWlnaHQ9IjEiIGxheW91dF93aWR0aD0id3JhcF9jb250ZW50IiBsYXlvdXRfaGVpZ2h0PSJ3cmFwX2NvbnRlbnQiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0i5bemYSIgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLihpAiIC8+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLkuIthIiBncmF2aXR5PSJjZW50ZXIiIHRleHQ9IuKGkyIgLz4KICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IuWPs2EiIGdyYXZpdHk9ImNlbnRlciIgdGV4dD0i4oaSIiAvPgogICAgICAgICAgICA8FFBuZWFyPgogICAgICAgIDwUN2VydGljYWw+CiAgICAgICAgPHZlcnRpY2FsIGxheW91dF93ZWlnaHQ9IjEiIGxheW91dF93aWR0aD0id3JhcF9jb250ZW50IiBsYXlvdXRfaGVpZ2h0PSJ3cmFwX2NvbnRlbnQiIGJnPSIjOTk5OTE5MTkiPgogICAgICAgICAgICA8bGluZWFyIGdyYXZpdHk9ImNlbnRlciIgbGF5b3V0X3dlaWdodD0iMSIgbGF5b3V0X3dpZHRoPSJ3cmFwX2NvbnRlbnQiIGxheW91dF9oZWlnaHQ9IndyYXBfY29udGVudCI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLlj7PkuIsiIGdyYXZpdHk9ImNlbnRlciIgdGV4dD0i5Y+z5LiLIiAvPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0i5LiKYiIgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLihpEiIC8+CiAgICAgICAgICAgIDwUUG5lYXI+CiAgICAgICAgICAgIDxsaW5lYXIgZ3Jhdml0eT0iY2VudGVyIiBsYXlvdXRfd2VpZ2h0PSIxIiBsYXlvdXRfd2lkdGg9IndyYXBfY29udGVudCIgbGF5b3V0X2hlaWdodD0id3JhcF9jb250ZW50Ij4KICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IuW3pmIiIGdyYXZpdHk9ImNlbnRlciIgdGV4dD0i4oaQIiAvPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0i5LiLYiIgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLihpMiIC8+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLlj7NiIiBncmF2aXR5PSJjZW50ZXIiIHRleHQ9IuKGkiIgLz4KICAgICAgICAgICAgPBRQbmVhcj4KICAgICAgICA8FDdlcnRpY2FsPgoKICAgIDwvaG9yaXpvbnRhbD4KCiAgICA8dGV4dCBncmF2aXR5PSJjZW50ZXIiIHc9ImF1dG8iPuWOn+S9nOiAhTrmlIDnmbs8L3RleHQ+CjwUN2VydGljYWw+Cgo8L2ZyYW1lPgogICAgKTsKfQ=="),
b64(""),
b64("dmFyIGE="),
b64("c3lzID0gIui/kOihjOiEmuacrOWQju+8jOavj+W9k+mBh+WIsFwi5biD5bGA6IyD5Zu05YiG5p6QXCLnlYzpnaLvvIzlvZPkvaDmu5HlgJLlupXml7bvvIwz56eS5LmL5YaF5ruR5YCS6aG256uv77yM5bCx5Lya6Ieq5Yqo5aSN5Yi25bGe5oCn44CCIjsKYWxlcnQoc3lzKTsKd2hpbGUgKHRydWUpIHsKICAgIHZhciBhID0gcm93Q291bnQoMjcpLmNsYXNzTmFtZSgiYW5kcm9pZC5zdXBwb3J0LnY3LndpZGdldC5SZWN5Y2xlclZpZXciKTsKICAgIGEuZmluZE9uZSgpOwogICAgdmFyIGFiMCA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS5pZCgibmFtZSIpLnRleHQoInNlbGVjdGVkIik7CiAgICB2YXIgYWIxID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5UZXh0VmlldyIpLmlkKCJuYW1lIikudGV4dCgiYWNjZXNzaWJpbGl0eUZvY3VzZWQiKTsKICAgIGlmIChhYjAuZmluZE9uZSgpKSB7CiAgICAgICAgZGV2aWNlLnZpYnJhdGUoMjApOwogICAgICAgIHRvYXN0KCIz56eS5ruR5Yiw6aG256uv5bCx5byA5aeL5pS26ZuG5bGe5oCnIik7CiAgICAgICAgaWYgKGFiMS5maW5kT25lKDMwMDApKSB7CiAgICAgICAgICAgIGRldmljZS52aWJyYXRlKDIwKTsKICAgICAgICAgICAgdmFyIOWGhee9ruWtmOWCqCA9IHN0b3JhZ2VzLmNyZWF0ZSgiQUJDIik7CiAgICAgICAgICAgIHZhciBheiA9IFsiY2xhc3NOYW1lIiwgImJvdW5kcyIsICJkZXB0aCIsICJkZXNjIiwgImRyYXdpbmdPcmRlciIsICJpZCIsICJ0ZXh0Il07CiAgICAgICAgICAgIHZhciBiID0gW10KICAgICAgICAgICAgdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgICAgICAgICAgICAgc2xlZXAoNTAwKTsKICAgICAgICAgICAgICAgICAgICBhLmZpbmRPbmUoKS5zY3JvbGxGb3J3YXJkKCk7CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBheikgewogICAgICAgICAgICAgICAgYltpXSA9IHRleHQoYXpbaV0pLmZpbmRPbmUoKS5wYXJlbnQoKS5jaGlsZCgxKS5nZXRUZXh0KCk7CiAgICAgICAgICAgICAgICAvLyBsb2coYXpbaV0sIGJbaV0pOwogICAgICAgICAgICAgICAgaWYgKGF6W2ldID09ICJib3VuZHMiKSB7CiAgICAgICAgICAgICAgICAgICAgenp4ID0gYltpXTsKICAgICAgICAgICAgICAgICAgICBiW2ldID0gbnVsbDsKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHNsZWVwKDMwMCkKICAgICAgICAgICAgYmFjaygpOwogICAgICAgICAgICBzbGVlcCgzMDApOwogICAgICAgICAgICBiYWNrKCk7CiAgICAgICAgICAgIHRocmVhZHMuc2h1dERvd25BbGwoKTsKICAgICAgICAgICAgayA9IDAKICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBiKSB7CiAgICAgICAgICAgICAgICBpZiAoYltpXSA9PSBudWxsKXsvLyB8fCBheltpXSA9PSAiYm91bmRzIikgewogICAgICAgICAgICAgICAgICAgIGF6LnNwbGljZShpIC0gaywgMSk7CiAgICAgICAgICAgICAgICAgICAgaysrOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfTsKICAgICAgICAgICAgZm9yIChoID0gMDsgaCA8IGs7IGgrKykgewogICAgICAgICAgICAgICAgYi5zcGxpY2UoYi5pbmRleE9mKG51bGwpLCAxKTsKICAgICAgICAgICAgfTsKICAgICAgICAgICAgbG9nKCJiPSAiICsgYik7CiAgICAgICAgICAgIGxvZygiYXo9ICIrYXopOwogICAgICAgICAgICBhYSA9IGRpYWxvZ3MubXVsdGlDaG9pY2UoIuWxnuaApyIsIGF6KTsKICAgICAgICAgICAgYmIgPSBuZXcgQXJyYXkoKTsKICAgICAgICAgICAgbG9nKCJhYT0gIithYSk7CiAgICAgICAgICAgIGFzZDogZm9yICh2YXIgaSBpbiBhYSkgewogICAgICAgICAgICAgICAvKiBpZiAoYXpbYWFbaV1dID09ICJib3VuZHMiKSB7CiAgICAgICAgICAgICAgICAgICAgYmJbaV0gPSBhelthYVtpXV0gKyAiKCIgKyBiW2FhW2ldXSArICIpIjsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZSBhc2Q7CiAgICAgICAgICAgICAgICB9OyovCiAgICAgICAgICAgICAgICBpZiAoYXpbYWFbaV1dID09ICJkZXB0aCIgfHwgYXpbYWFbaV1dID09ICJkcmF3aW5nT3JkZXIiKSB7IC8v5pyJ5pWw5a2X55qE5bGe5oCn5Zyo6L+Z6YeM5LiU5LiA5LiLCiAgICAgICAgICAgICAgICAgICAgYmJbaV0gPSBhelthYVtpXV0gKyAiKCIgKyBiW2FhW2ldXSArICIpIjsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgYmJbaV0gPSBhelthYVtpXV0gKyAiKFwiIiArIGJbYWFbaV1dICsgIlwiKSI7CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9OwogICAgICAgICAgICBjYyA9IGJiLmpvaW4oIi4iKTsKICAgICAgICAgICAgbG9nKGNjKQogICAgICAgICAgICBsb2coenp4KQogICAgICAgICAgICDlhoXnva7lrZjlgqgucHV0KCJhIiwgY2MpOwogICAgICAgICAgICDlhoXnva7lrZjlgqgucHV0KCJiIiwgenp4KTsKICAgICAgICAgICAgZGV2aWNlLnZpYnJhdGUoMzApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRldmljZS52aWJyYXRlKDIwKTsKICAgICAgICAgICAgdG9hc3QoIjPnp5Llt7Lov4ciKTsKICAgICAgICB9OwogICAgfTsKfTsKLy/lhoXnva7lrZjlgqguY2xlYXIoKTs="),
b64("InVpIjsKLy90b2FzdCgi5pys6L2v5Lu25Y+q6YCC55So5LqO5a2m5Lmg5Lqk5rWB77yM6K+35Yu/55So5LqO5ZWG5Lia55So6YCUIik7DQp2YXIgY2FuZ2t1ID0gc3RvcmFnZXMuY3JlYXRlKCJJTkZPUl8xIik7DQovL2NhbmdrdS5jbGVhcigpOw0KdWkubGF5b3V0KA0KICAgIDxzY3JvbGw+DQogICAgPHZlcnRpY2FsIHBhZGRpbmc9IjE2Ij4NCiAgICAgICAgIDx0ZXh0IHRleHQ9IuazqOaEj++8muS7peS4i+S4uuW/heWhq+mhue+8jOS4jeWhq+WImeS8muWHuumUmSIgdGV4dENvbG9yPSIjMDBmZjAwIiB0ZXh0U2l6ZT0iMTBzcCIvPg0KDQogICAgICAgICA8dGV4dCB0ZXh0PSLmnIDlpKflj5botKfot53nprso5YWs6YeMKSjlv4XloaspIiB0ZXh0Q29sb3I9ImJsYWNrIiB0ZXh0U2l6ZT0iOHNwIiBtYXJnaW5Ub3A9IjEiLz4NCiAgICAgICAgIDxpbnB1dCBpZD0iemRxaGpsIiB0ZXh0PSI1MzIiIHRleHRTaXplPSI4c3AiIGhpbnQ9IuS+i+Wmgu+8mjAuOSIvPg0KDQogICAgICAgICA8dGV4dCB0ZXh0PSLmnIDlpKfpgIHotKfot53nprso5YWs6YeMKSjlv4XloaspIiB0ZXh0Q29sb3I9ImJsYWNrIiB0ZXh0U2l6ZT0iOHNwIiBtYXJnaW5Ub3A9IjEiLz4NCiAgICAgICAgIDxpbnB1dCBpZD0iemRzaGpsIiB0ZXh0U2l6ZT0iOHNwIiB0ZXh0PSIxMjAwIiBoaW50PSLkvovlpoLvvJoxLjIiLz4NCiAgICAgICAgIA0KICAgICAgICAgPHRleHQgdGV4dD0i5pyA5L2O5Lu35qC8KOWFgyko5b+F5aGrKSIgdGV4dENvbG9yPSJibGFjayIgdGV4dFNpemU9IjhzcCIgbWFyZ2luVG9wPSIxIi8+DQogICAgICAgICA8aW5wdXQgaWQ9InpkamciICB0ZXh0U2l6ZT0iOHNwIiBoaW50PSLkvovlpoLvvJo1LjUiLz4NCiAgICAgICAgIA0KICAgICAgICAgPHRleHQgdGV4dD0i5pyA5bCR5Ymp5L2Z5pe26Ze0KOWIhumSnyko5b+F5aGrKSIgdGV4dENvbG9yPSJibGFjayIgdGV4dFNpemU9IjhzcCIgbWFyZ2luVG9wPSIxIi8+DQogICAgICAgICA8aW5wdXQgaWQ9InN5c2oiIGlucHV0VHlwZT0ibnVtYmVyIiAgdGV4dFNpemU9IjhzcCIgaGludD0i5L6L5aaC77yaMzAiLz4NCg0KICAgICAgICAgPHRleHQgdGV4dD0i5oqi5Yiw5aSa5bCR5Y2V5ZCO6YCA5Ye6KOW/heWhqykiIHRleHRDb2xvcj0iYmxhY2siIHRleHRTaXplPSI4c3AiIG1hcmdpblRvcD0iMSIvPg0KICAgICAgICAgPGlucHV0IGlkPSJxZHRjIiBpbnB1dFR5cGU9Im51bWJlciIgIHRleHRTaXplPSI4c3AiIGhpbnQ9IuS+i+Wmgu+8mjk5OTk5OTk5Ii8+DQoNCiAgICAgICAgIDx0ZXh0IHRleHQ9IuWIt+aWsOmikeeOh++8iOavq+enku+8iSjlv4XloaspIiB0ZXh0Q29sb3I9ImJsYWNrIiB0ZXh0U2l6ZT0iOHNwIiBtYXJnaW5Ub3A9IjEiLz4NCiAgICAgICAgIDxpbnB1dCBpZD0ic3hzaiIgaW5wdXRUeXBlPSJudW1iZXIiICB0ZXh0U2l6ZT0iOHNwIiBoaW50PSLlu7rorq7kuI3lsI/kuo42ODAiLz4NCg0KICAgICAgICAgPHRleHQgdGV4dD0i5oqi5Y2V5qih5byP77yI5rWL6K+V6ICF5YGH5oqiKOeCueWPlua2iCnvvJowICAs5a6i5oi355yf5oqiKOeCueehruWuminvvJox77yJKOW/heWhqykgICAgIOW3suWBnOeUqCIgdGV4dENvbG9yPSJibGFjayIgdGV4dFNpemU9IjhzcCIgbWFyZ2luVG9wPSIxIi8+DQogICAgICAgICA8aW5wdXQgaWQ9InFkbXMiIGlucHV0VHlwZT0ibm9uZSIgdGV4dFNpemU9IjhzcCIgdGV4dD0iMSIgaGludD0i5Y+q6IO9MOaIljHlk58iLz4NCiAgICAgICAgIA0KICAgICAgICAgPHRleHQgdGV4dD0i5rOo5oSP77ya5Lul5LiL5Li66YCJ5aGr6aG577yM5LiN5aGr5YiZ6KGo56S65ruh6Laz5LiK6Z2i5p2h5Lu25bCx5oqi5Y2VIiB0ZXh0Q29sb3I9IiMwMGZmMDAiIHRleHRTaXplPSIxMHNwIi8+DQoNCiAgICAgICAgIDx0ZXh0IHRleHQ9IuWxj+iUveWVhuWutuWFs+mUruWtl++8jOS4jeS8muaKouWMheWQq+WFs+mUruWtl+eahOWVhuWutu+8jOS4remXtOS7pS/pmpTlvIAo5Y+v6YCJKSIgdGV4dENvbG9yPSJibGFjayIgdGV4dFNpemU9IjhzcCIgIG1hcmdpblRvcD0iMSIvPg0KICAgICAgICAgPGlucHV0IGlkPSJwYnNqIiB0ZXh0U2l6ZT0iOHNwIiB0ZXh0PSIiIGhpbnQ9IuWmgu+8mkEvQi9DIi8+DQogICAgICAgICANCiAgICAgICAgIDx0ZXh0IHRleHQ9IuWVhuWutuWSjOWcsOWdgOmAieWPlu+8jOWPquS8muaKouWMheWQq+S9oOWFs+mUruWtl+eahOWVhuWutuWSjOWcsOWdgO+8jOS4remXtOS7pS/pmpTlvIAo5Y+v6YCJKSIgdGV4dENvbG9yPSJibGFjayIgdGV4dFNpemU9IjhzcCIgbWFyZ2luVG9wPSIxIi8+DQogICAgICAgICA8aW5wdXQgaWQ9InNqZHoiICB0ZXh0U2l6ZT0iOHNwIiB0ZXh0PSIiIGhpbnQ9IuWmgu+8mkQvRS9GIi8+DQogICAgICAgICANCiAgICAgICAgIDx0ZXh0IHRleHQ9IumAgemkkOWcsOWdgOWFs+mUruWtl++8jOWPquS8muaKouWMheWQq+S9oOWFs+mUruWtl+eahOmAgemkkOWcsOWdgO+8jOS4remXtOS7pS/pmpTlvIAo5Y+v6YCJKSIgdGV4dENvbG9yPSJibGFjayIgdGV4dFNpemU9IjhzcCIgbWFyZ2luVG9wPSIxIi8+DQogICAgICAgICA8aW5wdXQgaWQ9InNjZHoiIHRleHRTaXplPSI4c3AiIHRleHQ9IiIgaGludD0i5aaC77yaRy9IL0kiLz4NCg0KICAgICAgICAgPGJ1dHRvbiBpZD0ib2siIHRleHQ9IuehruWumiIgdz0iYXV0byIgc3R5bGU9IldpZGdldC5BcHBDb21wYXQuQnV0dG9uLkNvbG9yZWQiLz4NCiAgICA8L3ZlcnRpY2FsPg0KICAgIDwvc2Nyb2xsPg0KKTsKDQp1aS56ZHFoamwuc2V0VGV4dChjYW5na3UuZ2V0KCJ6ZHFoamwiLCAiIikpOw0KdWkuc3hzai5zZXRUZXh0KGNhbmdrdS5nZXQoInN4c2oiLCAiIikpOw0KdWkuemRzaGpsLnNldFRleHQoY2FuZ2t1LmdldCgiemRzaGpsIiwgIiIpKTsNCnVpLnFkbXMuc2V0VGV4dChjYW5na3UuZ2V0KCJxZG1zIiwgIjEiKSk7DQp1aS5wYnNqLnNldFRleHQoY2FuZ2t1LmdldCgicGJzaiIsICIiKSk7DQp1aS5zamR6LnNldFRleHQoY2FuZ2t1LmdldCgic2pkeiIsICIiKSk7DQp1aS5zY2R6LnNldFRleHQoY2FuZ2t1LmdldCgic2NkeiIsICIiKSk7DQp1aS56ZGpnLnNldFRleHQoY2FuZ2t1LmdldCgiemRqZyIsICIiKSk7DQp1aS5zeXNqLnNldFRleHQoY2FuZ2t1LmdldCgic3lzaiIsICIiKSk7DQp1aS5xZHRjLnNldFRleHQoY2FuZ2t1LmdldCgicWR0YyIsICIiKSk7Cg0KdWkub2suY2xpY2soKCkgPT4gew0KICAgIHZhciB6ZHFoamwgPSB1aS56ZHFoamwudGV4dCgpOw0KICAgIHZhciBzeHNqID0gdWkuc3hzai50ZXh0KCk7DQogICAgdmFyIHpkc2hqbCA9IHVpLnpkc2hqbC50ZXh0KCk7DQogICAgdmFyIHFkbXMgPSB1aS5xZG1zLnRleHQoKTsNCiAgICB2YXIgcGJzaiA9IHVpLnBic2oudGV4dCgpOw0KICAgIHZhciBzamR6ID0gdWkuc2pkei50ZXh0KCk7DQogICAgdmFyIHNjZHogPSB1aS5zY2R6LnRleHQoKTsNCiAgICBjYW5na3UucHV0KCJ6ZHFoamwiLCB6ZHFoamwpOw0KICAgIGNhbmdrdS5wdXQoInN4c2oiLCBzeHNqKTsNCiAgICBjYW5na3UucHV0KCJ6ZHNoamwiLCB6ZHNoamwpOw0KICAgIGNhbmdrdS5wdXQoInFkbXMiLCBxZG1zKTsNCiAgICBjYW5na3UucHV0KCJwYnNqIiwgcGJzaik7DQogICAgY2FuZ2t1LnB1dCgic2pkeiIsIHNqZHopOw0KICAgIGNhbmdrdS5wdXQoInNjZHoiLCBzY2R6KTsNCiAgICBjYW5na3UucHV0KCJ6ZGpnIiwgdWkuemRqZy50ZXh0KCkpOw0KICAgIGNhbmdrdS5wdXQoInN5c2oiLCB1aS5zeXNqLnRleHQoKSk7DQogICAgY2FuZ2t1LnB1dCgicWR0YyIsIHVpLnFkdGMudGV4dCgpKTsNCiAgICB0b2FzdCgi6K6+572u5bey5L+d5a2YIik7DQogICAgdWkuZmluaXNoKCk7CiAgICBlbmdpbmVzLmV4ZWNTY3JpcHRGaWxlKCLkvJfljIUuanMiKTsNCn0pOyAvL+m6u+eDpg=="),
b64("dmFyIHcgPSBmbG9hdHkucmF3V2luZG93KA0KICAgIDxmcmFtZT4KICAgIDxpbWcgdz0iNzIwIiBoPSIxMjgwIiBzY2FsZVR5cGU9ImZpdFhZIiBzcmM9Imh0dHA6Ly9mMi5kbi5hbnF1LmNvbS9kb3duL01EZGhPUT09L2FsbGltZy8xMzA4LzU0LTEzMFA2MTExRzMuanBnIiBhbHBoYT0iMC4zIi8+CiAgIDwvZnJhbWU+Cik7DQoNCncuc2V0VG91Y2hhYmxlKGZhbHNlKTsNCgpzZXRUaW1lb3V0KCgpPT57DQogICAgdy5jbG9zZSgpOw0KfSwgMzYwMDAwKTsKICAgICAgICA="),
b64("InVpIjsKdWkubGF5b3V0KAogICAgPHZlcnRpY2FsIGdyYXZpdHk9ImNlbnRlcl9ob3Jpem9udGFsIj4gCiAgICAgICAgPGhvcml6b250YWwgPgogICAgICAgICAgICA8aW5wdXQgaWQ9ImlucHV0IiB3PSI4MDBweCIgaD0iMTIwcHgiIG1hcmdpbj0iMTBweCIgcGFkZGluZz0iMTBweCIgdGV4dFNpemU9IjE1c3AiIGdyYXZpdHk9ImNlbnRlciIgLz4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iYnV0IiB3PSIqIiBoPSIqIiB0ZXh0PSLnoa7lrpoiLz4KICAgICAgICA8L2hvcml6b250YWw+CiAgICAgICAgPGZyYW1lID4KICAgICAgICAgICAgIDx0ZXh0IGlkPSJ0ZXh0IiB3PSJhdXRvIiBsYXlvdXRfZ3Jhdml0eT0ibGVmdCIvPiAgICAgIAogICAgICAgICAgICAgPHRleHQgaWQ9InRleHQxIiB3PSJhdXRvIiBsYXlvdXRfZ3Jhdml0eT0icmlnaHQiLz4gICAgICAKICAgICAgICA8L2ZyYW1lPgogICAgICAgIDxWaWRlb1ZpZXcgaWQ9InZpZGVvIiB3PSJhdXRvIiBoPSJhdXRvIiAvPgogICAgICAgIDxob3Jpem9udGFsIG1hcmdpbj0iMTBweCA0MHB4IDEwcHggNDBweCIgZ3Jhdml0eT0iY2VudGVyIj4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0idmlkZW9fc3RhcnRfcGF1c2UiIHRleHQ9IuaSreaUviIvPgogICAgICAgICAgICA8YnV0dG9uIGlkPSJ2aWRlb19zdG9wIiB0ZXh0PSLlgZzmraIiLz4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iY2hvb3NlIiB0ZXh0PSLpgInmi6kiLz4KICAgICAgICA8L2hvcml6b250YWw+CiAgICA8L3ZlcnRpY2FsPgopOwoKdHJ5IHsKICAgLy8gdmFyIHBhdGg9Ii9zZGNhcmQvQW5kcm9pZC9kYXRhL2NvbS50ZW5jZW50LnRtZ3Auc2dhbWUvZmlsZXMvUmVzb3VyY2VzL1NwbGFzaF9tb3ZlL1NwbGFzaF90ZXN0Lm1wNCI7CiAgICB2YXIgcGF0aCA9ICIvc2RjYXJkL+inhumikS5tcDQiOwogICAgLy92YXIgcGF0aCA9ICIvc2RjYXJkL0RDSU0vVmlkZW8vVjgwNzI3LTE5MDU1OS5tcDQiOwogICAgdWkudmlkZW8uc2V0VmlkZW9QYXRoKHBhdGgpOwogICAgdWkudmlkZW8uc3RhcnQoKTsKfSBjYXRjaCAoZSkgewogICAgdG9hc3QoIuayoeacieWOn+inhumike+8jCIpOwogICAgdG9hc3QoIuivt+iHquihjOeCueWHu+mAieaLqe+8jCIpOwogICAgdG9hc3QoIumAieaLqeinhumikeaWh+S7tuaSreaUviIpOwp9OwoKdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgdWkucnVuKCgpID0+IHsKICAgICAgICAgICAgdWkudGV4dC5zZXRUZXh0KCh1aS52aWRlby5nZXRDdXJyZW50UG9zaXRpb24oKS8xMDAwKS50b1N0cmluZygpKTsKICAgICAgICAgICAgdWkudGV4dDEuc2V0VGV4dCgodWkudmlkZW8uZ2V0RHVyYXRpb24oKS8xMDAwKS50b1N0cmluZygpKTsgICAgICAgCiAgICAgICAgfSk7CiAgICB9Owp9KTsKCgovL0RldGFpbHModWkudmlkZW8sIlNlZWsiKTsKLy/kvZzogIXlj6rlrozmiJDkuobvvIzmkq3mlL7lkozmmoLlgZzvvIzlgZzmraLvvIzov5vluqbot7PovazvvIzpgInmi6nmlofku7bmkq3mlL7vvIzov5nkupvpg6jliIblip/og73jgIIo6L+b5bqm6Lez6L2s5Yqf6IO95LiN57K+56GuOuS4jeefpemBk+WVpeWOn+WboCkKLy/kvJroi7Hor63nmoTlj6/ku6XnlKjkuIrpnaLov5nmrrXku6PnoIHmib7kuIDkupvlhbbku5bnmoTnlKjms5XjgIIKCgp1aS52aWRlb19zdGFydF9wYXVzZS5zZXRPbkNsaWNrTGlzdGVuZXIoZnVuY3Rpb24oKSB7CiAgICBpZiAodWkudmlkZW8uaXNQbGF5aW5nKCkpIHsKICAgICAgICB1aS5ydW4oKCkgPT4gewogICAgICAgICAgICB1aS52aWRlby5wYXVzZSgpOwogICAgICAgICAgICB1aS52aWRlb19zdGFydF9wYXVzZS5zZXRUZXh0KCLmkq3mlL4iKTsKICAgICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgICAgdWkucnVuKCgpID0+IHsKICAgICAgICAgICAgdWkudmlkZW8uc3RhcnQoKTsKICAgICAgICAgICAgdWkudmlkZW9fc3RhcnRfcGF1c2Uuc2V0VGV4dCgi5pqC5YGcIik7CiAgICAgICAgfSk7CiAgICB9Owp9KTsKCnVpLnZpZGVvX3N0b3Auc2V0T25DbGlja0xpc3RlbmVyKGZ1bmN0aW9uKCkgewogICAgdWkucnVuKCgpID0+IHsKICAgICAgICB1aS52aWRlby5zdG9wUGxheWJhY2soKTsKICAgIH0pOwp9KTsKdmFyIGZ4LCBmeSwgY3gsIGN5Owp1aS52aWRlby5zZXRPblRvdWNoTGlzdGVuZXIoZnVuY3Rpb24odmlldywgZXZlbnQpIHsKICAgIHN3aXRjaCAoZXZlbnQuZ2V0QWN0aW9uKCkpIHsKICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9ET1dOOgogICAgICAgICAgICBmeCA9IGV2ZW50LmdldFJhd1goKTsKICAgICAgICAgICAgZnkgPSBldmVudC5nZXRSYXdZKCk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwoKICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9NT1ZFOgogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKCiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fVVA6CiAgICAgICAgICAgIGN4ID0gZXZlbnQuZ2V0UmF3WCgpIC0gZng7CiAgICAgICAgICAgIGN5ID0gZXZlbnQuZ2V0UmF3WSgpIC0gZnk7CiAgICAgICAgICAgIGlmIChNYXRoLnNxcnQoY3ggKiBjeCArIGN5ICogY3kpID4gNTApIHsKICAgICAgICAgICAgICAgIHVpLnJ1bigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgIHVpLnZpZGVvLnNlZWtUbyh1aS52aWRlby5nZXRDdXJyZW50UG9zaXRpb24oKSArIE1hdGgucm91bmQoY3gqMTApKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgLy/ot7Povazov5vluqbjgIIo5LiN57K+5YeGKQogICAgICAgICAgICB9OwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiB0cnVlOwp9KTsKCgp1aS5jaG9vc2UuY2xpY2soKCkgPT4gewogICAgdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKICAgICAgICB2YXIgQXBhdGggPSAiL3NkY2FyZC9EQ0lNIjsKICAgICAgICB2YXIgcGF0aCA9IGxpc3RwYXRoKEFwYXRoKTsKICAgICAgICAvL3RvYXN0KHBhdGggfHwgIiIpOwogICAgICAgIGlmIChwYXRoKSB7CiAgICAgICAgICAgIHVpLnJ1bihmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHVpLmlucHV0LnNldFRleHQocGF0aCk7CiAgICAgICAgICAgICAgICB1aS52aWRlby5zZXRWaWRlb1BhdGgodWkuaW5wdXQuZ2V0VGV4dCgpLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgdWkudmlkZW8uc3RhcnQoKTsKICAgICAgICAgICAgICAgIHVpLnZpZGVvX3N0YXJ0X3BhdXNlLnNldFRleHQoIuaaguWBnCIpOwogICAgICAgICAgICB9KTsKICAgICAgICB9OwogICAgfSk7Cn0pOwoKdWkuYnV0LnNldE9uQ2xpY2tMaXN0ZW5lcihmdW5jdGlvbigpIHsKICAgIHVpLnJ1bigoKSA9PiB7CiAgICAgICAgdWkudmlkZW8uc2V0VmlkZW9QYXRoKHVpLmlucHV0LmdldFRleHQoKS50b1N0cmluZygpKTsKICAgICAgICB1aS52aWRlby5zdGFydCgpOwogICAgICAgIHVpLnZpZGVvX3N0YXJ0X3BhdXNlLnNldFRleHQoIuaaguWBnCIpOwogICAgfSk7Cn0pOwoKCmZ1bmN0aW9uIGxpc3RwYXRoKEFwYXRoLCBCcGF0aCkgewogICAgQnBhdGggPSBCcGF0aCB8fCAiIjsKICAgIHZhciBwYXRoID0gZmlsZXMuam9pbihBcGF0aCwgQnBhdGgpOwogICAgdmFyIGEgPSBmaWxlcy5saXN0RGlyKHBhdGgsIGZ1bmN0aW9uKG5hbWUpIHsKICAgICAgICByZXR1cm4gbmFtZS5lbmRzV2l0aCgiLm1wNCIpIHx8IGZpbGVzLmlzRGlyKGZpbGVzLmpvaW4ocGF0aCwgbmFtZSkpOwogICAgfSkuc29ydCgpOwogICAgaSA9IGRpYWxvZ3Muc2VsZWN0KHBhdGgsIGEpOwogICAgaWYgKGkgKyAxKSB7CiAgICAgICAgcGF0aCA9IGZpbGVzLmpvaW4ocGF0aCwgYVtpXSk7CiAgICAgICAgaWYgKGZpbGVzLmlzRGlyKHBhdGgpKSB7CiAgICAgICAgICAgIHJldHVybiBsaXN0cGF0aChBcGF0aCwgZmlsZXMuam9pbihCcGF0aCwgYVtpXSkpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmIChkaWFsb2dzLmNvbmZpcm0oIuehruWumuaWh+S7tu+8nyIsIGFbaV0pKSB7CiAgICAgICAgICAgICAgICAvL3ZpZXdGaWxlKHBhdGgpOwogICAgICAgICAgICAgICAgcmV0dXJuIHBhdGg7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbGlzdHBhdGgoQXBhdGgsIEJwYXRoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGFyeSA9IEJwYXRoLnNwbGl0KCIvIik7CiAgICAgICAgaWYgKGFyeS5sZW5ndGggJiYgQnBhdGgubGVuZ3RoKSB7CiAgICAgICAgICAgIGFyeS5wb3AoKTsKICAgICAgICAgICAgcmV0dXJuIGxpc3RwYXRoKEFwYXRoLCBhcnkuam9pbigiLyIpKTsKICAgICAgICB9CiAgICB9Cn07CgoKZnVuY3Rpb24gRGV0YWlscyhBLCByZSkgewogICAgdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKICAgICAgICBjb25zb2xlLnNob3coKTsKICAgIH0pOwogICAgbG9nKHR5cGVvZihBKSk7CiAgICBsb2codHlwZW9mKHJlKSk7CiAgICBpZiAodHlwZW9mKHJlKSA9PSAic3RyaW5nIikgewogICAgICAgIHJlID0gZXZhbCgiLyIgKyByZSArICIvaSIpOwogICAgfTsKICAgIGxvZyhBKTsKICAgIHRyeSB7CiAgICAgICAgLy9BPSBBLnNvcnQoKTsKICAgICAgICBsb2coQS50b1N0cmluZygpKTsKCiAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdG9hc3QoZSkKICAgIH07CiAgICBmb3IgKHZhciBpIGluIEEpIHsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgaWYgKCFyZSB8fCByZS50ZXN0KGkudG9TdHJpbmcoKSkpIHsKICAgICAgICAgICAgICAgIGxvZyh0eXBlb2YoQVtpXSkpOwogICAgICAgICAgICAgICAgbG9nKGkgKyAiXG4iICsgQVtpXS50b1N0cmluZygpKQogICAgICAgICAgICB9OwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgdG9hc3QoZSkKICAgICAgICB9CiAgICB9Owp9Ow=="),
b64("YXV0bygpOwphcHAubGF1bmNoUGFja2FnZSgiY29tLnl5Lmh1YW5qdSIpOwp3aGlsZSAoMSkgewogICB2YXIgYT0gaWQoInR2X215X3Jvb21fZW50cmFuY2UiKS50ZXh0KCLov5vlhaXmiJHnmoTmiL/pl7QiKS5maW5kT25lKCk7CiAgIGNsaWNrKGEucGFyZW50KCkuYm91bmRzKCkuY2VudGVyWCgpLGEucGFyZW50KCkuYm91bmRzKCkuY2VudGVyWSgpKTsKICAgIGlkKCJ0b3BiYXJfcmlnaHRfY2hpbGRfbGF5b3V0IikuZmluZE9uZSgpLmNsaWNrKCk7CiAgIHZhciBiPSBpZCgidHh0X21lbnVfaXRlbV9jb250ZW50IikudGV4dCgi6YCA5Ye65oi/6Ze0IikuZmluZE9uZSgpOwogICBiLnBhcmVudCgpLmNsaWNrKCk7CiAgICBzbGVlcCg0MDApOwogICAgY2xpY2soIumAgOWHuiIpOwogICAgc2xlZXAoNDAwKTsKCn0="),
b64("DQoNCmltcG9ydENsYXNzKGFuZHJvaWQubWVkaWEuVGh1bWJuYWlsVXRpbHMpDQppbXBvcnRDbGFzcyhhbmRyb2lkLmdyYXBoaWNzLkJpdG1hcEZhY3RvcnkpDQppbXBvcnRDbGFzcyhhbmRyb2lkLmdyYXBoaWNzLkJpdG1hcCkNCmltcG9ydENsYXNzKGphdmEuaW8uRmlsZSkNCmltcG9ydENsYXNzKGphdmEuaW8uRmlsZU91dHB1dFN0cmVhbSkNCg0KDQoNCg0KDQovLyBpbXBvcnQgYW5kcm9pZC5jb250ZW50LkNvbnRleHQ7DQovLyBpbXBvcnQgYW5kcm9pZC5ncmFwaGljcy5CaXRtYXA7DQovLyBpbXBvcnQgYW5kcm9pZC5ncmFwaGljcy5CaXRtYXAuQ29uZmlnOw0KLy8gaW1wb3J0IGFuZHJvaWQuZ3JhcGhpY3MuUGFpbnQuU3R5bGU7DQovLyBpbXBvcnQgYW5kcm9pZC5ncmFwaGljcy5DYW52YXM7DQovLyBpbXBvcnQgYW5kcm9pZC5ncmFwaGljcy5Db2xvcjsNCi8vIGltcG9ydCBhbmRyb2lkLmdyYXBoaWNzLlBhaW50Ow0KLy8gaW1wb3J0IGFuZHJvaWQudXRpbC5BdHRyaWJ1dGVTZXQ7DQovLyBpbXBvcnQgYW5kcm9pZC52aWV3LlZpZXc7DQoNCi8vIGltcG9ydCBhbmRyb2lkLmdyYXBoaWNzLkJpdG1hcDsNCi8vIGltcG9ydCBhbmRyb2lkLmdyYXBoaWNzLkJpdG1hcEZhY3Rvcnk7DQovLyBpbXBvcnQgYW5kcm9pZC5zdXBwb3J0LnY3LmFwcC5BcHBDb21wYXRBY3Rpdml0eTsNCi8vIGltcG9ydCBhbmRyb2lkLm9zLkJ1bmRsZTsNCi8vIGltcG9ydCBhbmRyb2lkLndpZGdldC5UZXh0VmlldzsNCi8vIGltcG9ydCBhbmRyb2lkLndpZGdldC5Ub2FzdDsNCg0KLy8gaW1wb3J0IGFuZHJvaWQuY29udGVudC5Db250ZW50UmVzb2x2ZXI7DQovLyBpbXBvcnQgYW5kcm9pZC5jb250ZW50LkludGVudDsNCi8vIGltcG9ydCBhbmRyb2lkLmdyYXBoaWNzLkJpdG1hcDsNCi8vIGltcG9ydCBhbmRyb2lkLmdyYXBoaWNzLkJpdG1hcEZhY3Rvcnk7DQovLyBpbXBvcnQgYW5kcm9pZC5uZXQuVXJpOw0KLy8gaW1wb3J0IGFuZHJvaWQub3MuQnVuZGxlOw0KLy8gaW1wb3J0IGFuZHJvaWQub3MuRW52aXJvbm1lbnQ7DQovLyBpbXBvcnQgYW5kcm9pZC5zdXBwb3J0LnY3LmFwcC5BcHBDb21wYXRBY3Rpdml0eTsNCi8vIGltcG9ydCBhbmRyb2lkLnV0aWwuTG9nOw0KLy8gaW1wb3J0IGFuZHJvaWQudmlldy5WaWV3Ow0KLy8gaW1wb3J0IGFuZHJvaWQud2lkZ2V0LkJ1dHRvbjsNCi8vIGltcG9ydCBhbmRyb2lkLndpZGdldC5JbWFnZVZpZXc7DQoNCi8vIGltcG9ydCBqYXZhLmlvLkZpbGVOb3RGb3VuZEV4Y2VwdGlvbjsNCi8vIGltcG9ydCBqYXZhLmlvLklucHV0U3RyZWFtOw0KLy8gaW1wb3J0IGphdmEuaW8uRmlsZTsNCi8vIGltcG9ydCBqYXZhLmlvLkZpbGVPdXRwdXRTdHJlYW07DQoNCg0KDQoNCg0KZnVuY3Rpb24gZ2V0SW1hZ2VUaHVtYm5haWwoaW1hZ2VQYXRoLCB3aWR0aCwgaGVpZ2h0KSB7DQogICAgb3B0aW9ucyA9IG5ldyBCaXRtYXBGYWN0b3J5Lk9wdGlvbnMoKTsNCiAgICBvcHRpb25zLmluSnVzdERlY29kZUJvdW5kcyA9IHRydWU7IC8v5YWz5LqOaW5KdXN0RGVjb2RlQm91bmRz55qE5L2c55So5bCG5Zyo5LiL5paH5Y+Z6L+wDQogICAgYml0bWFwID0gQml0bWFwRmFjdG9yeS5kZWNvZGVGaWxlKGltYWdlUGF0aCwgb3B0aW9ucyk7DQogICAgaCA9IG9wdGlvbnMub3V0SGVpZ2h0Oy8v6I635Y+W5Zu+54mH6auY5bqmDQogICAgdyA9IG9wdGlvbnMub3V0V2lkdGg7Ly/ojrflj5blm77niYflrr3luqYNCiAgICBzY2FsZVdpZHRoID0gdyAvIHdpZHRoOyAvL+iuoeeul+WuveW6pue8qeaUvuavlA0KICAgIHNjYWxlSGVpZ2h0ID0gaCAvIGhlaWdodDsgLy/orqHnrpfpq5jluqbnvKnmlL7mr5QNCiAgICBzY2FsZSA9IDE7Ly/liJ3lp4vnvKnmlL7mr5QNCiAgICBpZiAoc2NhbGVXaWR0aCA8IHNjYWxlSGVpZ2h0KSB7Ly/pgInmi6nlkIjpgILnmoTnvKnmlL7mr5QNCiAgICAgICAgc2NhbGUgPSBzY2FsZVdpZHRoOw0KICAgIH0gZWxzZSB7DQogICAgICAgIHNjYWxlID0gc2NhbGVIZWlnaHQ7DQogICAgfQ0KICAgIGlmIChzY2FsZSA8PSAwKSB7Ly/liKTmlq3nvKnmlL7mr5TmmK/lkKbnrKblkIjmnaHku7YNCiAgICAgICAgYmUgPSAxOw0KICAgIH0NCiAgICBvcHRpb25zLmluU2FtcGxlU2l6ZSA9IHNjYWxlOw0KICAgIC8vIOmHjeaWsOivu+WFpeWbvueJh++8jOivu+WPlue8qeaUvuWQjueahGJpdG1hcO+8jOazqOaEj+i/measoeimgeaKimluSnVzdERlY29kZUJvdW5kcyDorr7kuLogZmFsc2UNCiAgICBvcHRpb25zLmluSnVzdERlY29kZUJvdW5kcyA9IGZhbHNlOw0KICAgIGJpdG1hcCA9IEJpdG1hcEZhY3RvcnkuZGVjb2RlRmlsZShpbWFnZVBhdGgsIG9wdGlvbnMpOw0KICAgIC8vIOWIqeeUqFRodW1ibmFpbFV0aWxz5p2l5Yib5bu657yp55Wl5Zu+77yM6L+Z6YeM6KaB5oyH5a6a6KaB57yp5pS+5ZOq5LiqQml0bWFw5a+56LGhDQogICAgYml0bWFwID0gVGh1bWJuYWlsVXRpbHMuZXh0cmFjdFRodW1ibmFpbChiaXRtYXAsIHdpZHRoLCBoZWlnaHQsVGh1bWJuYWlsVXRpbHMuT1BUSU9OU19SRUNZQ0xFX0lOUFVUKTsNCiAgICByZXR1cm4gYml0bWFwOw0KfQ0KDQppbWFnZVBhdGg9Ii9zZGNhcmQvNjY2LmpwZyINCnZhciBzcmMgPSBpbWFnZXMucmVhZChpbWFnZVBhdGgpOw0KdmFyIHdpZHRoPTEwDQp2YXIgaGVpZ2h0PTEwDQoNCnJlc3VsdD1nZXRJbWFnZVRodW1ibmFpbChpbWFnZVBhdGgsIHdpZHRoLCBoZWlnaHQpDQpjb25zb2xlLmxvZyhyZXN1bHQpDQoNCmZ1bmN0aW9uIHNhdmVCaXRtYXBUb1NEQ2FyZChiaXRtYXAsIHBhdGgpIHsNCg0KICBmaWxlID0gbmV3IEZpbGUocGF0aCk7DQogIGlmKGZpbGUuZXhpc3RzKCkpIHsNCiAgICAgIGZpbGUuZGVsZXRlKCk7DQogIH0NCiAgdHJ5IHsNCiAgICAgIGZpbGVPdXRwdXRTdHJlYW0gPSBuZXcgRmlsZU91dHB1dFN0cmVhbShmaWxlKTsNCiAgICAgIGJpdG1hcC5jb21wcmVzcyhCaXRtYXAuQ29tcHJlc3NGb3JtYXQuUE5HLCAxMDAsIChmaWxlT3V0cHV0U3RyZWFtKSk7Ly/orr7nva5QTkfnmoTor53vvIzpgI/mmI7ljLrln5/kuI3kvJrlj5jmiJDpu5HoibINCg0KICAgICAgZmlsZU91dHB1dFN0cmVhbS5jbG9zZSgpOw0KICAgICAgbG9nKCItLS0tLS0tLS0tc2F2ZSBzdWNjZXNzLS0tLS0tLS0tLS0tLS0tLS0tLSIpOw0KICB9DQogIGNhdGNoKGUpIHsNCiAgICAgIGNvbnNvbGUubG9nKGUpDQogIH0NCg0KfQ0KDQpzYXZlQml0bWFwVG9TRENhcmQocmVzdWx0LCAiL3NkY2FyZC8xLmpwZyIpDQphcHAudmlld0ZpbGUoIi9zZGNhcmQvMS5qcGciKTsNCg=="),
b64(""),
b64("YXBwLnN0YXJ0QWN0aXZpdHkoewogICAgYWN0aW9uOiAiYW5kcm9pZC5pbnRlbnQuYWN0aW9uLlZJRVciLAogICAgZGF0YToibXFxYXBpOi8vY2FyZC9zaG93X3BzbGNhcmQ/dWluPTE1NDY3NjQ2NDAiLC8vUVHlj7ciLAogICAgcGFja2FnZU5hbWU6ICJjb20udGVuY2VudC5tb2JpbGVxcSIsCn0pOwo="),
b64("InVpIjsKCnVpLmxheW91dCgKICAgIDxmcmFtZSBiZz0iIzAwQkZBNSI+IAo8Y2FudmFzIGlkPSJjYW52YXMiIG1hcmdpbj0iMjBweCAyMHB4IDIwcHggMjBweCIvPgogPC9mcmFtZT4KKTsKCgovKgrms6jmhI/lvZPliY3niYjmnKzkuLrliJ3ku6PjgILmiYDmnInlip/og73lkITkuI3lrozlloTjgIIK5YWz5LqO57yp5pS+5ZKM56e75Yqo5pyJ54K55LiN5aSq5a6M5ZaE44CC5Z2Q5qCH5LiN5aSq57K+5YeG44CC5LiN55+l6YGT5Li65LuA5LmI44CC55+l6YGT55qE5Y+v5Lul5biu5b+Z5pS55LiA5LiL44CCCuWmguaciWJ1Z++8jOivt+WPjemmiOOAguiwouiwou+8gQoKKi8KCgoKCmltcG9ydENsYXNzKGFuZHJvaWQuZ3JhcGhpY3MuUGFpbnQpOwovL2ltcG9ydENsYXNzKGFuZHJvaWQuZ3JhcGhpY3MuQ2FudmFzKTsKaW1wb3J0Q2xhc3MoYW5kcm9pZC5ncmFwaGljcy5CaXRtYXApOwovL2NhbnZhc+aMh+WNlyBodHRwczovL3d3dy5qaWFuc2h1LmNvbS9wL2Y2OTg3MzM3MTc2MwoKCnRocmVhZHMuc3RhcnQoZnVuY3Rpb24oKSB7CiAgICAvL2NvbnNvbGUuc2hvdygpOwp9KTsKCgp2YXIgaW1nID0g5Yqg6L295Zu+54mHKCIvc3RvcmFnZS9lbXVsYXRlZC8wL+W7uuiusC/lm77niYcvaW1nMDQuanBnIik7CgoKCgoKdmFyIHBhaW50ID0gbmV3IFBhaW50OwpwYWludC5zZXRUZXh0QWxpZ24oUGFpbnQuQWxpZ24uQ0VOVEVSKTsgLy/lhpnlrZflt6blj7PkuK3lv4MKcGFpbnQuc2V0U3Ryb2tlV2lkdGgoNSk7IC8v6L6557yY5a695bqmICAKcGFpbnQuc2V0U3R5bGUoUGFpbnQuU3R5bGUuU1RST0tFKTsgLy/nqbrlv4PmoLflvI8gIAoKdmFyIGRhdGEgPSB7CiAgICB0cmFuc2xhdGU6IHsKICAgICAgICB4OiAwLAogICAgICAgIHk6IDAKICAgIH0sIC8v5Z2Q5qCH57O756e75Yqo44CCCiAgICBzY2FsZTogMSwgLy/lnZDmoIfnvKnmlL7jgIIKICAgIHJvdGF0ZTogMCAvL+WdkOagh+aXi+i9rAp9OwoKCi8vdWkuY2FudmFzLmRyYXcoY2FudmFzKTsKdWkuY2FudmFzLm9uKCJkcmF3IiwgZnVuY3Rpb24oY2FudmFzKSB7CiAgICBjYW52YXMuZHJhd0FSR0IoMjU1LCAxMjcsIDEyNywgMTI3KTsKICAgIHZhciB3ID0gY2FudmFzLmdldFdpZHRoKCk7CiAgICB2YXIgaCA9IGNhbnZhcy5nZXRIZWlnaHQoKTsKICAgIHBhaW50LnNldFN0cm9rZVdpZHRoKDUpOyAvL+i+uee8mOWuveW6piAgCgogICAgdmFyIG1hdHJpeCA9IG5ldyBhbmRyb2lkLmdyYXBoaWNzLk1hdHJpeCgpOwogICAgbWF0cml4LnBvc3RSb3RhdGUoZGF0YS5yb3RhdGUpOyAvL+WdkOagh+aXi+i9rAogICAgLy9tYXRyaXgucG9zdFNrZXcoMSwgMCk7CiAgICBtYXRyaXgucG9zdFNjYWxlKGRhdGEuc2NhbGUsIGRhdGEuc2NhbGUpOyAvL+WdkOagh+e8qeaUvuOAggogICAgbWF0cml4LnBvc3RUcmFuc2xhdGUoZGF0YS50cmFuc2xhdGUueCwgZGF0YS50cmFuc2xhdGUueSk7IC8v5Z2Q5qCH56e75YqoCgogICAgcGFpbnQuc2V0QVJHQigyNTUsIDAsIDAsIDApOwogICAgY2FudmFzLmRyYXdJbWFnZShpbWcsIG1hdHJpeCwgcGFpbnQpOyAvLy1pbWcuZ2V0V2lkdGgoKS8yICwgLWltZy5nZXRIZWlnaHQoKS8yCiAgICBwYWludC5zZXRTdHJva2VXaWR0aCgyMCk7IC8v6L6557yY5a695bqmICAKICAgIHBhaW50LnNldEFSR0IoMjU1LCAwLCAwLCAwKTsKICAgIGNhbnZhcy5kcmF3TGluZSgtdywgMCwgMCwgMCwgcGFpbnQpOwogICAgY2FudmFzLmRyYXdMaW5lKDAsIC1oLCAwLCAwLCBwYWludCk7CiAgICBwYWludC5zZXRBUkdCKDI1NSwgMjU1LCAwLCAwKTsKICAgIGNhbnZhcy5kcmF3TGluZSgwLCAwLCB3LCAwLCBwYWludCk7CiAgICBwYWludC5zZXRBUkdCKDI1NSwgMCwgMCwgMjU1KTsKICAgIGNhbnZhcy5kcmF3TGluZSgwLCAwLCAwLCBoLCBwYWludCk7CiAgICBwYWludC5zZXRTdHJva2VXaWR0aCgxKTsKICAgIHBhaW50LnNldENvbG9yKGNvbG9ycy5CTEFDSyk7CiAgICBwYWludC5zZXRTdHlsZShQYWludC5TdHlsZS5GSUxMKTsKICAgIHZhciBzaXplID0gMjA7CiAgICBwYWludC5zZXRUZXh0U2l6ZShzaXplKTsKICAgIGNhbnZhcy5kcmF3VGV4dChEaXNhc3NlbWJseShkYXRhKSwgdyAvIDIsIGggKiAwLjAyICsgMC4zNjUgKiBzaXplLCBwYWludCk7CiAgICAvL2NhbnZhcy5kcmF3VGV4dChEaXNhc3NlbWJseShUb3VjaCksIHcgLyAyLCBoICogMC40ICsgMC4zNjUgKiBzaXplLCBwYWludCk7CgogICAgcGFpbnQuc2V0U3Ryb2tlV2lkdGgoNSk7IC8v6L6557yY5a695bqmICAKICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLlNUUk9LRSk7IC8v56m65b+D5qC35byPICAKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgVG91Y2hQb2ludHMubGVuZ3RoOyBpKyspIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBpZiAoIVRvdWNoUG9pbnRzW2ldKSB7CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICB9OwogICAgICAgICAgICB2YXIgWCA9IFRvdWNoUG9pbnRzW2ldLlgsCiAgICAgICAgICAgICAgICBZID0gVG91Y2hQb2ludHNbaV0uWSwKICAgICAgICAgICAgICAgIHggPSBUb3VjaFBvaW50c1tpXS54LAogICAgICAgICAgICAgICAgeSA9IFRvdWNoUG9pbnRzW2ldLnk7CiAgICAgICAgICAgIGNhbnZhcy5kcmF3Q2lyY2xlKFgsIFksIDIwMCwgcGFpbnQpOyAvL+e7mOWItuWchgogICAgICAgICAgICBjYW52YXMuZHJhd0NpcmNsZShYLCBZLCAxMDAsIHBhaW50KTsgLy/nu5jliLblnIYKICAgICAgICAgICAgY2FudmFzLmRyYXdMaW5lKFgsIFksIHgsIHksIHBhaW50KTsKICAgICAgICAgICAgY2FudmFzLmRyYXdDaXJjbGUoeCwgeSwgMTAwLCBwYWludCk7IC8v57uY5Yi25ZyGICAgCiAgICAgICAgICAgIGlmIChUb3VjaFBvaW50c1tpICsgMV0pIHsKICAgICAgICAgICAgICAgIHZhciB4MSA9IFRvdWNoUG9pbnRzW2kgKyAxXS54LAogICAgICAgICAgICAgICAgICAgIHkxID0gVG91Y2hQb2ludHNbaSArIDFdLnk7CiAgICAgICAgICAgICAgICBjYW52YXMuZHJhd0xpbmUoeCwgeSwgeDEsIHkxLCBwYWludCk7CiAgICAgICAgICAgIH07CiAgICAgICAgfSBjYXRjaCAoZSkge307CiAgICB9OwoKfSk7CgoKdmFyIFRvdWNoID0gbmV3IEFycmF5Owp2YXIgVG91Y2hQb2ludHMgPSBuZXcgQXJyYXk7CnZhciBUb3VjaERhdGEgPSBuZXcgQXJyYXk7Ci8vdmFyIAoKdWkuY2FudmFzLnNldE9uVG91Y2hMaXN0ZW5lcihmdW5jdGlvbih2aWV3LCBldmVudCkgewogICAgdHJ5IHsKICAgICAgICBzd2l0Y2ggKGV2ZW50LmdldEFjdGlvbigpIDw9IDIgPyBldmVudC5nZXRBY3Rpb24oKSA6IE1hdGguYWJzKGV2ZW50LmdldEFjdGlvbigpICUgMiAtIDEpKSB7CiAgICAgICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX0RPV046CiAgICAgICAgICAgICAgICB2YXIgaSA9IGV2ZW50LmdldFBvaW50ZXJJZChNYXRoLmZsb29yKGV2ZW50LmdldEFjdGlvbigpIC8gMjU2KSk7CiAgICAgICAgICAgICAgICB2YXIgaWQgPSBldmVudC5nZXRQb2ludGVySWQoaSk7CiAgICAgICAgICAgICAgICB2YXIgWCA9IGV2ZW50LmdldFgoaSk7CiAgICAgICAgICAgICAgICB2YXIgWSA9IGV2ZW50LmdldFkoaSk7CiAgICAgICAgICAgICAgICAgICAgVG91Y2hQb2ludHNbaWRdID0gewogICAgICAgICAgICAgICAgICAgICAgICBYOiBYLAogICAgICAgICAgICAgICAgICAgICAgICBZOiBZLAogICAgICAgICAgICAgICAgICAgICAgICB4OiBYLAogICAgICAgICAgICAgICAgICAgICAgICB5OiBZCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHZhciBQQyA9IGV2ZW50LmdldFBvaW50ZXJDb3VudCgpOwogICAgICAgICAgICAgICAgaWYgKFBDIDw9IDIpIHsKCiAgICAgICAgICAgICAgICAgICAgVG91Y2hbaWRdID0gewogICAgICAgICAgICAgICAgICAgICAgICBYOiBYIC0gZGF0YS50cmFuc2xhdGUueCwKICAgICAgICAgICAgICAgICAgICAgICAgWTogWSAtIGRhdGEudHJhbnNsYXRlLnkKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIFRvdWNoRGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4OiBkYXRhLnRyYW5zbGF0ZS54LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeTogZGF0YS50cmFuc2xhdGUueQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBzY2FsZTogZGF0YS5zY2FsZSwKICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRlOiBkYXRhLnJvdGF0ZQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX01PVkU6CiAgICAgICAgICAgICAgICB2YXIgUEMgPSBldmVudC5nZXRQb2ludGVyQ291bnQoKTsKICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgUEM7IGkrKykgewogICAgICAgICAgICAgICAgICAgIHZhciBpZCA9IGV2ZW50LmdldFBvaW50ZXJJZChpKTsKICAgICAgICAgICAgICAgICAgICB2YXIgWCA9IGV2ZW50LmdldFgoaSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFkgPSBldmVudC5nZXRZKGkpOwogICAgICAgICAgICAgICAgICAgIFggPSAoMCA8PSBYICYmIFggPCB2aWV3LndpZHRoIC0gMSkgPyBYIDogKDAgPD0gWCA/IHZpZXcud2lkdGggLSAxIDogMCk7CiAgICAgICAgICAgICAgICAgICAgWSA9ICgwIDw9IFkgJiYgWSA8IHZpZXcuaGVpZ2h0IC0gMSkgPyBZIDogKDAgPD0gWSA/IHZpZXcuaGVpZ2h0IC0gMSA6IDApOwogICAgICAgICAgICAgICAgICAgIFRvdWNoUG9pbnRzW2lkXS54ID0gWDsKICAgICAgICAgICAgICAgICAgICBUb3VjaFBvaW50c1tpZF0ueSA9IFk7CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgaWYgKFBDID09IDEpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgaWQgPSBldmVudC5nZXRQb2ludGVySWQoMCk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFggPSBldmVudC5nZXRYKDApOwogICAgICAgICAgICAgICAgICAgIHZhciBZID0gZXZlbnQuZ2V0WSgwKTsKICAgICAgICAgICAgICAgICAgICBkYXRhLnRyYW5zbGF0ZS54ID0gWCAtIFRvdWNoW2lkXS5YOwogICAgICAgICAgICAgICAgICAgIGRhdGEudHJhbnNsYXRlLnkgPSBZIC0gVG91Y2hbaWRdLlk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHZhciBpZCA9IGV2ZW50LmdldFBvaW50ZXJJZCgwKTsKICAgICAgICAgICAgICAgICAgICB2YXIgWCA9IGV2ZW50LmdldFgoMCk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFkgPSBldmVudC5nZXRZKDApOwogICAgICAgICAgICAgICAgICAgIHZhciBpZDEgPSBldmVudC5nZXRQb2ludGVySWQoMSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFgxID0gZXZlbnQuZ2V0WCgxKTsKICAgICAgICAgICAgICAgICAgICB2YXIgWTEgPSBldmVudC5nZXRZKDEpOwoKICAgICAgICAgICAgICAgICAgICB2YXIgWVkgPSB5ZGZ4KFRvdWNoW2lkMV0uWCAtIFRvdWNoW2lkXS5YLCAwLCBUb3VjaFtpZDFdLlkgLSBUb3VjaFtpZF0uWSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFlZMSA9IHlkZngoWDEgLSBYLCAwLCBZMSAtIFkpOwogICAgICAgICAgICAgICAgICAgIHZhciBrWSA9IFlZMS5ZIC0gWVkuWTsgLy/ml4vovazop5LluqbjgIIKCiAgICAgICAgICAgICAgICAgICAgZGF0YS5yb3RhdGUgPSBUb3VjaERhdGEucm90YXRlIC0ga1k7CgogICAgICAgICAgICAgICAgICAgIHZhciBTUyA9IHdlaXlpKFRvdWNoW2lkMV0uWCAtIFRvdWNoW2lkXS5YLCBUb3VjaFtpZDFdLlkgLSBUb3VjaFtpZF0uWSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFNTMSA9IHdlaXlpKFgxIC0gWCwgWTEgLSBZKTsKICAgICAgICAgICAgICAgICAgICB2YXIga1MgPSBTUzEgLyBTUzsgLy/mkq3mlL7mr5TkvovjgIIKCiAgICAgICAgICAgICAgICAgICAgZGF0YS5zY2FsZSA9IFRvdWNoRGF0YS5zY2FsZSAqIGtTOwoKICAgICAgICAgICAgICAgICAgICB2YXIgVFkgPSB5ZGZ4KC1Ub3VjaFtpZF0uWCwgMCwgLVRvdWNoW2lkXS5ZKTsKICAgICAgICAgICAgICAgICAgICB2YXIgWUMgPSBUWS5ZIC0gWVkuWTsKICAgICAgICAgICAgICAgICAgICB2YXIgVFMgPSB3ZWl5aShUb3VjaFtpZF0uWCwgVG91Y2hbaWRdLlkpOwogICAgICAgICAgICAgICAgICAgIHZhciBUWTEgPSBZWTEuWSArIFlDOwogICAgICAgICAgICAgICAgICAgIHZhciBLS0sgPSBrZGZ4KFRZMSwgMCk7CiAgICAgICAgICAgICAgICAgICAgdmFyIFNEID0gZ2V0c2R4eXooS0tLLngsIEtLSy56LCAwLCBUUyAqIGtTKTsKCiAgICAgICAgICAgICAgICAgICAgZGF0YS50cmFuc2xhdGUueCA9IFggKyBTRC54OwogICAgICAgICAgICAgICAgICAgIGRhdGEudHJhbnNsYXRlLnkgPSBZICsgU0QueTsKCgogICAgICAgICAgICAgICAgfTsKCgogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX1VQOgogICAgICAgICAgICAgICAgdmFyIGlkID0gZXZlbnQuZ2V0UG9pbnRlcklkKE1hdGguZmxvb3IoZXZlbnQuZ2V0QWN0aW9uKCkgLyAyNTYpKQogICAgICAgICAgICAgICAgVG91Y2hQb2ludHNbaWRdID0gdW5kZWZpbmVkOwogICAgICAgICAgICAgICAgVG91Y2hbaWRdID0gdW5kZWZpbmVkOwogICAgICAgICAgICAgICAgdmFyIFBDID0gZXZlbnQuZ2V0UG9pbnRlckNvdW50KCk7CgogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBQQzsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGlkMSA9IGV2ZW50LmdldFBvaW50ZXJJZChpKQogICAgICAgICAgICAgICAgICAgIHZhciBYID0gZXZlbnQuZ2V0WChpKTsKICAgICAgICAgICAgICAgICAgICB2YXIgWSA9IGV2ZW50LmdldFkoaSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlkMSAhPSBpZCkgewogICAgICAgICAgICAgICAgICAgICAgICBUb3VjaFtpZDFdID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgWDogWCAtIGRhdGEudHJhbnNsYXRlLngsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBZOiBZIC0gZGF0YS50cmFuc2xhdGUueQogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgbG9nKFBDKTsKCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICB9OwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAvL3RvYXN0TG9nKCJUb3VjaDogIiArIGUpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfTsKfSk7CgpmdW5jdGlvbiBEcmF3R3JpZChjYW52YXMsIHBhaW50LCBzKSB7CiAgICB2YXIgdyA9IGNhbnZhcy5nZXRXaWR0aCgpOwogICAgdmFyIGggPSBjYW52YXMuZ2V0SGVpZ2h0KCk7CiAgICB2YXIgc3ggPSBNYXRoLmZsb29yKHcgLyBzKSwKICAgICAgICBzeSA9IE1hdGguZmxvb3IoaCAvIHMpOwogICAgLy9wYWludC5zZXRBUkdCKDEyNywgNjMsIDYzLCA2Myk7CiAgICBmb3IgKHZhciBpID0gLXN4OyBpIDwgc3g7IGkrKykgewogICAgICAgIGNhbnZhcy5kcmF3TGluZShpICogcywgLWgsIGkgKiBzLCBoLCBwYWludCk7CiAgICB9OwogICAgZm9yICh2YXIgaSA9IC1zeTsgaSA8IHN5OyBpKyspIHsKICAgICAgICBjYW52YXMuZHJhd0xpbmUoLXcsIGkgKiBzLCB3LCBpICogcywgcGFpbnQpOwogICAgfTsKICAgIHZhciB4ID0gKHcgLyAyKSAlIHMsCiAgICAgICAgeSA9IChoIC8gMikgJSBzOwogICAgcmV0dXJuIHsKICAgICAgICB4OiB4LAogICAgICAgIHk6IHksCiAgICAgICAgdzogKHcgLSAyICogeCkgLyBzLAogICAgICAgIGg6IChoIC0gMiAqIHkpIC8gcywKICAgICAgICBzOiBzCiAgICB9Owp9OwoKCgpmdW5jdGlvbiBEZXRhaWxzKEEsIHJlKSB7CiAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnNvbGUuc2hvdygpOwogICAgfSk7CiAgICBsb2codHlwZW9mKEEpKTsKICAgIGxvZyh0eXBlb2YocmUpKTsKICAgIGlmICh0eXBlb2YocmUpID09ICJzdHJpbmciKSB7CiAgICAgICAgcmUgPSBuZXcgUmVnRXhwKHJlLCAiaSIpCiAgICB9OwogICAgbG9nKEEpOwogICAgdHJ5IHsKICAgICAgICAvL0E9IEEuc29ydCgpOwogICAgICAgIGxvZyhBLnRvU3RyaW5nKCkpOwoKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB0b2FzdChlKQogICAgfTsKICAgIGZvciAodmFyIGkgaW4gQSkgewoKICAgICAgICB0cnkgewogICAgICAgICAgICBpZiAoIXJlIHx8IHJlLnRlc3QoaS50b1N0cmluZygpKSkgeyAvLwogICAgICAgICAgICAgICAgbG9nKHR5cGVvZihBW2ldKSk7CiAgICAgICAgICAgICAgICBsb2coaSArICJcbiIgKyBBW2ldLnRvU3RyaW5nKCkpCiAgICAgICAgICAgIH07CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBsb2coIumUmeivryIpCiAgICAgICAgfQogICAgfTsKfTsKCmZ1bmN0aW9uIOWKoOi9veWbvueJhyhBKSB7CiAgICBpZiAoZmlsZXMuaXNGaWxlKEEpKSB7CiAgICAgICAgcmV0dXJuIGltYWdlcy5yZWFkKEEpCiAgICB9OwogICAgdmFyIGRpciA9ICIvc3RvcmFnZS9lbXVsYXRlZC8wL0RDSU0vQ2FtZXJhIjsKICAgIHZhciBqc0ZpbGVzID0gZmlsZXMubGlzdERpcihkaXIsIGZ1bmN0aW9uKG5hbWUpIHsKICAgICAgICByZXR1cm4gKG5hbWUuZW5kc1dpdGgoIi5qcGciKSB8fCBuYW1lLmVuZHNXaXRoKCIucG5nIikpICYmIGZpbGVzLmlzRmlsZShmaWxlcy5qb2luKGRpciwgbmFtZSkpOwogICAgfSk7CiAgICBpZiAoanNGaWxlcy5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gaW1hZ2VzLnJlYWQoZmlsZXMuam9pbihkaXIsIGpzRmlsZXNbanNGaWxlcy5sZW5ndGggLSAxXSkpOwogICAgfSBlbHNlIHsKICAgICAgICB0b2FzdExvZygi5rKh5pyJ5Zu+54mH5Y+v5Lul5p+l55yLIik7CiAgICAgICAgdG9hc3RMb2coIuivt+iHquW3seS/ruaUuei3r+W+hCIpOwogICAgICAgIHRvYXN0TG9nKCLlkI7kvb/nlKgiKTsKICAgICAgICBleGl0KCk7CiAgICB9Owp9OwoKCmZ1bmN0aW9uIHdlaXlpKCkgeyAvL+W5s+aWueWSjOW8gOaWuQogICAgdmFyIG51bSA9IDA7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgICAgIG51bSArPSBhcmd1bWVudHNbaV0gKiBhcmd1bWVudHNbaV07CiAgICB9CiAgICByZXR1cm4gTWF0aC5zcXJ0KG51bSk7Cn07CgoKLy/np7vliqjmlrnlkJEKZnVuY3Rpb24geWRmeChieCwgYnksIGJ6LCB3KSB7CiAgICB2YXIgWSwgUDsKICAgIHZhciBrID0gbmV3IEFycmF5OwogICAgWSA9IDE4MCAqIE1hdGguYXNpbihNYXRoLmFicyhieCkgLyB3ZWl5aShieCwgYnopKSAvIE1hdGguUEk7CiAgICBQID0gLTE4MCAqIE1hdGguYXNpbihieSAvIHdlaXlpKGJ4LCBieSwgYnopKSAvIE1hdGguUEk7CiAgICBpZiAoYnggPiAwICYmIGJ6IDwgMCkgewogICAgICAgIFkgPSAxODAgLSBZCiAgICB9OwogICAgaWYgKGJ4IDwgMCAmJiBieiA8IDApIHsKICAgICAgICBZID0gWSArIDE4MAogICAgfTsKICAgIGlmIChieCA8IDAgJiYgYnogPiAwKSB7CiAgICAgICAgWSA9IDM2MCAtIFkKICAgIH07CiAgICBpZiAoTWF0aC5hYnMoUCkgPT0gOTApIHsKICAgICAgICBZID0gMDsKICAgIH07CiAgICByZXR1cm4gewogICAgICAgIFk6IFksCiAgICAgICAgUDogUAogICAgfTsKfTsKCgovL+eci+eahOaWueWQkQpmdW5jdGlvbiBrZGZ4KFksIFAsIHcpIHsKICAgIGlmIChZID09IHVuZGVmaW5lZCB8fCBQID09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHg6IDAsCiAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgIHo6IDAKICAgICAgICB9OwogICAgfTsKICAgIHZhciB4LCB5LCB6OwogICAgeWEgPSBNYXRoLnNpbihQICogTWF0aC5QSSAvIDE4MCk7CiAgICB5YiA9IE1hdGguY29zKFAgKiBNYXRoLlBJIC8gMTgwKTsKICAgIHkgPSAtMSAqIHlhOwogICAgeGEgPSBNYXRoLnNpbihZICUgMzYwICogTWF0aC5QSSAvIDE4MCk7CiAgICB4ID0geGEgKiB5YjsKICAgIHphID0gTWF0aC5jb3MoWSAlIDM2MCAqIE1hdGguUEkgLyAxODApOwogICAgeiA9IHphICogeWI7CiAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeSwKICAgICAgICB6OiB6CiAgICB9Owp9OwoKCi8v6YCf5bqmCmZ1bmN0aW9uIGdldHNkeHl6KHgsIHksIHosIHMsIHcpIHsKICAgIGlmIChzID09IHVuZGVmaW5lZCB8fCB4ID09IHVuZGVmaW5lZCB8fCB5ID09IHVuZGVmaW5lZCB8fCB6ID09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHg6IDAsCiAgICAgICAgICAgIHk6IDAsCiAgICAgICAgICAgIHo6IDAKICAgICAgICB9OwogICAgfTsKICAgIHZhcgogICAgICAgIGQsIGMgPSBzICogcywKICAgICAgICBzeCwgc3ksIHN6OwogICAgaWYgKHogIT0gMCkgewogICAgICAgIGEgPSB4IC8gejsKICAgICAgICBiID0geSAvIHo7CiAgICAgICAgZCA9IGEgKiBhICsgYiAqIGIgKyAxOwogICAgICAgIHN6ID0geiAvIE1hdGguYWJzKHopICogTWF0aC5zcXJ0KGMgLyBkKTsKICAgICAgICBzeCA9IHN6ICogYTsKICAgICAgICBzeSA9IHN6ICogYjsKICAgIH0gZWxzZSBpZiAoeCAhPSAwKSB7CiAgICAgICAgYSA9IHkgLyB4OwogICAgICAgIGQgPSBhICogYSArIDE7CiAgICAgICAgc3ggPSB4IC8gTWF0aC5hYnMoeCkgKiBNYXRoLnNxcnQoYyAvIGQpOwogICAgICAgIHN5ID0gc3ggKiBhOwogICAgICAgIHN6ID0gejsKICAgIH0gZWxzZSBpZiAoeSAhPSAwKSB7CiAgICAgICAgc3kgPSB5IC8gTWF0aC5hYnMoeSkgKiBzOwogICAgICAgIHN4ID0geDsKICAgICAgICBzeiA9IHo7CiAgICB9IGVsc2UgewogICAgICAgIHN4ID0gMDsKICAgICAgICBzeSA9IDA7CiAgICAgICAgc3ogPSAwOwogICAgfTsKICAgIHJldHVybiB7CiAgICAgICAgeDogc3gsCiAgICAgICAgeTogc3ksCiAgICAgICAgejogc3oKICAgIH07Cn07CgoKZnVuY3Rpb24gRGlzYXNzZW1ibHkoQSkgewogICAgc3dpdGNoICh0eXBlb2YoQSkpIHsKICAgICAgICBjYXNlICJvYmplY3QiOgogICAgICAgICAgICB2YXIgYXJ5ID0gbmV3IEFycmF5OwogICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShBKSkgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBBKSB7CiAgICAgICAgICAgICAgICAgICAgYXJ5LnB1c2goRGlzYXNzZW1ibHkoQVtpXSkpOwogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHJldHVybiAiWyIgKyBhcnkuam9pbigiLCIpICsgIl0iOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBBKSB7CiAgICAgICAgICAgICAgICAgICAgYXJ5LnB1c2goaSArICI6IiArIERpc2Fzc2VtYmx5KEFbaV0pKTsKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICByZXR1cm4gInsiICsgYXJ5LmpvaW4oIiwiKSArICJ9IjsKICAgICAgICAgICAgfTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiZnVuY3Rpb24iOgogICAgICAgICAgICByZXR1cm4gQS50b1N0cmluZygpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJzdHJpbmciOgogICAgICAgICAgICByZXR1cm4gIlwiIiArIEEudG9TdHJpbmcoKSArICJcIiI7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgIm51bWJlciI6CiAgICAgICAgICAgIHJldHVybiBBLnRvU3RyaW5nKCk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgImJvb2xlYW4iOgogICAgICAgICAgICByZXR1cm4gQS50b1N0cmluZygpOwogICAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICByZXR1cm4gU3RyaW5nKEEpOwogICAgfTsKfTsKCgovL2NhbnZhcy50cmFuc2xhdGUoeCx5KTsvL+WdkOagh+ezu+enu+WKqOOAggovL2NhbnZhcy5zY2FsZShzeCxzeSx4LHkpOy8v5Z2Q5qCH57yp5pS+44CCCi8vY2FudmFzLnJvdGF0ZShZLHgseSk7Ly/lnZDmoIfml4vovawKLy9jYW52YXMuc2tldygxLDApOyAgICAgIC8vIOawtOW5s+mUmeWIhwovL2NhbnZhcy5za2V3KDAsMSk7ICAgICAgLy8g5Z6C55u06ZSZ5YiHCi8vc2F2ZSgpOyAgICAgIC8v5L+d5a2Y54q25oCBCi8vLi4uICAgICAgICAgIC8v5YW35L2T5pON5L2cCi8vcmVzdG9yZSgpOyAgIC8v5Zue5rua5Yiw5LmL5YmN55qE54q25oCBCgoKLyoKICAgIHBhaW50LnNldEFSR0IoMjU1LDAsMCwwKTsvL+eZveiJsueUu+eslAogICAgcGFpbnQuc2V0U3R5bGUoUGFpbnQuU3R5bGUuRklMTCk7Ly/nqbrlv4PmoLflvI8gIAogICAgY2FudmFzLmRyYXdDaXJjbGUoNTQwLDU0MCw1MTAsIHBhaW50KTsvL+e7mOWItuWchgoKICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLlNUUk9LRSk7IC8v56m65b+D5qC35byPICAKICAgIHBhaW50LnNldFN0cm9rZVdpZHRoKDUpOyAvL+i+uee8mOWuveW6piAgCiAgICBjYW52YXMuZHJhd0NpcmNsZSg1NDAsIDU0MCwgNTAwLCBwYWludCk7IC8v57uY5Yi25ZyGCiov"),
b64(""),
b64("InVpIjsKdmFyIGg9MTAwOwp2YXIgdHM9IjEwMHB4Igp2YXIgdGV4dD0i5Lyq5LiJ57u05pWI5p6cIjsKdmFyIGNzPTE1NTsKdmFyIG09MjsKCnZhciBzdHI9InVpLmxheW91dCg8ZnJhbWU+PGZyYW1lIG1hcmdpbj0nMXB4Jz4iCmZvcih2YXIgaT0wO2k8aDtpKyspewogICAgc3RyPXN0cisiPHRleHQgdGV4dENvbG9yPSciK2NvbG9yYShpK2NzLG0pKyInbWFyZ2luPSciK2krInB4J3RleHRTaXplPSciK3RzKyIndGV4dD0nIit0ZXh0KyInLz4iOwp9CnN0cj1zdHIrIjx0ZXh0IHRleHRDb2xvcj0nI2FhYWFhYSdtYXJnaW49JyIraSsicHgndGV4dFNpemU9JyIrdHMrIid0ZXh0PSciK3RleHQrIicvPjwvZnJhbWU+PC9mcmFtZT4pOyIKZXZhbChzdHIpOwoKZnVuY3Rpb24gY29sb3JhKGksYyl7CiAgICBpPWkudG9TdHJpbmcoMTYpOwogICAgaWYoaS5sZW5ndGg9PTEpewogICAgICAgIGk9IjAiK2k7CiAgICAgICAgbG9nKCJjIik7CiAgICB9CiAgICBpZihjPT0xKXsKICAgICAgICByZXR1cm4gIiMiK2kraSsiMDAiOwogICAgfWlmKGM9PTIpewogICAgICAgIHJldHVybiAiIzAwIitpK2k7CiAgICB9aWYoYz09Myl7CiAgICAgICAgcmV0dXJuICIjIitpKyIwMCIraTsKICAgIH0KfQoK"),
b64(""),
b64(""),
b64("InVpIjsNCi8vdWnluIPlsYDkuLrkuIDlnZfnlLvluIMNCnZhciBkdyA9IE1hdGgucm91bmQoZGV2aWNlLndpZHRoIC8gMC42MTggPCBkZXZpY2UuaGVpZ2h0ID8gZGV2aWNlLndpZHRoIDogZGV2aWNlLmhlaWdodCAqIDAuNjE4KTsNCnZhciBkaCA9IE1hdGgucm91bmQoZGV2aWNlLmhlaWdodCAqIDAuNjE4IDwgZGV2aWNlLndpZHRoID8gZGV2aWNlLmhlaWdodCA6IGRldmljZS53aWR0aCAvIDAuNjE4KTsNCnVpLmxheW91dCgNCiAgICA8ZnJhbWU+DQogICAgICAgIDxjYW52YXMgaWQ9ImJvYXJkIiB3PSIqIiBoPSIqIi8+DQogICAgPC9mcmFtZT4NCik7DQovKg0KICAgIHBhaW50LnNldEFSR0IoMjU1LDAsMCwwKTsvL+eZveiJsueUu+eslA0KICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLkZJTEwpOy8v56m65b+D5qC35byPICANCiAgICBjYW52YXMuZHJhd0NpcmNsZSg1NDAsNTQwLDUxMCwgcGFpbnQpOy8v57uY5Yi25ZyGDQogICAgKi8NCi8qDQogICAgcGFpbnQuc2V0QVJHQigyNTUsIDI1NSwgMjU1LCAyNTUpOyAvL+eZveiJsueUu+eslA0KICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLlNUUk9LRSk7IC8v56m65b+D5qC35byPICANCiAgICBwYWludC5zZXRTdHJva2VXaWR0aCg1KTsgLy/ovrnnvJjlrr3luqYgIA0KICAgIGNhbnZhcy5kcmF3Q2lyY2xlKDU0MCwgNTQwLCA1MDAsIHBhaW50KTsgLy/nu5jliLblnIYNCiovDQoNCg0KdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsNCiAgICAvL2NvbnNvbGUuc2hvdygpOw0KfSk7DQoNCnZhciByID0gMC4wMjU7DQp2YXIgZGV0YWlsVGV4dCA9ICIiOw0KLy/nlLvnrJQNCnZhciBwYWludCA9IG5ldyBQYWludCgpOw0KLy9wYWludC5zZXRDb2xvcihjb2xvcnMucGFyc2VDb2xvcigiIzAwZmYwMCIpKTsNCi8vcGFpbnQuc2V0U3R5bGUoUGFpbnQuU3R5bGUuRklMTCk7IC8v5a6e5b+D5qC35byPICANCi8vcGFpbnQuc2V0U3R5bGUoUGFpbnQuU3R5bGUuU1RST0tFKTsgLy/nqbrlv4PmoLflvI8gIA0KLy9wYWludC5zZXRTdHJva2VXaWR0aCg1KTsgLy/ovrnnvJjlrr3luqYgIA0KcGFpbnQuc2V0VGV4dEFsaWduKFBhaW50LkFsaWduLkNFTlRFUik7DQovL0RldGFpbHModWkuYm9hcmQsImRyYXciKTsNCnZhciBhcnkgPSBuZXcgQXJyYXk7DQpmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgew0KICAgIHZhciBjb2xvciA9IGNvbG9ycy5hcmdiKDI1NSwgcmFuZG9tKDAsIDI1NSksIHJhbmRvbSgwLCAyNTUpLCByYW5kb20oMCwgMjU1KSk7DQogICAgdmFyIGEgPSBbTWF0aC5yYW5kb20oKSwgTWF0aC5yYW5kb20oKSwgY29sb3IsIGldOw0KICAgIGFyeS5wdXNoKGEpOw0KfTsNCg0KdWkuYm9hcmQub24oImRyYXciLCBmdW5jdGlvbihjYW52YXMpIHsNCiAgICB2YXIgdyA9IGNhbnZhcy5nZXRXaWR0aCgpOw0KICAgIHZhciBoID0gY2FudmFzLmdldEhlaWdodCgpOw0KICAgIHBhaW50LnNldFN0cm9rZVdpZHRoKDUpOyAvL+i+uee8mOWuveW6piAgDQogICAgcGFpbnQuc2V0U3R5bGUoUGFpbnQuU3R5bGUuU1RST0tFKTsgLy/nqbrlv4PmoLflvI8gIA0KICAgIGZvciAodmFyIGkgPSBhcnkubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICAgICAgcGFpbnQuc2V0Q29sb3IoYXJ5W2ldWzJdKTsNCiAgICAgICAgdmFyIHggPSBNYXRoLnJvdW5kKHcgKiBhcnlbaV1bMF0pOw0KICAgICAgICB2YXIgeSA9IE1hdGgucm91bmQoaCAqIGFyeVtpXVsxXSk7DQogICAgICAgIGZvciAodmFyIGEgPSAwOyBhIDwgYXJ5Lmxlbmd0aDsgYSsrKSB7DQogICAgICAgICAgICB2YXIgYXggPSBNYXRoLnJvdW5kKHcgKiBhcnlbYV1bMF0pOyAvL2kgPT0gMCA/IGFyeS5sZW5ndGggLSAxIDogaSAtIDENCiAgICAgICAgICAgIHZhciBheSA9IE1hdGgucm91bmQoaCAqIGFyeVthXVsxXSk7IC8vaSA9PSAwID8gYXJ5Lmxlbmd0aCAtIDEgOiBpIC0gMQ0KICAgICAgICAgICAgY2FudmFzLmRyYXdMaW5lKHgsIHksIGF4LCBheSwgcGFpbnQpOw0KICAgICAgICB9Ow0KICAgIH07DQogICAgZm9yICh2YXIgaSA9IGFyeS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgICAgICB2YXIgeCA9IE1hdGgucm91bmQodyAqIGFyeVtpXVswXSk7DQogICAgICAgIHZhciB5ID0gTWF0aC5yb3VuZChoICogYXJ5W2ldWzFdKTsNCiAgICAgICAgcGFpbnQuc2V0Q29sb3IoYXJ5W2ldWzJdKTsNCiAgICAgICAgY2FudmFzLmRyYXdDaXJjbGUoeCwgeSwgTWF0aC5yb3VuZCh3ZWl5aSh3LCBoKSAqIHIpLCBwYWludCk7IC8v57uY5Yi25ZyGDQogICAgICAgIHZhciBzaXplID0gTWF0aC5yb3VuZCh3ZWl5aSh3LCBoKSAqIHIpICogMS41Ow0KICAgICAgICBwYWludC5zZXRUZXh0U2l6ZShzaXplKTsNCiAgICAgICAgY2FudmFzLmRyYXdUZXh0KGFyeVtpXVszXSwgeCwgeSArIDAuMzY1ICogc2l6ZSwgcGFpbnQpOw0KICAgIH07DQogICAgcGFpbnQuc2V0U3Ryb2tlV2lkdGgoMSk7IC8v6L6557yY5a695bqmICANCiAgICBwYWludC5zZXRDb2xvcihjb2xvcnMuQkxBQ0spOw0KICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLkZJTEwpOyAvL+WunuW/g+agt+W8jyAgDQogICAgdmFyIHNpemUgPSAzMDsNCiAgICBwYWludC5zZXRUZXh0U2l6ZShzaXplKTsNCiAgICBjYW52YXMuZHJhd1RleHQoZGV0YWlsVGV4dCwgdyAvIDIsIGggLyAyICsgMC4zNjUgKiBzaXplLCBwYWludCk7DQp9KTsNCg0KDQp2YXIgaz1uZXcgQXJyYXk7DQp1aS5ib2FyZC5zZXRPblRvdWNoTGlzdGVuZXIoZnVuY3Rpb24odmlldywgZXZlbnQpIHsNCiAgICAgICAgdmFyIHR4dCA9ICIiOw0KICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGV2ZW50LmdldFBvaW50ZXJDb3VudCgpOyBpKyspIHsNCiAgICAgICAgICAgIGlkID0gZXZlbnQuZ2V0UG9pbnRlcklkKGkpOw0KICAgICAgICAgICAgeCA9IE1hdGgucm91bmQoZXZlbnQuZ2V0WChpKSk7DQogICAgICAgICAgICB5ID0gTWF0aC5yb3VuZChldmVudC5nZXRZKGkpKTsNCiAgICAgICAgICAgIHR4dCArPSAoaWQgKyAiLCIgKyB4ICsgIiwiICsgeSArICIgIik7DQogICAgICAgICAgICBzd2l0Y2ggKGV2ZW50LmdldEFjdGlvbigpPD0yP2V2ZW50LmdldEFjdGlvbigpOk1hdGguYWJzKGV2ZW50LmdldEFjdGlvbigpJTItMSkpIHsNCiAgICAgICAgICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9ET1dOOg0KICAgICAgICAgICAgICAgICAgICAvL3ggPSBldmVudC5nZXRSYXdYKCk7DQogICAgICAgICAgICAgICAgICAgIC8veSA9IGV2ZW50LmdldFJhd1koKTsNCiAgICAgICAgICAgICAgICAgICAgdmFyIFh3ID0gZXZlbnQuZ2V0WChpKSAvIHZpZXcud2lkdGg7DQogICAgICAgICAgICAgICAgICAgIHZhciBZaCA9IGV2ZW50LmdldFkoaSkgLyB2aWV3LmhlaWdodDsNCiAgICAgICAgICAgICAgICAgICAga1tpZF0gPSBzaGlmb3UoWHcsIFloLCBhcnksIHIgKiAyKTsNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fTU9WRToNCiAgICAgICAgICAgICAgICAgICAgdmFyIFh3ID0gZXZlbnQuZ2V0WChpKSAvIHZpZXcud2lkdGg7DQogICAgICAgICAgICAgICAgICAgIHZhciBZaCA9IGV2ZW50LmdldFkoaSkgLyB2aWV3LmhlaWdodDsNCiAgICAgICAgICAgICAgICAgICAgWHcgPSAoMCA8IFh3ICYmIFh3IDwgMSkgPyBYdyA6ICgwIDwgWHcgPyAxIDogMCk7DQogICAgICAgICAgICAgICAgICAgIFloID0gKDAgPCBZaCAmJiBZaCA8IDEpID8gWWggOiAoMCA8IFloID8gMSA6IDApOw0KICAgICAgICAgICAgICAgICAgICBpZiAoa1tpZF0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFyeVtrW2lkXVswXV1bMF0gPSBYdyArIGtbaWRdWzFdOw0KICAgICAgICAgICAgICAgICAgICAgICAgYXJ5W2tbaWRdWzBdXVsxXSA9IFloICsga1tpZF1bMl07DQogICAgICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX1VQOg0KICAgICAgICAgICAgICAgICAgICB0eHQgPSAiIjsNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICB9Ow0KICAgICAgICB9Ow0KICAgICAgICBkZXRhaWxUZXh0ID0gdHh0Ow0KICAgIHJldHVybiB0cnVlOw0KfSk7DQoNCmZ1bmN0aW9uIHNoaWZvdSh4LCB5LCBBLCBzKSB7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBBLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIHZhciBhID0gQVtpXVswXSAtIHgsDQogICAgICAgICAgICBiID0gQVtpXVsxXSAtIHk7DQogICAgICAgIGlmIChNYXRoLmFicyh3ZWl5aShhLCBiKSkgPD0gcykgew0KICAgICAgICAgICAgcmV0dXJuIFtpLCBhLCBiXTsNCiAgICAgICAgfTsNCiAgICB9Owp9Ow0KDQoNCg0KDQpmdW5jdGlvbiBEZXRhaWxzKEEsIHJlKSB7DQogICAgdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsNCiAgICAgICAgY29uc29sZS5zaG93KCk7DQogICAgfSk7DQogICAgbG9nKHR5cGVvZihBKSk7DQogICAgbG9nKHR5cGVvZihyZSkpOw0KICAgIGlmICh0eXBlb2YocmUpID09ICJzdHJpbmciKSB7DQogICAgICAgIHJlID0gZXZhbCgiLyIgKyByZSArICIvaSIpOw0KICAgIH07DQogICAgbG9nKEEpOw0KICAgIHRyeSB7DQogICAgICAgIC8vQT0gQS5zb3J0KCk7DQogICAgICAgIGxvZyhBLnRvU3RyaW5nKCkpOw0KDQogICAgfSBjYXRjaCAoZSkgew0KICAgICAgICAvL3RvYXN0KGUpDQogICAgfTsNCiAgICBmb3IgKHZhciBpIGluIEEpIHsNCg0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgaWYgKCFyZSB8fCByZS50ZXN0KGkudG9TdHJpbmcoKSkpIHsNCiAgICAgICAgICAgICAgICBsb2codHlwZW9mKEFbaV0pKTsNCiAgICAgICAgICAgICAgICBsb2coaSArICJcbiIgKyBBW2ldLnRvU3RyaW5nKCkpDQogICAgICAgICAgICB9Ow0KICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgICAvL3RvYXN0KGUpDQogICAgICAgIH0NCiAgICB9Ow0KfTsNCg0KZnVuY3Rpb24gd2VpeWkoKSB7IC8v5bmz5pa55ZKM5byA5pa5DQogICAgdmFyIG51bSA9IDA7DQogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbnVtICs9IGFyZ3VtZW50c1tpXSAqIGFyZ3VtZW50c1tpXTsNCiAgICB9DQogICAgcmV0dXJuIE1hdGguc3FydChudW0pOw0KfTsNCg0KZnVuY3Rpb24gZ2V0X3dlbnppKHdlbnppX3NodWxpYW5nKSB7DQogICAgLy85ZmE2IDRlMDANCiAgICB2YXIgQSA9IHBhcnNlSW50KCI5ZmE2IiwgMTYpOw0KICAgIHZhciBCID0gcGFyc2VJbnQoIjRlMDAiLCAxNik7DQogICAgdmFyIHdlbnppID0gbmV3IFN0cmluZzsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHdlbnppX3NodWxpYW5nOyBpKyspIHsNCiAgICAgICAgdmFyIHppZnUgPSBuZXcgU3RyaW5nOw0KICAgICAgICB6aWZ1ICs9ICJcXHUiOw0KICAgICAgICB2YXIgQyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChBIC0gQikpICsgQjsNCiAgICAgICAgemlmdSArPSBDLnRvU3RyaW5nKDE2KTsNCiAgICAgICAgd2VuemkgKz0gdW5lc2NhcGUoemlmdS5yZXBsYWNlKC9cXHUvZywgIiV1IikpOw0KICAgIH0NCiAgICByZXR1cm4gd2Vuemk7DQp9Ow=="),
b64("InVpIjsNCi8vdWnluIPlsYDkuLrkuIDlnZfnlLvluIMNCnVpLmxheW91dCgNCiAgICA8ZnJhbWU+DQogICAgICAgIDxjYW52YXMgaWQ9ImJvYXJkIiB3PSIqIiBoPSIqIi8+DQogICAgPC9mcmFtZT4NCik7DQovKg0KICAgIHBhaW50LnNldEFSR0IoMjU1LDAsMCwwKTsvL+eZveiJsueUu+eslA0KICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLkZJTEwpOy8v56m65b+D5qC35byPICANCiAgICBjYW52YXMuZHJhd0NpcmNsZSg1NDAsNTQwLDUxMCwgcGFpbnQpOy8v57uY5Yi25ZyGDQogICAgKi8NCi8qDQogICAgcGFpbnQuc2V0QVJHQigyNTUsIDI1NSwgMjU1LCAyNTUpOyAvL+eZveiJsueUu+eslA0KICAgIHBhaW50LnNldFN0eWxlKFBhaW50LlN0eWxlLlNUUk9LRSk7IC8v56m65b+D5qC35byPICANCiAgICBwYWludC5zZXRTdHJva2VXaWR0aCg1KTsgLy/ovrnnvJjlrr3luqYgIA0KICAgIGNhbnZhcy5kcmF3Q2lyY2xlKDU0MCwgNTQwLCA1MDAsIHBhaW50KTsgLy/nu5jliLblnIYNCiovDQoNCg0KICAgIHRocmVhZHMuc3RhcnQoZnVuY3Rpb24oKSB7DQogICAgICAgIC8vY29uc29sZS5zaG93KCk7DQogICAgfSk7DQoNCnZhciByID0gMC4wNDsNCi8v55S756yUDQp2YXIgcGFpbnQgPSBuZXcgUGFpbnQoKTsNCnBhaW50LnNldENvbG9yKGNvbG9ycy5wYXJzZUNvbG9yKCIjMDAwMDAwIikpOw0KcGFpbnQuc2V0U3R5bGUoUGFpbnQuU3R5bGUuRklMTCk7IC8v56m65b+D5qC35byPICANCnBhaW50LnNldFN0cm9rZVdpZHRoKDUpOyAvL+i+uee8mOWuveW6piAgDQovL0RldGFpbHModWkuYm9hcmQsImRyYXciKTsNCnZhciBhcnkgPSBuZXcgQXJyYXk7DQpmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHsNCiAgICB2YXIgUiA9IHJhbmRvbSgwLCAyNTUpLA0KICAgICAgICBHID0gcmFuZG9tKDAsIDI1NSksDQogICAgICAgIEIgPSByYW5kb20oMCwgMjU1KTsNCiAgICB2YXIgY29sb3IgPSBjb2xvcnMuYXJnYigyNTUsIFIsIEcsIEIpOw0KICAgIHZhciBhID0gW01hdGgucmFuZG9tKCksIE1hdGgucmFuZG9tKCksIGNvbG9yXTsNCiAgICBhcnkucHVzaChhKTsNCn07DQoNCnVpLmJvYXJkLm9uKCJkcmF3IiwgZnVuY3Rpb24oY2FudmFzKSB7DQogICAgdmFyIHcgPSBjYW52YXMuZ2V0V2lkdGgoKTsNCiAgICB2YXIgaCA9IGNhbnZhcy5nZXRIZWlnaHQoKTsKICAgIGZvciAodmFyIGkgPSBhcnkubGVuZ3RoLTE7IGkgPj0wIDsgaS0tKSB7DQogICAgICAgIHZhciB4ID0gTWF0aC5yb3VuZCh3ICogYXJ5W2ldWzBdKTsNCiAgICAgICAgdmFyIHkgPSBNYXRoLnJvdW5kKGggKiBhcnlbaV1bMV0pOw0KICAgICAgICB2YXIgYXggPSBNYXRoLnJvdW5kKHcgKiBhcnlbaT09MD9hcnkubGVuZ3RoLTE6aS0xXVswXSk7DQogICAgICAgIHZhciBheSA9IE1hdGgucm91bmQoaCAqIGFyeVtpPT0wP2FyeS5sZW5ndGgtMTppLTFdWzFdKTsNCiAgICAgICAgcGFpbnQuc2V0Q29sb3IoYXJ5W2ldWzJdKTsNCiAgICAgICAgY2FudmFzLmRyYXdDaXJjbGUoeCwgeSwgTWF0aC5yb3VuZCh3ZWl5aSh3LCBoKSAqIHIpLCBwYWludCk7IC8v57uY5Yi25ZyGDQogICAgICAgIGNhbnZhcy5kcmF3TGluZSh4LCB5LCBheCwgYXksIHBhaW50KTsKICAgIH07DQp9KTsNCgp2YXIgazsKdWkuYm9hcmQuc2V0T25Ub3VjaExpc3RlbmVyKGZ1bmN0aW9uKHZpZXcsIGV2ZW50KSB7DQogICAgc3dpdGNoIChldmVudC5nZXRBY3Rpb24oKSkgew0KICAgICAgICBjYXNlIGV2ZW50LkFDVElPTl9ET1dOOg0KICAgICAgICAgICAgLy94ID0gZXZlbnQuZ2V0UmF3WCgpOw0KICAgICAgICAgICAgLy95ID0gZXZlbnQuZ2V0UmF3WSgpOw0KICAgICAgICAgICAgdmFyIFh3ID0gZXZlbnQuZ2V0WCgpIC8gdmlldy53aWR0aDsNCiAgICAgICAgICAgIHZhciBZaCA9IGV2ZW50LmdldFkoKSAvIHZpZXcuaGVpZ2h0Ow0KICAgICAgICAgICAgaz1zaGlmb3UoWHcsWWgsYXJ5LHIqMik7CiAgICAgICAgICAgIC8vY2FudmFzLmRyYXdQb2ludChNYXRoLnJvdW5kKFh3ICogY2FudmFzLmdldFdpZHRoKCkpLCBNYXRoLnJvdW5kKFloICogY2FudmFzLmdldEhlaWdodCgpKSwgcGFpbnQpOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX01PVkU6DQogICAgICAgICAgICAvL3N4ID0gZXZlbnQuZ2V0UmF3WCgpIC0geDsNCiAgICAgICAgICAgIC8vc3kgPSBldmVudC5nZXRSYXdZKCkgLSB5Ow0KICAgICAgICAgICAgdmFyIFh3ID0gZXZlbnQuZ2V0WCgpIC8gdmlldy53aWR0aDsNCiAgICAgICAgICAgIHZhciBZaCA9IGV2ZW50LmdldFkoKSAvIHZpZXcuaGVpZ2h0Ow0KICAgICAgICAgICAgLy9sb2coTWF0aC5yb3VuZChYdyoxMDApLE1hdGgucm91bmQoWWgqMTAwKSk7ICAgICAgICAgICAgICAKICAgICAgICAgICAgaWYoayl7CiAgICAgICAgICAgICAgICBhcnlba1swXV1bMF09WHc7CiAgICAgICAgICAgICAgICBhcnlba1swXV1bMV09WWg7ICAKICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vY2FudmFzLmRyYXdMaW5lKE1hdGgucm91bmQoWHcgKiBjYW52YXMuZ2V0V2lkdGgoKSksIE1hdGgucm91bmQoWWggKiBjYW52YXMuZ2V0SGVpZ2h0KCkpLCBNYXRoLnJvdW5kKGFYdyAqIGNhbnZhcy5nZXRXaWR0aCgpKSwgTWF0aC5yb3VuZChhWWggKiBjYW52YXMuZ2V0SGVpZ2h0KCkpLCBwYWludCk7DQoNCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX1VQOgogICAgICAgIGs9bnVsbDsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgIH07DQogICAgcmV0dXJuIHRydWU7DQp9KTsNCg0KZnVuY3Rpb24gc2hpZm91KHgsIHksIEEsIHMpIHsNCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IEEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgdmFyIGE9QVtpXVswXS14LGI9QVtpXVsxXS15OwogICAgICAgIGlmIChNYXRoLmFicyh3ZWl5aShhLGIpKSA8PSBzKSB7DQogICAgICAgICAgICByZXR1cm4gW2ksYSxiXTsNCiAgICAgICAgfTsNCiAgICB9Ow0KfTsNCg0KDQoNCg0KZnVuY3Rpb24gRGV0YWlscyhBLCByZSkgew0KICAgIHRocmVhZHMuc3RhcnQoZnVuY3Rpb24oKSB7DQogICAgICAgIGNvbnNvbGUuc2hvdygpOw0KICAgIH0pOw0KICAgIGxvZyh0eXBlb2YoQSkpOw0KICAgIGxvZyh0eXBlb2YocmUpKTsNCiAgICBpZiAodHlwZW9mKHJlKSA9PSAic3RyaW5nIikgew0KICAgICAgICByZSA9IGV2YWwoIi8iICsgcmUgKyAiL2kiKTsNCiAgICB9Ow0KICAgIGxvZyhBKTsNCiAgICB0cnkgew0KICAgICAgICAvL0E9IEEuc29ydCgpOw0KICAgICAgICBsb2coQS50b1N0cmluZygpKTsNCg0KICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgICAgLy90b2FzdChlKQ0KICAgIH07DQogICAgZm9yICh2YXIgaSBpbiBBKSB7DQoNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgIGlmICghcmUgfHwgcmUudGVzdChpLnRvU3RyaW5nKCkpKSB7DQogICAgICAgICAgICAgICAgbG9nKHR5cGVvZihBW2ldKSk7DQogICAgICAgICAgICAgICAgbG9nKGkgKyAiXG4iICsgQVtpXS50b1N0cmluZygpKQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSBjYXRjaCAoZSkgew0KICAgICAgICAgICAgLy90b2FzdChlKQ0KICAgICAgICB9DQogICAgfTsNCn07DQoNCmZ1bmN0aW9uIHdlaXlpKCkgeyAvL+W5s+aWueWSjOW8gOaWuQ0KICAgIHZhciBudW0gPSAwOw0KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIG51bSArPSBhcmd1bWVudHNbaV0gKiBhcmd1bWVudHNbaV07DQogICAgfQ0KICAgIHJldHVybiBNYXRoLnNxcnQobnVtKTsNCn07"),
b64("Ly/lv6vmiYvlsI/muLjmiI/lv4PliqjprZTmlrnlv4PliqjprZTmlrkKLy806KGMNOWIlwovL+WPquimgeepuuagvOS4reaciem7hOiJsizlsLHngrnlh7sKCi8vIHNpeHRlZW5Db29yZGluYXRlPVtdCgoKLy8gZmlyc3RQb2ludD1bNTYsODM5XQovLyBmaXJzdFBvaW50UmlnaHQ9WzMxMSw3OTZdCi8vIGZpcnN0UG9pbnREb3duPVs2MywxMDgxXQoKLy8gZGlzdGFuY2VMZWZ0QW5kUmlnaHQ9Zmlyc3RQb2ludFJpZ2h0WzBdLWZpcnN0UG9pbnRbMF0KLy8gZGlzdGFuY2VVcEFuZERvd249Zmlyc3RQb2ludERvd25bMV0tZmlyc3RQb2ludFsxXQoKCi8vIC8vIOeUn+aIkOWFt+S9k+eahDTooYw05YiX5Z2Q5qCH5YC8LOiKgue6puiuoeeul+aXtumXtC4KLy8gZm9yKGxldCBpPTA7aTw0O2krKyl7Ci8vICAgICAgICAgZm9yKGxldCBqPTA7ajw0O2orKyl7Ci8vICAgICAgICAgICAgICAgICBsZXQgeD1maXJzdFBvaW50WzBdK2oqZGlzdGFuY2VMZWZ0QW5kUmlnaHQKLy8gICAgICAgICAgICAgICAgIGxldCB5PWZpcnN0UG9pbnRbMV0raSpkaXN0YW5jZVVwQW5kRG93bgovLyAgICAgICAgICAgICAgICAgc2l4dGVlbkNvb3JkaW5hdGUucHVzaChbeCx5XSkKLy8gICAgICAgICAgICAgfQovLyAgICAgICAgIH0KCi8vIGxvZygic2l4dGVlbkNvb3JkaW5hdGU9XG4iLHNpeHRlZW5Db29yZGluYXRlKQoKYXV0bygpOwovL3NsZWVwKDMwMCkKLy9kZXZpY2Uuc2V0Tm90aWZpY2F0aW9uVm9sdW1lKDEpCi8vc2xlZXAoMzAwKQovL2RldmljZS5zZXRBbGFybVZvbHVtZSgxKQoKCgovL+ivt+axguaIquWbvgppZighcmVxdWVzdFNjcmVlbkNhcHR1cmUoKSl7CiAgICB0b2FzdCgi6K+35rGC5oiq5Zu+5aSx6LSlIik7CiAgICBleGl0KCk7Cn0KCgoKCmxldCBzaXh0ZWVuQ29vcmRpbmF0ZT0KIFsgWyA1NiwgODM5IF0sCiBbIDMxMSwgODM5IF0sCiBbIDU2NiwgODM5IF0sCiBbIDgyMSwgODM5IF0sCiBbIDU2LCAxMDgxIF0sCiBbIDMxMSwgMTA4MSBdLAogWyA1NjYsIDEwODEgXSwKIFsgODIxLCAxMDgxIF0sCiBbIDU2LCAxMzIzIF0sCiBbIDMxMSwgMTMyMyBdLAogWyA1NjYsIDEzMjMgXSwKIFsgODIxLCAxMzIzIF0sCiBbIDU2LCAxNTY1IF0sCiBbIDMxMSwgMTU2NSBdLAogWyA1NjYsIDE1NjUgXSwKIFsgODIxLCAxNTY1IF0gXQoKd2hpbGUoMSl7CiAgICB4aW5Eb25nTW9GYW5nKCk7Cn0KCgpmdW5jdGlvbiB4aW5Eb25nTW9GYW5nKCl7CiAgICBsZXQgaW1nID0gY2FwdHVyZVNjcmVlbigpOwogICAgbGV0IGNvbG9yMj0iI2ZmZmZjMDAwIgogICAgZm9yKGxldCBpPTA7aTwxNjtpKyspewogICAgICAgIGxldCB4PXNpeHRlZW5Db29yZGluYXRlW2ldWzBdCiAgICAgICAgbGV0IHk9c2l4dGVlbkNvb3JkaW5hdGVbaV1bMV0KICAgICAgICAvL+iOt+WPluWcqOeCuSgxMDAsIDEwMCnnmoTpopzoibLlgLwKICAgICAgICBsZXQgY29sb3IgPSBpbWFnZXMucGl4ZWwoaW1nLCB4LCB5KTsKICAgICAgICAvL+aYvuekuuivpeminOiJsuWAvAogICAgICAgIGxldCBjb2xvcjE9Y29sb3JzLnRvU3RyaW5nKGNvbG9yKTsKICAgICAgICBsZXQgcmVzdWx0PWNvbG9ycy5pc1NpbWlsYXIoY29sb3IxLCBjb2xvcjIpCiAgICAgICAgLy8gbG9nKHgseSxjb2xvcjEpCiAgICAgICAgaWYocmVzdWx0KXsKICAgICAgICAgICAgc2xlZXAoMTQ1KTsKICAgICAgICAgICAgcHJlc3MoeCx5LDUpCiAgICAgICAgfQogICAgfQp9CgoKCgoKCgoK"),
b64("Ci8vIOiEmuacrOebrueahDrmiKrlm77mjqfliLblj7AKLy8g6ZyA6KaB5LiK5LiL5bem5Y+zLOmAgOWHuizmiKrlm74KCnJlcXVlc3RTY3JlZW5DYXB0dXJlKCkKCuaOp+WItuWPsCgpOwovL3NsZWVwKDMzMzMzNDMzMykKZnVuY3Rpb24g5o6n5Yi25Y+wKCl7CiAgICB3ID0gZmxvYXR5LndpbmRvdygKICAgICAgICAvL+aCrOa1rueql+iDjOaZr+iJsgogICAgICAgIDxmcmFtZSBpZD0i6IOM5pmvMSIgICB3PSIzMDAiIGg9IjMwMCIgICBncmF2aXR5PSJjZW50ZXIiICBiZz0iI2ZmOTM3MERCIj4KCiAgICAgICAgICAgIDx2ZXJ0aWNhbCBncmF2aXR5PSJjZW50ZXIiID4KICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IumAgOWHuiIgZ3Jhdml0eT0iY2VudGVyIiAgdz0iYXV0byIgdGV4dD0i6YCA5Ye6Ii8+CgoKICAgICAgICAgICAgICAgIDxob3Jpem9udGFsPgogICAgICAgICAgICAgICAgICAgIDx2ZXJ0aWNhbCAgYmc9IiM5OTk5MTkxOSIgZ3Jhdml0eT0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmVhciAgZ3Jhdml0eT0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9Iuenu+WKqDAiICBncmF2aXR5PSJjZW50ZXIiICB0ZXh0PSLlt6bkuIoiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IuS4ijAiICBncmF2aXR5PSJjZW50ZXIiIHRleHQ9IuKGkSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8FFBuZWFyPgogICAgICAgICAgICAgICAgICAgICAgICA8bGluZWFyICBncmF2aXR5PSJjZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0i5bemMCIgIGdyYXZpdHk9ImNlbnRlciIgdGV4dD0i4oaQIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLkuIswIiAgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLihpMiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IuWPszAiICBncmF2aXR5PSJjZW50ZXIiIHRleHQ9IuKGkiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8FFBuZWFyPgogICAgICAgICAgICAgICAgICAgIDwUL3RpY2FsPgogICAgICAgICAgICAgICAgICAgIDx2ZXJ0aWNhbCAgYmc9IiM5OTk5MTkxOSIgZ3Jhdml0eT0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmVhciAgZ3Jhdml0eT0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9Iuenu+WKqDAiICBncmF2aXR5PSJjZW50ZXIiICB0ZXh0PSLlt6bkuIoiICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLkuIowIiAgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLihpEiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPBRQbmVhcj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmVhciAgZ3Jhdml0eT0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9IuW3pjAiICBncmF2aXR5PSJjZW50ZXIiIHRleHQ9IuKGkCIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0i5LiLMCIgIGdyYXZpdHk9ImNlbnRlciIgdGV4dD0i4oaTIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSLlj7MwIiAgZ3Jhdml0eT0iY2VudGVyIiB0ZXh0PSLihpIiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPBRQbmVhcj4KICAgICAgICAgICAgICAgICAgICA8FC90aWNhbD4KCiAgICAgICAgICAgICAgICA8L2hvcml6b250YWw+CgogICAgICAgICAgICAgICAgPHRleHQgZ3Jhdml0eT0iY2VudGVyIiB3PSJhdXRvIj7ljp/kvZzogIU65pSA55m7PC90ZXh0PgogICAgICAgICAgICA8FC90aWNhbD4KCiAgICAgICAgPC9mcmFtZT4KICAgICk7Cn0="),
b64("dmFyIFNjcmlwdE5hbWU9KC9cLyhbXlwvXSspJC8uZXhlYyhlbmdpbmVzLm15RW5naW5lKCkuZ2V0U291cmNlKCkudG9TdHJpbmcoKSkpWzBdOwp2YXIgZXhlY3V0aW9uPWVuZ2luZXMuYWxsKCk7CnZhciBTY3JpcHRzPTA7CmZvcih2YXIgaT0wO2k8ZXhlY3V0aW9uLmxlbmd0aDtpKyspewogICAgaWYoU2NyaXB0TmFtZT09KC9cLyhbXlwvXSspJC8uZXhlYyhleGVjdXRpb25baV0uZ2V0U291cmNlKCkudG9TdHJpbmcoKSkpWzBdKXsKICAgIFNjcmlwdHMrKzsKICAgIGlmKFNjcmlwdHM9PTIpewogICAgdG9hc3QoU2NyaXB0TmFtZSsi5bey5pyJIik7CiAgICBleGl0KCk7CiAgICB9CiAgICB9Cn0KCgoKCnRyeSB7CiAgICBhdXRvKCk7Cn0gY2F0Y2ggKGUpIHsKICAgIHRvYXN0KCLml6Dpmpznoo3mnKrlkK/nlKgiKTsKICAgIGV4aXQoKTsKfTsKCgoKdmFyIHdpbmRvdyA9IGZsb2F0eS53aW5kb3coDQogICAgPGZyYW1lPg0KICAgICAgICA8YnV0dG9uIGlkPSJidXQiIHRleHQ9IuW8gOWniyIgdGV4dFNpemU9IjIwc3AiIGJnPSIjNzcwMDAwMDAiLz4NCiAgICA8L2ZyYW1lPg0KKTsKCgoNCnZhciBBa2cgPSBmYWxzZSwKICAgIHRpbWUgPSAwLA0KICAgIGppID0gMjA7DQp0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCl7DQpzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsNCiAgICBpZiAoQWtnKSB7DQogICAgICAgIHRpbWUrKzsNCiAgICAgICAgaWYgKHRpbWUgPT0gamkpIHsNCiAgICAgICAgICAgIHRpbWUgPSAwOw0KICAgICAgICAgICAgc3dpcGUoMC4yNSpkZXZpY2Uud2lkdGgsIDAuMjUqZGV2aWNlLmhlaWdodCwgMC43NSpkZXZpY2Uud2lkdGgsIDAuNzUqZGV2aWNlLmhlaWdodCwgMTAwMCk7DQogICAgICAgIH0NCiAgICB9DQp9LCA1MCk7DQp9KTsNCnZhciB4LCB5LCBzeCwgc3ksIGR4LCBkeTsKLy/orrDlvZXmjInplK7ooqvmjInkuIvml7bnmoTmgqzmta7nqpfkvY3nva4KdmFyIFgsIFk7Ci8v6K6w5b2V5oyJ6ZSu6KKr5oyJ5LiL55qE5pe26Ze05Lul5L6/5Yik5pat6ZW/5oyJ562J5Yqo5L2cCnZhciBBa2VlcCA9IGZhbHNlLAogICAgeWlkb25nID0gZmFsc2UsCiAgICBUaW1lID0gMDsKCnNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgaWYgKEFrZWVwKSB7CiAgICAgICAgVGltZSsrOwogICAgICAgIGlmICgheWlkb25nICYmIFRpbWUgPiAyMCkgewogICAgICAgICAgICAvL+mdnuenu+WKqOS4lOaMieS4i+aXtumVv+i2hei/hzHnp5LliKTmlq3kuLrplb/mjIkKICAgICAgICAgICAgIAogICAgICAgICAgICB3aW5kb3cuY2xvc2UoKTsKICAgICAgICAgICAgdG9hc3QoIuW3suWBnOatoui/kOihjCIpOwogICAgICAgICAgICBleGl0KCk7CiAgICAgICAgfQogICAgfQp9LCA1MCk7CiBzbGVlcCgxMDApOwpHID0gZnVuY3Rpb24od2luKSB7CiAgICB2YXIgSyA9IDM1LCAvL+aCrOa1rueql+eahOmakOW9oui+ueefqQogICAgICAgIEggPSA2NjsgLy/miYvmnLrpgJrnn6XmoI/nmoTpq5jluqYKICAgIHJldHVybiBbLUssIC1LLCBkZXZpY2Uud2lkdGggLSB3aW4uZ2V0V2lkdGgoKSArIEssIGRldmljZS5oZWlnaHQgLSB3aW4uZ2V0SGVpZ2h0KCkgLSBIICsgS10KfTsKLy8gRyh3aW5kb3cpIOaCrOa1rueql+S9jee9rumZkOWItuiMg+WbtAp3aW5kb3cuYnV0LnNldE9uVG91Y2hMaXN0ZW5lcihmdW5jdGlvbih2aWV3LCBldmVudCkgewogICAgc3dpdGNoIChldmVudC5nZXRBY3Rpb24oKSkgewogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX0RPV046CiAgICAgICAgICAgIHggPSBldmVudC5nZXRSYXdYKCk7CiAgICAgICAgICAgIHkgPSBldmVudC5nZXRSYXdZKCk7CiAgICAgICAgICAgIFggPSB3aW5kb3cuZ2V0WCgpOwogICAgICAgICAgICBZID0gd2luZG93LmdldFkoKTsKICAgICAgICAgICAgQWtlZXAgPSB0cnVlOyAvL+aMieS4iyzlvIDlkK/orqHml7YKICAgICAgICAgICAgLy9jb25zb2xlLmNsZWFyKCk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX01PVkU6CiAgICAgICAgICAgIHN4ID0gZXZlbnQuZ2V0UmF3WCgpIC0geDsKICAgICAgICAgICAgc3kgPSBldmVudC5nZXRSYXdZKCkgLSB5OwogICAgICAgICAgICBpZiAoIXlpZG9uZyAmJiB3ZWl5aShzeCwgc3kpID49IDUwKSB7CiAgICAgICAgICAgICAgICB5aWRvbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgZHggPSAwOwogICAgICAgICAgICAgICAgZHkgPSAwOwogICAgICAgICAgICB9OwogICAgICAgICAgICBpZiAoeWlkb25nKSB7CiAgICAgICAgICAgICAgICB3aW5kb3cuc2V0UG9zaXRpb24oWCArIHN4IC0gZHgsIFkgKyBzeSAtIGR5KTsKICAgICAgICAgICAgfTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fVVA6CiAgICAgICAgICAgIGlmICgheWlkb25nICYmIFRpbWUgPCA3KSB7CiAgICAgICAgICAgICAgICB2YXIgYSA9IHggLSAoWCArIHdpbmRvdy5nZXRXaWR0aCgpIC8gMiksCiAgICAgICAgICAgICAgICAgICAgYiA9IHkgLSAoWSArIHdpbmRvdy5nZXRIZWlnaHQoKSAvIDIpOwogICAgICAgICAgICAgICAgb25DbGljaygpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIEFrZWVwID0gZmFsc2U7CiAgICAgICAgICAgIFRpbWUgPSAwOwogICAgICAgICAgICBpZiAoeWlkb25nKSB7CiAgICAgICAgICAgICAgICB2YXIgZ3ggPSBNYXRoLnJvdW5kKFggKyBzeCAtIGR4KSwKICAgICAgICAgICAgICAgICAgICBneSA9IE1hdGgucm91bmQoWSArIHN5IC0gZHkpOwogICAgICAgICAgICAgICAgdmFyIEEgPSB3aW5kb3dHWFkoZ3gsIGd5LCBHKHdpbmRvdykpOwogICAgICAgICAgICAgICAgd2luZG93LnNldFBvc2l0aW9uKEEueCwgQS55KTsKICAgICAgICAgICAgICAgIHlpZG9uZyA9IGZhbHNlOwogICAgICAgICAgICB9OwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiB0cnVlOwp9KTsKdmFyIEY9Ryh3aW5kb3cpOwp3aW5kb3d5aWRvbmcoRiwgd2luZG93KTsgCndpbmRvd3lpZG9uZyhbRlsyXSxGWzNdLEZbMl0sRlsxXV0sIHdpbmRvdyk7IAp3aW5kb3d5aWRvbmcoW0ZbMl0sRlsxXSxGWzBdLEZbMV1dLCB3aW5kb3cpOwp3aW5kb3d5aWRvbmcoW0ZbMF0sRlsxXSxGWzBdLEZbM11dLCB3aW5kb3cpOwp3aW5kb3d5aWRvbmcoW0ZbMF0sRlszXSxGWzJdLEZbM11dLCB3aW5kb3cpOwp3aW5kb3d5aWRvbmcoW0ZbMl0sRlszXSxGWzJdLChGWzNdLUZbMV0pLzJdLCB3aW5kb3cpOwoKZnVuY3Rpb24gd2VpeWkoKSB7CiAgICB2YXIgbnVtID0gMDsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbnVtICs9IGFyZ3VtZW50c1tpXSAqIGFyZ3VtZW50c1tpXTsKICAgIH0KICAgIHJldHVybiBNYXRoLnJvdW5kKE1hdGguc3FydChudW0pICogMTAwMCkgLyAxMDAwCn0KCmZ1bmN0aW9uIHdpbmRvd3lpZG9uZyhBLCBCKSB7CiAgICB2YXIgc3ggPSBBWzJdIC0gQVswXSwKICAgICAgICBzeSA9IEFbM10gLSBBWzFdOwogICAgdmFyIHNkID0gd2VpeWkoc3gsIHN5KSAvIDUwOwogICAgdmFyIFggPSBzeCAvIHNkLAogICAgICAgIFkgPSBzeSAvIHNkOwogICAgdmFyIHggPSAwLAogICAgICAgIHkgPSAwOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZDsgaSsrKSB7CiAgICAgICAgeCArPSBYOwogICAgICAgIHkgKz0gWTsKICAgICAgICBzbGVlcCg1KTsKICAgICAgICBCLnNldFBvc2l0aW9uKEFbMF0gKyB4LCBBWzFdICsgeSk7CiAgICB9CiAgICBCLnNldFBvc2l0aW9uKEFbMl0sIEFbM10pOwp9CgpmdW5jdGlvbiB3aW5kb3dHWFkoeCwgeSwgaykgewogICAgaWYgKHggPCBrWzBdKSB7CiAgICAgICAgeCA9IGtbMF0KICAgIH07CiAgICBpZiAoa1syXSA8IHgpIHsKICAgICAgICB4ID0ga1syXQogICAgfTsKICAgIGlmICh5IDwga1sxXSkgewogICAgICAgIHkgPSBrWzFdCiAgICB9OwogICAgaWYgKGtbM10gPCB5KSB7CiAgICAgICAgeSA9IGtbM10KICAgIH07CiAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeQogICAgfTsKfQoNCmZ1bmN0aW9uIG9uQ2xpY2soKSB7DQogICAgaWYgKHdpbmRvdy5idXQuZ2V0VGV4dCgpID09ICflvIDlp4snKSB7DQogICAgICAgIHRvYXN0KG5ldyBEYXRlKCkuZ2V0VGltZSgpKTsKICAgICAgICBBa2cgPSB0cnVlOwogICAgICAgIHdpbmRvdy5idXQuc2V0VGV4dCgn5YGc5q2iJyk7DQogICAgfSBlbHNlIHsNCiAgICAgICAgdG9hc3QobmV3IERhdGUoKS5nZXRUaW1lKCkpOwogICAgICAgIEFrZyA9IGZhbHNlOwogICAgICAgIHRpbWU9MDsNCiAgICAgICAgd2luZG93LmJ1dC5zZXRUZXh0KCflvIDlp4snKTsNCiAgICB9DQp9"),
b64("aW1wb3J0Q2xhc3MoImphdmEuaW8uRmlsZU91dHB1dFN0cmVhbSIpOwppbXBvcnRDbGFzcygiamF2YS51dGlsLnppcC5aaXBFbnRyeSIpOwppbXBvcnRDbGFzcygiamF2YS51dGlsLnppcC5aaXBPdXRwdXRTdHJlYW0iKTsKICAgICAgICB2YXIgem9zID0gbmV3IFppcE91dHB1dFN0cmVhbShuZXcgRmlsZU91dHB1dFN0cmVhbSgiL3NkY2FyZC94eHguemlwIikpOwogICAgICAgIHZhciBlbnRyeSA9IG5ldyBaaXBFbnRyeSgiMS50eHQiKTsKICAgICAgICB6b3MucHV0TmV4dEVudHJ5KGVudHJ5KTsKICAgICAgICB6b3Mud3JpdGUoZmlsZXMucmVhZEJ5dGVzKCIvc2RjYXJkLzEudHh0IikpOwogICAgICAgIHpvcy5jbG9zZUVudHJ5KCk7CiAgICAgICAgem9zLmNsb3NlKCk7"),
b64("aW1wb3J0Q2xhc3MoImphdmEuaW8uRmlsZU91dHB1dFN0cmVhbSIpOwppbXBvcnRDbGFzcygiamF2YS51dGlsLnppcC5aaXBFbnRyeSIpOwppbXBvcnRDbGFzcygiamF2YS51dGlsLnppcC5aaXBPdXRwdXRTdHJlYW0iKTsKZnVuY3Rpb24gemlwKGYsIHppcFBhdGgpewogICAgdmFyIHpvcyA9IG5ldyBaaXBPdXRwdXRTdHJlYW0obmV3IEZpbGVPdXRwdXRTdHJlYW0oemlwUGF0aCkpOwogICAgZm9yKHZhciBpID0gMDsgaSA8IGYubGVuZ3RoOyBpKyspewogICAgICAgIHZhciBmaWxlID0gZltpXTsKICAgICAgICB2YXIgZW50cnkgPSBuZXcgWmlwRW50cnkoZmlsZXMuZ2V0TmFtZShmaWxlKSk7CiAgICAgICAgem9zLnB1dE5leHRFbnRyeShlbnRyeSk7CiAgICAgICAgem9zLndyaXRlKGZpbGVzLnJlYWRCeXRlcyhmaWxlKSk7CiAgICAgICAgem9zLmNsb3NlRW50cnkoKTsKICAgIH0KICAgIHpvcy5jbG9zZSgpOwp9CgoKemlwKFsiL3NkY2FyZC8xLnR4dCIsICIvc2RjYXJkLzIudHh0Il0sICIvc2RjYXJkL3h4eC56aXAiKQ=="),
b64(""),
b64("SW50ZW50IHsKICAgIGFjdCA9IGNvbS50ZW5jZW50Lm1vYmlsZXFxLmFjdGlvbi5NQUlOQUNUSVZJVFkgY2F0ID0gW2FuZHJvaWQuaW50ZW50LmNhdGVnb3J5LkRFRkFVTFRdIGZsZyA9IDB4MTQwMDAwNDAgY21wID0gY29tLnRlbmNlbnQubW9iaWxlcXEgLyAuYWN0aXZpdHkuU3BsYXNoQWN0aXZpdHkKfQ=="),
b64("LyrpgJrov4fnmbvlvZVxcemCrueuseiOt+WPllNpZOeggeWPkemCruS7tu+8jHNpZOeggeacieaViOacn+acgOWkp+S4uuS4gOS4quaciO+8jOWPquimgXFx5LiN5Zyo5YW25a6D572R6aG155m75b2VCue8uueCueaYr+imgXFx5a+G56CBKi8KCm1haWwoIjEzNTIxODM3MTdAcXEuY29tIiwgIjE1MjgxNDNsang3MTc2IiwgIjEzNTIxODM3MTdAcXEuY29tIik7Ci8v5Ye95pWw5Y+v5Lul55u05o6l6LCD55So77yM6LSm5Y+35a+G56CB5ZKM6YKu566x5b+F6aG75YaZCgoKZnVuY3Rpb24gbWFpbCjotKblj7csIOWvhueggSwg6YKu566xLCDmoIfpopgsIOWGheWuuSkgewp2YXIganMgPSBlbmdpbmVzLmV4ZWNTY3JpcHQoIiIsICJcInVpXCI7bWFpbDAoXCIiICsg6LSm5Y+3ICsgIlwiLFwiIiArIOWvhueggSArICJcIixcIiIgKyDpgq7nrrEgKyAiXCIsXCIiICsg5qCH6aKYICsgIlwiLFwiIiArIOWGheWuuSArICJcIik7IiArIG1haWwwKTsKZnVuY3Rpb24gbWFpbDAo6LSm5Y+3LCDlr4bnoIEsIOmCrueusSwg5qCH6aKYLCDlhoXlrrkpIHsKCnVpLmxheW91dCgKPHZlcnRpY2FsPgo8d2VidmlldyBpZD0id2VidmlldyIgYWxwaGE9IjAiIGg9IjFweCIvPgo8aG9yaXpvbnRhbCBoPSIqIiBncmF2aXR5PSJjZW50ZXJfaG9yaXpvbnRhbHxjZW50ZXJfdmVydGljYWwiPgo8cHJvZ3Jlc3NiYXIvPgo8dGV4dCB0ZXh0PSLlj5HpgIHkuK3igKYiLz4KPC9ob3Jpem9udGFsPgo8L3ZlcnRpY2FsPgopOwoKc2V0VGltZW91dChmdW5jdGlvbigpewp0b2FzdCgi6L+e5o6l6LaF5pe2Iik7CnVpLmZpbmlzaCgpOwp9LCAzMDAwMCk7Ci8v5qOA5p+l5piv5ZCm6LaF5pe2Cgp2YXIgc3RvcmFnZSA9IHN0b3JhZ2VzLmNyZWF0ZSgiU2lkIik7CnZhciB1aW4gPSBzdG9yYWdlLmdldCgidWluIik7CnZhciBwYXNzd29yZCA9IHN0b3JhZ2UuZ2V0KCJwYXNzd29yZCIpOwppZiAo6LSm5Y+3ID09IHVpbiAmJiDlr4bnoIEgPT0gcGFzc3dvcmQpIHsKdmFyIHNpZCA9IHN0b3JhZ2UuZ2V0KCJzaWQiKTsKaWYgKHNpZCA9PSAidW5kZWZpbmVkIikgc2lkID0gInNpZD3ph43mlrDnmbvpmYYiOwp9IGVsc2UgewpzdG9yYWdlLmNsZWFyKCk7CnN0b3JhZ2UucHV0KCJ1aW4iLCDotKblj7cpOwpzdG9yYWdlLnB1dCgicGFzc3dvcmQiLCDlr4bnoIEpOwp2YXIgc2lkID0gInNpZD3ph43mlrDnmbvpmYYiOwp0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewp1aS5ydW4oKCk9PnsKdWkud2Vidmlldy5sb2FkVXJsKCJodHRwczovL3cubWFpbC5xcS5jb20vY2dpLWJpbi9mdG5FeHNfZmlsZXM/ZnJvbXNpZGViYXI9MSYiK3NpZCsiJnVwPWRvd24mdD1leHNfZnRuX2ZpbGVzJmxpc3Q9MCIpOwp9KTsKZGVzYygi6YCA5Ye6IikuY2xpY2soKTsKanM7CnVpLmZpbmlzaCgpOwp9KTsKfQovL+ivu+WPlnNpZOegge+8jOWIpOaWrei0puWPt+aYr+WQpuaUueWPmAoKdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKbG9nKCJodHRwczovL3cubWFpbC5xcS5jb20vY2dpLWJpbi9tb2JpbGU/IiArIHNpZCArICImdD1waG9uZSNjb21wb3NlIik7CmEoKTsKZnVuY3Rpb24gYSgpIHsKdWkucnVuKCgpID0+IHsKdWkud2Vidmlldy5sb2FkVXJsKCJodHRwczovL3cubWFpbC5xcS5jb20vY2dpLWJpbi9tb2JpbGU/IiArIHNpZCArICImdD1waG9uZSNjb21wb3NlIik7Cn0pOwoKaWYgKGRlc2MoIuaUtuS7tuS6uu+8miIpLmZpbmRPbmUoMjAwMCkpIHsKZGVzYygi5pS25Lu25Lq677yaIikuc2V0VGV4dCjpgq7nrrEpOwpkZXNjKCLor7fovpPlhaXpgq7ku7blhoXlrrkuLi4iKS5zZXRUZXh0KOWGheWuuSk7CmRlc2MoIiIpLnNldFRleHQo5qCH6aKYKTsKZGVzYygi5Y+R6YCBIikuY2xpY2soKTsKfS8v5Y+R6YKu5Lu2CgppZiAoZGVzYygiUVHpgq7nrrHvvIzkvaDog73lj5HnjrDmm7TlpJoiKS5maW5kT25lKDMwMDApKSB7CnRvYXN0KCLlj5HpgIHmiJDlip8iKTsKdWkuZmluaXNoKCk7Cn0gZWxzZSB7CnVpLnJ1bigoKSA9PiB7CnVpLndlYnZpZXcubG9hZFVybCgiaHR0cHM6Ly91aS5wdGxvZ2luMi5xcS5jb20vY2dpLWJpbi9sb2dpbj9zdHlsZT05JmFwcGlkPTUyMjAwNTcwNSZkYWlkPTQmc191cmw9aHR0cHMlM0ElMkYlMkZ3Lm1haWwucXEuY29tJTJGY2dpLWJpbiUyRmxvZ2luJTNGdnQlM0RwYXNzcG9ydCUyNnZtJTNEd3NrJTI2ZGVsZWdhdGVfdXJsJTNEJTI2ZiUzRHhodG1sJTI2dGFyZ2V0JTNEJmhsbl9jc3M9aHR0cCUzQSUyRiUyRm1haWwucXEuY29tJTJGemhfQ04lMkZodG1sZWRpdGlvbiUyRmltYWdlcyUyRmxvZ28lMkZxcW1haWwlMkZxcW1haWxfbG9nb19kZWZhdWx0XzIwMGgucG5nJmxvd19sb2dpbj0xJmhsbl9hdXRvbG9naW49JUU4JUFFJUIwJUU0JUJEJThGJUU3JTk5JUJCJUU1JUJEJTk1JUU3JThBJUI2JUU2JTgwJTgxJnB0X25vX29uZWtleT0xJnVpbj0iICsK6LSm5Y+3KTsKfSk7CmlmIChkZXNjKCLnmbsg5b2VIikuZmluZE9uZSgpKSB7CmRlc2MoIiIpLnRleHQoIiIpLnNldFRleHQoIlxuIik7CnNsZWVwKDIwMCk7CmVuZ2luZXMuZXhlY1NjcmlwdCgiIiwgIlRleHQoXCIiICsg5a+G56CBICsgIlwiKTtLZXlDb2RlKDY2KTsiKTsKLy/nmbvlvZVxcemCrueusQppZiAoZGVzYygi5Lit6L2s56uZICIpLmZpbmRPbmUoNTAwMCkpIHsKZGVzYygi5Lit6L2s56uZICIpLmNsaWNrKCk7CnNpZCA9IGRlc2NTdGFydHNXaXRoKCJyZWFkdGVtcGxhdGU/c2lkPSIpLmZpbmRPbmUoKS5jb250ZW50RGVzY3JpcHRpb247CnNpZCA9IFN0cmluZyhzaWQpLm1hdGNoKCJzaWQ9LnswLDE1MH0iKTsKc3RvcmFnZS5wdXQoInNpZCIsIHNpZCk7Ci8v6I635Y+Wc2lk56CBCn0KfQphKCk7Cn0KfQp9KTsKfQpyZXR1cm4gdHJ1ZTsKfQ=="),
b64("Ly/pgILnlKjkuo7miYvmnLrop6blsY/lnY/kuobvvIznlKjkuIDkuKrmiYvmnLrmjqfliLblj6bkuIDkuKrmiYvmnLrvvIznm7jlvZPkuo7miYvmnLrmjqVvdGfpvKDmoIfmlYjmnpwKLy/lnKjmjqfliLbnq6/loavlhaXooqvmjqfnq69pcOWcsOWdgOWNs+WPr+aOp+WItu+8jOmcgOimgeS4pOS4quaJi+acuuWcqOWQjOS4gOWxgOWfn+e9keWGhQoKIHcwID0gZmxvYXR5LnJhd1dpbmRvdygKICAgICA8ZnJhbWUgaWQ9Iuenu+WKqDExIiBncmF2aXR5PSJjZW50ZXIiPiAKICAgICAgICA8dmVydGljYWw+CiAgICAgICAgICAgIDx0ZXh0IHc9IjE1IiBoPSIxNSIgdGV4dENvbG9yPSJyZWQiIGJnPSIjMDAwMDAwMDAiPuKGljwvdGV4dD4gCiAgICAgICAgICA8L3ZlcnRpY2FsPgogICAgIDwvZnJhbWU+CiApOwogdzAuc2V0VG91Y2hhYmxlKGZhbHNlKTsKIHcwLnNldFBvc2l0aW9uKDEwMCwgMzAwKQogc2xlZXAoMTApCiBpbXBvcnRDbGFzcygnamF2YS5uZXQuSW5ldDRBZGRyZXNzJyk7CiBpbXBvcnRDbGFzcygnamF2YS5uZXQuSW5ldEFkZHJlc3MnKTsKIGltcG9ydENsYXNzKCdqYXZhLm5ldC5OZXR3b3JrSW50ZXJmYWNlJyk7CiBpbXBvcnRDbGFzcygnamF2YS51dGlsLkVudW1lcmF0aW9uJyk7CiBpbXBvcnRDbGFzcygnamF2YS5uZXQuSW5ldDZBZGRyZXNzJyk7CiB2YXIgaG9zdElwID0gbnVsbDsKIHRyeSB7CiAgICAgdmFyIG5pcyA9IE5ldHdvcmtJbnRlcmZhY2UuZ2V0TmV0d29ya0ludGVyZmFjZXMoKTsKICAgICB2YXIgaWEgPSBudWxsOwogICAgIHdoaWxlIChuaXMuaGFzTW9yZUVsZW1lbnRzKCkpIHsKICAgICAgICAgdmFyIG5pID0gbmlzLm5leHRFbGVtZW50KCk7CiAgICAgICAgIHZhciBpYXMgPSBuaS5nZXRJbmV0QWRkcmVzc2VzKCk7CiAgICAgICAgIHdoaWxlIChpYXMuaGFzTW9yZUVsZW1lbnRzKCkpIHsKICAgICAgICAgICAgIGlhID0gaWFzLm5leHRFbGVtZW50KCk7CiAgICAgICAgICAgICBpZiAoaWEgaW5zdGFuY2VvZiBJbmV0NkFkZHJlc3MpIHsKICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgIH0KICAgICAgICAgICAgIHZhciBpcCA9IGlhLmdldEhvc3RBZGRyZXNzKCk7CiAgICAgICAgICAgICBpZiAoISIxMjcuMC4wLjEiLmVxdWFscyhpcCkpIHsKICAgICAgICAgICAgICAgICBob3N0SXAgPSBpYS5nZXRIb3N0QWRkcmVzcygpOwogICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgfQogICAgICAgICB9CiAgICAgfQogfSBjYXRjaCAoZSkgewogICAgIGxvZyhlKTsKIH0KIHRvYXN0TG9nKCLmnKzmnLppcDoiICsgaG9zdElwKTsKIHRvYXN0TG9nKCLmnKzmnLppcDoiICsgaG9zdElwKTsKIHRvYXN0TG9nKCLmnKzmnLppcDoiICsgaG9zdElwKTsKIGltcG9ydENsYXNzKCdqYXZhLmlvLkJ1ZmZlcmVkUmVhZGVyJyk7CiBpbXBvcnRDbGFzcygnamF2YS5pby5JT0V4Y2VwdGlvbicpOwogaW1wb3J0Q2xhc3MoJ2phdmEuaW8uSW5wdXRTdHJlYW0nKTsKIGltcG9ydENsYXNzKCdqYXZhLmlvLklucHV0U3RyZWFtUmVhZGVyJyk7CiBpbXBvcnRDbGFzcygnamF2YS5pby5PdXRwdXRTdHJlYW0nKTsKIGltcG9ydENsYXNzKCdqYXZhLmlvLlByaW50V3JpdGVyJyk7CiBpbXBvcnRDbGFzcygnamF2YS5uZXQuU29ja2V0Jyk7CiBpbXBvcnRDbGFzcygnamF2YS5uZXQuU2VydmVyU29ja2V0Jyk7CiBldmVudHMub24oImV4aXQiLCBmdW5jdGlvbigpIHsKICAgICBsb2coIue7k+adn+i/kOihjCIpOwogICAgIOacjeWKoeWZqOaOpeWPoy5jbG9zZSgpOwogICAgIHRocmVhZC5pbnRlcnJ1cHQoKTsKICAgICBsb2coIue7k+adnyIpCiB9KTsKIHZhciDmnI3liqHlmajmjqXlj6MgPSBuZXcgU2VydmVyU29ja2V0KDg4ODgpOwogYSA9IDAKIHZhciB0aHJlYWQgPSB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgIHdoaWxlICh0cnVlKSB7CiAgICAgICAgIC8vbG9nKGEpCiAgICAgICAgIGErKwogICAgICAgICDmk43kvZwo5pS25Yiw5Zue5aSNKCLmlLbliLAiICsgYSkpCiAgICAgfQogfSk7Cgogc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgIHNsZWVwKDIwMCk7CiB9LCAxMDAwKTsKCiBmdW5jdGlvbiDmlLbliLDlm57lpI0odGV4dCkgewogICAgIHZhciBzb2NrZXQgPSDmnI3liqHlmajmjqXlj6MuYWNjZXB0KCk7CiAgLy8gICBsb2coIuWuouaIt+err+W3sumTvuaOpSIpCiAgICAgdmFyIOi+k+WFpea1gSA9IHNvY2tldC5nZXRJbnB1dFN0cmVhbSgpOwogICAgIHZhciDovpPlhaXmtYHor7vlh7rlmaggPSBuZXcgSW5wdXRTdHJlYW1SZWFkZXIo6L6T5YWl5rWBKTsKICAgICB2YXIg57yT5Yay6K+75Ye65ZmoID0gbmV3IEJ1ZmZlcmVkUmVhZGVyKOi+k+WFpea1geivu+WHuuWZqCk7CiAgICAgdmFyIHRlbXAgPSDnvJPlhrLor7vlh7rlmagucmVhZExpbmUoKTsKICAgLy8gIGxvZygi5pS25Yiw5a6i5oi356uv5L+h5oGv77yaXG4iICsgdGVtcCArICJcblxu5b2T5YmN5a6i5oi356uvaXDkuLrvvJpcbiIgKyBzb2NrZXQuZ2V0SW5ldEFkZHJlc3MoKS5nZXRIb3N0QWRkcmVzcygpKTsKICAgICB2YXIg6L6T5Ye65rWBID0gc29ja2V0LmdldE91dHB1dFN0cmVhbSgpOwogICAgIHZhciBwcmludFdyaXRlciA9IG5ldyBQcmludFdyaXRlcijovpPlh7rmtYEpOwogICAgIHByaW50V3JpdGVyLnByaW50KHRleHQpOwogICAgIHByaW50V3JpdGVyLmZsdXNoKCk7CiAgICAgc29ja2V0LnNodXRkb3duT3V0cHV0KCk7IC8v5YWz6Zet6L6T5Ye65rWBCiAgICAgcmV0dXJuIHRlbXAKICAgICBwcmludFdyaXRlci5jbG9zZSgpOwogICAgIOi+k+WHuua1gS5jbG9zZSgpOwogICAgIOe8k+WGsuivu+WHuuWZqC5jbG9zZSgpOwogICAgIOi+k+WFpea1gS5jbG9zZSgpOwogfQoKCiBmdW5jdGlvbiDmk43kvZwobWwpIHsKICAgICBtbCA9IG1sLnNwbGl0KCLimaUiKQogICAgIHZhciB4ID0gdzAuZ2V0WCgpCiAgICAgdmFyIHkgPSB3MC5nZXRZKCkKICAgICBpZiAobWxbMF0gPT0gIum8oOagh+enu+WKqCIpIHsKICAgICAgICAgeCA9IHggLSAoLW1sWzFdKTsKICAgICAgICAgeSA9IHkgLSAoLW1sWzJdKTsKICAgICAgICAgbGV0IGZ4ID0gY29udGV4dC5nZXRSZXNvdXJjZXMoKS5nZXRDb25maWd1cmF0aW9uKCkub3JpZW50YXRpb247CiAgICAgICAgIGxldCB3ID0gZGV2aWNlLndpZHRoOwogICAgICAgICBsZXQgaCA9IGRldmljZS5oZWlnaHQ7CiAgICAgICAgIGlmIChmeCA9PSAxKSB7CiAgICAgICAgICAgICBpZiAoeCA8IDEpIHggPSAwCiAgICAgICAgICAgICBpZiAoeCA+IHcgLSAxKSB4ID0gdyAtIDEKICAgICAgICAgICAgIGlmICh5IDwgMSkgeSA9IDAKICAgICAgICAgICAgIGlmICh5ID4gaCAtIDEpIHkgPSBoCiAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICBpZiAoeCA8IDEpIHggPSAwCiAgICAgICAgICAgICBpZiAoeCA+IGggLSAxKSB4ID0gaAogICAgICAgICAgICAgaWYgKHkgPCAxKSB5ID0gMAogICAgICAgICAgICAgaWYgKHkgPiB3IC0gMSkgeSA9IHcgLSAxCiAgICAgICAgIH0KICAgICAgICAvLyBsb2coeCwgeSk7CiAgICAgICAgIHVpLnJ1bihmdW5jdGlvbigpIHsKICAgICAgICAgICAgIHcwLnNldFBvc2l0aW9uKHgsIHkpCiAgICAgICAgIH0pOwogICAgIH0gZWxzZSBpZiAobWxbMF0gPT0gIum8oOagh+eCueWHuyIpIHsKICAgICAgICAgY2xpY2soeCwgeSkKICAgICB9IGVsc2UgaWYgKG1sWzBdID09ICLpvKDmoIfplb/mjIkiKSB7CiAgICAgICAgIHByZXNzKHgsIHksIG1sWzFdKQogICAgIH0gZWxzZSBpZiAobWxbMF0gPT0gIua7keWKqCIpIHsKICAgICAgICAgeDEgPSB4IC0gKC1tbFsxXSk7CiAgICAgICAgIHkxID0geSAtICgtbWxbMl0pOwogICAgICAgIC8vIGxvZyh4LCB5LCB4MSwgeTEsIG1sWzNdKQogICAgICAgICB0cnkgewogICAgICAgICAgICAgc3dpcGUoeCwgeSwgeDEsIHkxLCBtbFszXSkKICAgICAgICAgfSBjYXRjaCAoZSkge30KICAgICB9IGVsc2UgaWYgKG1sWzBdID09ICLov5Tlm54iKSB7CiAgICAgICAgIGJhY2soKQogICAgIH0gZWxzZSBpZiAobWxbMF0gPT0gIuS4u+mhtSIpIHsKICAgICAgICAgaG9tZSgpCiAgICAgfSBlbHNlIGlmIChtbFswXSA9PSAi5Lu75YqhIikgewogICAgICAgICByZWNlbnRzKCkKICAgICB9CiB9"),
b64(""),
b64("Y29uc29sZS5zaG93KCkKdmFyIHJhID0gbmV3IFJvb3RBdXRvbWF0b3IoKTsKaWYgKCFyZXF1ZXN0U2NyZWVuQ2FwdHVyZSgpKSB7CiAgICB0b2FzdCgi6K+35rGC5oiq5Zu+5aSx6LSlIik7CiAgICBleGl0KCk7Cn0KdmFyIHcgPSBmbG9hdHkucmF3V2luZG93KAogICAgPGZyYW1lIGdyYXZpdHk9ImNlbnRlciIgYmc9IiM5OWZmMDAwMCIgdz0iMTAiIGg9IjEwIj4KICAgICAgICA8dGV4dCBpZD0idGV4dCI+5oKs5rWu5paH5a2XPC90ZXh0PgogICAgPC9mcmFtZT4KKTsKc2xlZXAoMzAwMCkKbG9nKCLlvIDlp4siKQpjbGljayg1NTMsMTA3OSkKc2xlZXAoNTAwKQrotbfngrkgPSA1NDAKYW54aWEoNTQwLCAxODg4LCAwKQp3aGlsZSAoMSkgewogICAg5pe26Ze0ID0gbmV3IERhdGUoKS5nZXRUaW1lKCkKICAgIHZhciBpbWcgPSBjYXB0dXJlU2NyZWVuKCk7CiAgICB2YXIgcCA9IGZpbmRDb2xvcihpbWcsICIjZmZmMmQ3MWUiLCB7CiAgICAgICAgcmVnaW9uOiBbNDAsIDExMDAsIDEwMDAsIDEwXSwKICAgICAgICB0aHJlc2hvbGQ6IDIwCiAgICB9KTsKICAgIGlmIChwKSB7CiAgICAgICAg55So5pe2ID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgLSDml7bpl7QKICAgICAgICAvLyAgbG9nKOeUqOaXtiwi5om+5Yiw5ZWmOiIgKyBwKTsKICAgICAgICB3LnNldFBvc2l0aW9uKHAueCwgcC55KQogICAgICAgIOe7iOeCuSA9IHAueCArIDUKICAgICAgICAvLyAg57uI54K5Pee7iOeCuS01NDAKICAgICAgICAvL+e7iOeCuT3nu4jngrkvMgogICAgICAgIC8vIOe7iOeCuT3nu4jngrkrNTQwCiAgICAgICAg5qyh5pWwID0gTWF0aC5hYnMo57uI54K5IC0g6LW354K5KSAvIDEKICAgICAgICBsb2co6LW354K5LCDnu4jngrksIOasoeaVsCkKICAgICAgICAvLyAgc3dpcGUo6LW354K5LDE4NzAs57uI54K5LDE4NzAsMjAwKQogICAgICAgIOmaj+acuuaVsCA9IHJhbmRvbSgxNzMyLCAxODAwKQogICAgICAgIOWfuuaVsD0wLjE1CiAgICAgICAgZm9yIChsZXQgYSA9IDA7IGEgPCDmrKHmlbA7IGErKykgewogICAgICAgICAgICBpZiAo57uI54K5ID4g6LW354K5KSB7CiAgICAgICAgICAgICAgICB5aWRvbmco6LW354K5ICsgMSAqIGEtKGEq5Z+65pWwKSwg6ZqP5py65pWwLCAwKQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgeWlkb25nKOi1t+eCuSAtIDEqIGErKGEq5Z+65pWwKSwg6ZqP5py65pWwLCAwKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIOi1t+eCuSA9IOe7iOeCuQogICAgICAgIC8vICBwcmVzcyhwLngscC55KzI4MCtyYW5kb20oNSw2MCkscmFuZG9tKDUwMCw4MDApKQogICAgICAgIHNsZWVwKDIwMCkKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gdG9hc3QoIuayoeaJvuWIsCIpOwogICAgfQogICBpZiggaW1hZ2VzLmRldGVjdHNDb2xvcihpbWcsICIjZmZmZjY0NTgiLDM4MSwxNjE2LCB0aHJlc2hvbGQgPSAxNiwgYWxnb3JpdGhtID0gImRpZmYiKSl7CiAgICAgICB0YW5xaSgwKQogICAgICAgc2xlZXAoMjAwKQogICAgICAgdG9hc3RMb2coIua4uOaIj+aMguS6hiIpCiAgICAgICBleGl0KCkKICAgICAgIH0KfQoKZnVuY3Rpb24gYW54aWEoeCwgeSwgaWQpIHsKICAgIHZhciBzanMgPSByYW5kb20oOTk5OTksIDEwMDAwKQogICAgcmEuc2VuZEV2ZW50KDMsIDQ3LCBpZCk7IAogICAgcmEuc2VuZEV2ZW50KDMsIDU3LCBzanMpOyAKICAgIHJhLnNlbmRFdmVudCgxLCAzMzAsIDEpOwogICAgcmEuc2VuZEV2ZW50KDEsIDMyNSwgMSk7CiAgICByYS50b3VjaFgoeCk7CiAgICByYS50b3VjaFkoeSk7CiAgICByYS5zZW5kRXZlbnQoMywgNDgsIDUpOyAKICAgIHJhLnNlbmRFdmVudCgzLCA0OSwgNSk7IAogICAgcmEuc2VuZFN5bmMoKTsgCn0KCmZ1bmN0aW9uIHlpZG9uZyh4LCB5LCBpZCkgewogICAgc2pzID0gcmFuZG9tKDYsIDMpCiAgICBzanMxID0gcmFuZG9tKDYsIDYpCiAgICByYS5zZW5kRXZlbnQoMywgNDcsIGlkKTsgCiAgICByYS50b3VjaFgoeCk7CiAgICByYS50b3VjaFkoeSk7CiAgICByYS5zZW5kRXZlbnQoMywgNDgsIHNqcyk7IAogICAgcmEuc2VuZEV2ZW50KDMsIDQ5LCBzanMxKTsgCiAgICByYS5zZW5kU3luYygpOyAKfQoKZnVuY3Rpb24gdGFucWkoaWQpIHsKICAgIHJhLnNlbmRFdmVudCgzLCA0NywgaWQpOyAKICAgIHJhLnNlbmRFdmVudCgzLCA1NywgLTEpOyAKICAgIC8vIHJhLnNlbmRFdmVudCgxLCAzMzAsIDApOyAKICAgIC8vIHJhLnNlbmRFdmVudCgxLCAzMjUsIDApOwogICAgcmEuc2VuZFN5bmMoKTsKfQ=="),
b64("CmFwcC5zdGFydEFjdGl2aXR5KHsKICAgICAgICBhY3Rpb246ICJhbmRyb2lkLmludGVudC5hY3Rpb24uVklFVyIsCiAgICAgICAgZGF0YTogIm1xcTovL2ltL2NoYXQ/Y2hhdF90eXBlPXdwYSZ2ZXJzaW9uPTEmc3JjX3R5cGU9d2ViJnVpbj1RUeWPtyIsCiAgICAvLyAgICBwYWNrYWdlTmFtZTogImNvbS50ZW5jZW50Lm1vYmlsZXFxIiwKICAgIH0pOy8v5YqgUVEKICAgIA=="),
b64(""),
b64(""),
b64("Ci8vamF2YeaVsOe7hOWIm+W7ugp2YXIgSiA9IHJlcXVpcmUoIi4vSue+pOS4uy5qcyIpOwp2YXIgYXJyID0gSi5hcnJheSgiaW50IiwgMik7CmFyclswXSA9IDE7CmxvZyhhcnIpOwoKCi8v6L+Z5qC35piv5aSa57u05pWw57uEOwovL3ZhciBhcnIgPSBKLmFycmF5KCJpbnQiLCAyLCAzKTs="),
b64("KGZ1bmN0aW9uKCkgew0KDQogICAgZnVuY3Rpb24gdHlwZVRvQ2xhc3ModHlwZSkgew0KICAgICAgICBpZiAodHlwZW9mKHR5cGUpICE9ICdzdHJpbmcnKSB7DQogICAgICAgICAgICByZXR1cm4gdHlwZTsNCiAgICAgICAgfQ0KICAgICAgICB2YXIgdHlwZXMgPSB7DQogICAgICAgICAgICAiaW50IjogIkludGVnZXIiLA0KICAgICAgICAgICAgImxvbmciOiAiTG9uZyIsDQogICAgICAgICAgICAic3RyaW5nIjogIlN0cmluZyIsDQogICAgICAgICAgICAiZG91YmxlIjogIkRvdWJsZSIsDQogICAgICAgICAgICAiY2hhciI6ICJDaGFyYWN0ZXIiLA0KICAgICAgICAgICAgImJ5dGUiOiAiQnl0ZSIsDQogICAgICAgICAgICAiZmxvYXQiOiAiRmxvYXQiDQogICAgICAgIH07DQogICAgICAgIGlmICh0eXBlc1t0eXBlXSkgew0KICAgICAgICAgICAgcmV0dXJuIFBhY2thZ2VzWyJqYXZhLmxhbmcuIiArIHR5cGVzW3R5cGVdXS5UWVBFOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBQYWNrYWdlc1t0eXBlXTsNCiAgICB9DQoNCiAgICBmdW5jdGlvbiBhcnJheSh0eXBlKSB7DQogICAgICAgIHZhciBjbGF6eiA9IHR5cGVUb0NsYXNzKHR5cGUpOw0KICAgICAgICB2YXIgYXJncyA9IGFyZ3VtZW50czsNCiAgICAgICAgYXJnc1swXSA9IGNsYXp6Ow0KICAgICAgICByZXR1cm4gamF2YS5sYW5nLnJlZmxlY3QuQXJyYXkubmV3SW5zdGFuY2UuYXBwbHkobnVsbCwgYXJncyk7DQogICAgfQ0KDQogICAgdmFyIF9KID0gew0KICAgICAgICAiYXJyYXkiOiBhcnJheQ0KICAgIH07DQogICAgaWYgKHR5cGVvZihtb2R1bGUpICE9ICd1bmRlZmluZWQnKSB7DQogICAgICAgIG1vZHVsZS5leHBvcnRzID0gX0o7DQogICAgfSBlbHNlIHsNCiAgICAgICAgSiA9IF9KOw0KICAgIH0NCg0KfSkoKTsNCg=="),
b64(""),
b64("CmlmKGRpYWxvZ3MuY29uZmlybSgi5piv5ZCm5YiG5Lqr77yfIikpewphcHAuc3RhcnRBY3Rpdml0eSh7CiAgICBhY3Rpb246ICJhbmRyb2lkLmludGVudC5hY3Rpb24uU0VORCIsCiAgICB0eXBlOiAidGV4dC8qIiwKICAgIGV4dHJhczogewogICAgICAiYW5kcm9pZC5pbnRlbnQuZXh0cmEuVEVYVCI6IGdldENsaXAoKQogICAgfSwKICAgIHBhY2thZ2VOYW1lOiAiY29tLnRlbmNlbnQubW9iaWxlcXEiLAogICAgY2xhc3NOYW1lOiAiY29tLnRlbmNlbnQubW9iaWxlcXEuYWN0aXZpdHkuSnVtcEFjdGl2aXR5Igp9KTsKfTsKCmlkKCJsaXN0VmlldzEiKS5maW5kT25lKCkuc2Nyb2xsRm9yd2FyZCgpCgoKCg=="),
b64("aW1wb3J0UGFja2FnZShhbmRyb2lkLnNwZWVjaC50dHMpOwppbXBvcnRDbGFzcyhqYXZhLnV0aWwuTG9jYWxlKTsKCmF1dG8oKTsKCnZhciB0dHMgPSBuZXcgVGV4dFRvU3BlZWNoKGNvbnRleHQsIGZ1bmN0aW9uKHN0YXR1cyl7CiAgICBpZihzdGF0dXMgIT0gdHRzLlNVQ0NFU1MpewogICAgICAgIHRvYXN0KCLliJ3lp4vljJZUVFPor4bliKs6ICIgKyBzdGF0dXMpOwogICAgICAgIGV4aXQoKTsKICAgIH0KICAgIHZhciByID0gdHRzLnNldExhbmd1YWdlKExvY2FsZS5DSElOQSk7CiAgICBpZihyIDwgMCl7CiAgICAgICAgdG9hc3QoIuS4jeaUr+aMgeivpeivreiogDogIiArIHIpOwogICAgICAgIGV4aXQoKTsKICAgIH0KICAgIHRvYXN0KCJUVFPliJ3lp4vljJbmiJDlip8iKTsKfSk7CnR0cy5zZXRPblV0dGVyYW5jZVByb2dyZXNzTGlzdGVuZXIobmV3IFV0dGVyYW5jZVByb2dyZXNzTGlzdGVuZXIoewogICAgb25Eb25lOiBmdW5jdGlvbihpZCl7CiAgICAgICAgc3RvcFFRVm9pY2VSZWNvcmQoKTsKICAgICAgICB2b2ljZUNvbnZlcnRpbmcgPSBmYWxzZTsKICAgIH0KfSkpOwoKZnVuY3Rpb24gdGV4dFRvUVFWb2ljZSh0ZXh0KXsKICAgIHN0YXJ0UVFWb2ljZVJlY29yZCgpOwogICAgc2xlZXAoMTAwMCk7CiAgICBzcGVhayh0ZXh0KTsKICAgdm9pY2VDb252ZXJ0aW5nID0gZmFsc2U7Cn0KCmZ1bmN0aW9uIHN0YXJ0UVFWb2ljZVJlY29yZCgpewogICAgaWYoIWRlc2MoIuW8gOWni+W9lemfsyIpLmV4aXN0cygpKXsKICAgICAgLy8gIGNsYXNzTmFtZSgiSW1hZ2VWaWV3IikuY2hlY2tlZChmYWxzZSkuY2xpY2thYmxlKHRydWUpLmRlcHRoKDkpLmZpbmRPbmUoKS5jbGljaygpOwogICAgICAgIHNsZWVwKDIwMCk7ICAgIAogICAgICAgIGNsaWNrKCLlvZXpn7MiKTsKICAgIH0KICAgIHNsZWVwKDIwMCk7CiAgICBkZXNjKCLlvIDlp4vlvZXpn7MiKS5maW5kKCkuY2xpY2soKQp9CgpmdW5jdGlvbiBzdG9wUVFWb2ljZVJlY29yZCgpewogICAgZGVzYygi5YGc5q2i5b2V6Z+zIikuZmluZCgpLmNsaWNrKCk7CiAgICBzbGVlcCgyMDApOwogICAgaWQoImxpc3Rlbl9wYW5lbF9zZW5kX3R2IikuZmluZCgpLmNsaWNrKCk7Cn0KCgpmdW5jdGlvbiBzcGVhayh0ZXh0KXsKICAgIHR0cy5zcGVhayh0ZXh0LCB0dHMuUVVFVUVfQURELCBudWxsKTsKfQoKZXZlbnRzLm9uKCJleGl0IiwgZnVuY3Rpb24oKXsKICAgIGlmKHR0cyl7CiAgICAgICAgdHRzLnNodXRkb3duKCk7CiAgICAgICAgdHRzID0gbnVsbDsKICAgIH0KfSk7CgoKdmFyIHN0b3JhZ2UgPSBzdG9yYWdlcy5jcmVhdGUoInN0YXJkdXN0LnR0cyIpOwp2YXIgUVEgPSBkaWFsb2dzLnJhd0lucHV0KCLovpPlhaXlvZPliY3nmbvpmYZRUeWPtyIsIHN0b3JhZ2UuZ2V0KCJRUSIsICIxMzUyMTgzNzE3IikpOwpzdG9yYWdlLnB1dCgiUVEiLCBRUSk7Cgp2YXIgd2luZG93ID0gZmxvYXR5LndpbmRvdygKICAgIDxmcmFtZT4KICAgICAgICA8bGluZWFyPgogICAgICAgICAgICA8YnV0dG9uIGlkPSJhY3Rpb24iIHRleHQ9IlRUUyIgdz0iNDAiIGg9IjQwIiBjb2xvcj0iI2ZmZmZmZiIgYmc9IiM2NjAwMDAwMCIgLz4KICAgICAgICA8L2xpbmVhcj4KICAgIDwvZnJhbWU+Cik7Cgp2YXIgdm9pY2VDb252ZXJ0aW5nID0gbnVsbDsKCi8v6K6w5b2V5oyJ6ZSu6KKr5oyJ5LiL5pe255qE6Kem5pG45Z2Q5qCHCnZhciB4ID0gMCwgeSA9IDA7Ci8v6K6w5b2V5oyJ6ZSu6KKr5oyJ5LiL5pe255qE5oKs5rWu56qX5L2N572uCnZhciB3aW5kb3dYLCB3aW5kb3dZOwovL+iusOW9leaMiemUruiiq+aMieS4i+eahOaXtumXtOS7peS+v+WIpOaWremVv+aMieetieWKqOS9nAp2YXIgZG93blRpbWU7CndpbmRvdy5hY3Rpb24uc2V0T25Ub3VjaExpc3RlbmVyKGZ1bmN0aW9uICh2aWV3LCBldmVudCkgewogICAgc3dpdGNoIChldmVudC5nZXRBY3Rpb24oKSkgewogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX0RPV046CiAgICAgICAgICAgIHggPSBldmVudC5nZXRSYXdYKCk7CiAgICAgICAgICAgIHkgPSBldmVudC5nZXRSYXdZKCk7CiAgICAgICAgICAgIHdpbmRvd1ggPSB3aW5kb3cuZ2V0WCgpOwogICAgICAgICAgICB3aW5kb3dZID0gd2luZG93LmdldFkoKTsKICAgICAgICAgICAgZG93blRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fTU9WRToKICAgICAgICAgICAgLy/np7vliqjmiYvmjIfml7bosIPmlbTmgqzmta7nqpfkvY3nva4KICAgICAgICAgICAgd2luZG93LnNldFBvc2l0aW9uKHdpbmRvd1ggKyAoZXZlbnQuZ2V0UmF3WCgpIC0geCksCiAgICAgICAgICAgICAgICB3aW5kb3dZICsgKGV2ZW50LmdldFJhd1koKSAtIHkpKTsKICAgICAgICAgICAgLy/lpoLmnpzmjInkuIvnmoTml7bpl7TotoXov4cxLjXnp5LliKTmlq3kuLrplb/mjInvvIzpgIDlh7rohJrmnKwKICAgICAgICAgICAgaWYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gZG93blRpbWUgPiAxNTAwKSB7CiAgICAgICAgICAgICAgICBleGl0KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fVVA6CiAgICAgICAgICAgIC8v5omL5oyH5by56LW35pe25aaC5p6c5YGP56e75b6I5bCP5YiZ5Yik5pat5Li654K55Ye7CiAgICAgICAgICAgIGlmIChNYXRoLmFicyhldmVudC5nZXRSYXdZKCkgLSB5KSA8IDUgJiYgTWF0aC5hYnMoZXZlbnQuZ2V0UmF3WCgpIC0geCkgPCA1KSB7CiAgICAgICAgICAgICAgICBvbkNsaWNrKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKfSk7Cgp2YXIgdGhyZWFkID0gdGhyZWFkcy5jdXJyZW50VGhyZWFkKCk7CgpmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgbG9nKCJvbkNsaWNrIik7CiAgICBpZiAoY3VycmVudEFjdGl2aXR5KCkgPT0gImNvbS50ZW5jZW50Lm1vYmlsZXFxLmFjdGl2aXR5LlNwbGFzaEFjdGl2aXR5IikgewogICAgICAgIHRocmVhZC5zZXRUaW1lb3V0KHFxTWVzc2FnZVRvVm9pY2UsIDApOwogICAgfSBlbHNlIHsKICAgICAgICBhbGVydCgi6K+35omT5byAUVHogYrlpKnnqpflj6MiKQogICAgfQp9CgpmdW5jdGlvbiBxcU1lc3NhZ2VUb1ZvaWNlKCl7CiAgICBpZih2b2ljZUNvbnZlcnRpbmcpewogICAgICAgcmV0dXJuOwogICAgfQogICAgdm9pY2VDb252ZXJ0aW5nID0gdHJ1ZTsKICAgIHZhciBpbnB1dCA9IGlkKCJpbnB1dCIpLmNsYXNzTmFtZSgiRWRpdFRleHQiKS5maW5kT25lKCk7CiAgICBsb2coIuW8gOWni+i9rOaNojogIiwgaW5wdXQudGV4dCgpKTsKICAgIHRleHRUb1FRVm9pY2UoaW5wdXQudGV4dCgpKTsKICAgIGlucHV0LnNldFRleHQoIiIpOwp9CgpzZXRJbnRlcnZhbCgoKT0+e30sIDEwMDApOw=="),
b64("LyoqCiAqIFFR6IGK5aSp5paH5a2X6L2s6K+t6Z+z5Y+R6YCBCiAqLwp2YXIgUVEgPSBkaWFsb2dzLnJhd0lucHV0KCLovpPlhaXlvZPliY3nmbvpmYZRUeWPtyIsICIxMzUyMTgzNzE3Iik7Cgp2YXIgd2luZG93ID0gZmxvYXR5LndpbmRvdygKICAgIDxmcmFtZT48bGluZWFyPgogICAgICAgIDxidXR0b24gaWQ9ImFjdGlvbiIgdGV4dD0i6L+Q6KGMIiB3PSI0MCIgaD0iNDAiIGNvbG9yPSIjZmZmZmZmIiBiZz0iIzY2MDAwMDAwIiAvPgogICAgPC9saW5lYXI+IDwvZnJhbWU+Cik7Cgp2YXIgZXhlY3V0aW9uID0gbnVsbDsKCi8v6K6w5b2V5oyJ6ZSu6KKr5oyJ5LiL5pe255qE6Kem5pG45Z2Q5qCHCnZhciB4ID0gMCwgeSA9IDA7Ci8v6K6w5b2V5oyJ6ZSu6KKr5oyJ5LiL5pe255qE5oKs5rWu56qX5L2N572uCnZhciB3aW5kb3dYLCB3aW5kb3dZOwovL+iusOW9leaMiemUruiiq+aMieS4i+eahOaXtumXtOS7peS+v+WIpOaWremVv+aMieetieWKqOS9nAp2YXIgZG93blRpbWU7CndpbmRvdy5hY3Rpb24uc2V0T25Ub3VjaExpc3RlbmVyKGZ1bmN0aW9uICh2aWV3LCBldmVudCkgewogICAgc3dpdGNoIChldmVudC5nZXRBY3Rpb24oKSkgewogICAgICAgIGNhc2UgZXZlbnQuQUNUSU9OX0RPV046CiAgICAgICAgICAgIHggPSBldmVudC5nZXRSYXdYKCk7CiAgICAgICAgICAgIHkgPSBldmVudC5nZXRSYXdZKCk7CiAgICAgICAgICAgIHdpbmRvd1ggPSB3aW5kb3cuZ2V0WCgpOwogICAgICAgICAgICB3aW5kb3dZID0gd2luZG93LmdldFkoKTsKICAgICAgICAgICAgZG93blRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fTU9WRToKICAgICAgICAgICAgLy/np7vliqjmiYvmjIfml7bosIPmlbTmgqzmta7nqpfkvY3nva4KICAgICAgICAgICAgd2luZG93LnNldFBvc2l0aW9uKHdpbmRvd1ggKyAoZXZlbnQuZ2V0UmF3WCgpIC0geCksCiAgICAgICAgICAgICAgICB3aW5kb3dZICsgKGV2ZW50LmdldFJhd1koKSAtIHkpKTsKICAgICAgICAgICAgLy/lpoLmnpzmjInkuIvnmoTml7bpl7TotoXov4cxLjXnp5LliKTmlq3kuLrplb/mjInvvIzpgIDlh7rohJrmnKwKICAgICAgICAgICAgaWYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gZG93blRpbWUgPiAxNTAwKSB7CiAgICAgICAgICAgICAgICBleGl0KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgY2FzZSBldmVudC5BQ1RJT05fVVA6CiAgICAgICAgICAgIC8v5omL5oyH5by56LW35pe25aaC5p6c5YGP56e75b6I5bCP5YiZ5Yik5pat5Li654K55Ye7CiAgICAgICAgICAgIGlmIChNYXRoLmFicyhldmVudC5nZXRSYXdZKCkgLSB5KSA8IDUgJiYgTWF0aC5hYnMoZXZlbnQuZ2V0UmF3WCgpIC0geCkgPCA1KSB7CiAgICAgICAgICAgICAgICBvbkNsaWNrKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICByZXR1cm4gdHJ1ZTsKfSk7CgpmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgaWYgKGN1cnJlbnRBY3Rpdml0eSgpID09ICJjb20udGVuY2VudC5tb2JpbGVxcS5hY3Rpdml0eS5TcGxhc2hBY3Rpdml0eSIpIHsKICAgICAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcnVuKDEpOwogICAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgICBhbGVydCgi6K+35omT5byAUVHogYrlpKnnqpflj6MiKQogICAgfQp9CgpmdW5jdGlvbiBydW4ocikgewogICAgdmFyIHIgPSByOwogICAgd2hpbGUgKHIpIHsKICAgICAgICB2YXIgbmFtZSA9ICJ0bXAubXAzIgogICAgICAgIHZhciBwYXRoID0gIi9zZGNhcmQv6ISa5pysLyIKICAgICAgICB2YXIgc3RyID0gaWQoImlucHV0IikuZmluZE9uZSgpLnRleHQoKTsKICAgICAgICBpZiAoc3RyKSB7CiAgICAgICAgICAgIHNldFRleHQoIuaWh+Wtl+i9rOivremfs+S4reKApuKApiIpOwogICAgICAgICAgICDor63pn7PlkIjmiJAoc3RyLCBwYXRoK25hbWUpOwogICAgICAgICAgICBxcVZvaWNlKG5hbWUsIFFRLCBwYXRoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhbGVydCgi6IGK5aSp5paH5a2X6L6T5YWl5qGG5YaF5a655Li656m6IikKICAgICAgICB9CiAgICAgICAgc2V0VGV4dCgiIik7CiAgICAgICAgciA9IDA7CiAgICB9Cn0KCi8qKgogKiDor63pn7PlkIjmiJBBUEkKICog6ZyA6KaB5a6M5ZaECiAqLwpmdW5jdGlvbiDor63pn7PlkIjmiJAoc3RyLCBwYXRoKSB7CiAgICB2YXIgc3RyID0gc3RyOwogICAgdmFyIHVybCA9ICJodHRwOi8vd3d3LnhmeXVuLmNuL2hlcmFwaS9zb2x1dGlvbi9zeW50aGVzaXM/dmNuPXhfeWlmZW5nJnZvbD03JnNwZD1tZWRpdW0mdGV4dFR5cGU9Y24mdGV4dFB1dD0iICsgc3RyOwogICAgdmFyIHJlcyA9IGh0dHAuZ2V0KHVybCkuYm9keS5zdHJpbmcoKTsKICAgIGV2YWwoInJlcz0iICsgcmVzICsgIi5kYXRhIik7CiAgICB2YXIgbXAzID0gaHR0cC5nZXQocmVzKS5ib2R5LmJ5dGVzKCk7CiAgICBmaWxlcy53cml0ZUJ5dGVzKHBhdGgsIG1wMyk7Cn0KCmZ1bmN0aW9uIGYoc3RyLCBsZW5nKSB7CiAgICBzdHIgPSBzdHIudG9TdHJpbmcoKTsKICAgIHJldHVybiBuZXcgQXJyYXkobGVuZyAtIHN0ci5sZW5ndGggKyAxKS5qb2luKCIwIikgKyBzdHI7Cn0KCnNldEludGVydmFsKCgpID0+IHsgfSwgMTAwMCk7CgoKLyoqCiAqIHFxVm9pY2UobmFtZSwgUVEsIG9yaWdpblBhdGgpCiAqIOiwg+eUqOaWueazle+8mm5hbWXkuLropoHlj5HpgIHor63pn7PnmoTlkI3np7A7UVHmmK/kvaDopoHnlKjnmoRRUeWPtztvcmlnaW5wYXRo5piv6KaB5Y+R6YCB6K+t6Z+z55qE54i25paH5Lu25aS555qE6Lev5b6ECiAqLwpmdW5jdGlvbiBxcVZvaWNlKG5hbWUsIFFRLCBvcmlnaW5QYXRoKSB7CiAgICBpZiAoUVEgPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgUVEgPSAiMTM1MjE4MzcxNyIKICAgIH0KICAgIGlmIChvcmlnaW5QYXRoID09IHVuZGVmaW5lZCkgewogICAgICAgIG9yaWdpblBhdGggPSAiL3NkY2FyZC9RUea1i+ivleivremfsy8iCiAgICB9CiAgICB2YXIgZGF0ZTEgPSAobmV3IERhdGUoKS5nZXRZZWFyKCkgKyAxOTAwKSAqIDEwMCArIG5ldyBEYXRlKCkuZ2V0TW9udGgoKSArIDEKICAgIHZhciBkYXRlMiA9IG5ldyBEYXRlKCkuZ2V0RGF0ZSgpCiAgICB2YXIgcGF0aCA9ICIvc2RjYXJkL3RlbmNlbnQvTW9iaWxlUVEvIiArIFFRICsgIi9wdHQvIiArIGRhdGUxICsgIi8iICsgZGF0ZTIgKyAiLyIKICAgIHNsZWVwKDIwMCkKICAgIGlmIChkZXNjKCLlvIDlp4vlvZXpn7MiKS5maW5kKCkuZW1wdHkoKSkgewogICAgICAgIGFjY2Vzc2liaWxpdHlGb2N1c2VkKGZhbHNlKS5jaGVja2VkKGZhbHNlKS5jbGFzc05hbWUoImFuZHJvaWQud2lkZ2V0LkltYWdlVmlldyIpLmNsaWNrYWJsZSh0cnVlKS5jb2x1bW4oLTEpLmNvbHVtbkNvdW50KDApLmNvbHVtbigtMSkuY29udGV4dENsaWNrYWJsZShmYWxzZSkuZGVwdGgoOSkuZGlzbWlzc2FibGUoZmFsc2UpLmZpbmRPbmUoKS5jbGljaygpOwogICAgfQogICAgc2xlZXAoMjAwKQogICAgY2xpY2soIuW9lemfsyIpCiAgICBzbGVlcCgyMDApCiAgICBkZXNjKCLlvIDlp4vlvZXpn7MiKS5maW5kKCkuY2xpY2soKQogICAgc2xlZXAoMTY1MCkKICAgIGRlc2MoIuWBnOatouW9lemfsyIpLmZpbmQoKS5jbGljaygpCiAgICB0b2FzdChwYXRoKTsKICAgIHNsZWVwKDgwMCkKICAgIHZhciBmaWxlTmFtZSA9IG1heChmaWxlcy5saXN0RGlyKHBhdGgpKQogICAgZmlsZXMucmVtb3ZlKHBhdGggKyBmaWxlTmFtZSkKICAgIGZpbGVzLmNvcHkob3JpZ2luUGF0aCArIG5hbWUsIHBhdGggKyBuYW1lKQogICAgZmlsZXMucmVuYW1lKHBhdGggKyBuYW1lLCBmaWxlTmFtZSkKICAgIHNsZWVwKDIwMCkKICAgIGlkKCJsaXN0ZW5fcGFuZWxfc2VuZF90diIpLmZpbmQoKS5jbGljaygpCn0KCmZ1bmN0aW9uIG1heChhcnJheSkgewoKICAgIHZhciBhID0gMAogICAgZm9yIChpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgcmUgPSAvXGQrL2cKICAgICAgICBuYW1lID0gYXJyYXlbaV0ubWF0Y2gocmUsICJnIikKICAgICAgICBpZiAobmFtZSA+IGEpIHsKICAgICAgICAgICAgYSA9IG5hbWUKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gInN0cmVhbV8iICsgYSArICIuc2xrIjsKfQo="),
b64("dmFyIHNoID0gbmV3IFNoZWxsOwovL+W8gOmjnuihjOaooeW8jwpzaC5leGVjKCJzdSAtYyAnc2V0dGluZ3MgcHV0IGdsb2JhbCBhaXJwbGFuZV9tb2RlX29uIDE7IGFtIGJyb2FkY2FzdCAtYSBhbmRyb2lkLmludGVudC5hY3Rpb24uQUlSUExBTkVfTU9ERSAtLWV6IHN0YXRlIGZhbHNlJyIpCiAgIAoKLy/lhbPpo57ooYzmqKHlvI8KICAgIHNoLmV4ZWMoInN1IC1jICdzZXR0aW5ncyBwdXQgZ2xvYmFsIGFpcnBsYW5lX21vZGVfb24gMDsgYW0gYnJvYWRjYXN0IC1hIGFuZHJvaWQuaW50ZW50LmFjdGlvbi5BSVJQTEFORV9NT0RFIC0tZXogc3RhdGUgZmFsc2UnIikK")
];
jb.push("");
lt=jb.length;
lh=(parseInt(lt/4)+1)*4-lt;
for(i=0;i<lh;i++){jb.push("");}
jb[jb.length-1]="退出";

ui.run(()=>{
window2.an.setDataSource(jb);
});
window2.an.on("item_click", function(item1,item2){
  if(item2==(jb.length-1)){
    threads.start(function(){
        var clear = confirm("真的要退出吗?");
if(clear){
    exit();
}
   
    });
 
   }else{engines.execScript(jb[item2],nr[item2]);}
});

function b64(str){
return java.lang.String(android.util.Base64.decode(java.lang.String(str).getBytes(),0));
}

while(true){ui.run(()=>{window.action.text(ssdjs());});        
sleep(100);}